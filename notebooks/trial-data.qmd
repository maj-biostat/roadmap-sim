---
title: "Simulated trial data"

---

```{r, echo = FALSE}
source("./R/init.R")
log_info("Called trial-data notebook")
```


Trial data is simulated under the model specification, see earlier section.

```{r}
ll <- get_trial_data(N = 2500)

d_a <- ll$d[silo %in% c("late", "chronic"), .(y = sum(y), .N), keyby = .(silo, joint, ea, a, qa)]
d_b_late <- ll$d[silo %in% c("late") & a == "rev", .(y = sum(y), .N), keyby = .(silo, joint, qa, eb, b)]
d_b_chronic <- ll$d[silo %in% c("chronic") , .(y = sum(y), .N), keyby = .(silo, joint, qa, eb, b)]

d_b <- rbind(d_b_late, d_b_chronic)
d_c <- ll$d[ec == "Y", .(y = sum(y), .N), keyby = .(silo, joint, ec, c)]

d_all_grps <- ll$d[, .(y = sum(y), .N), keyby = .(silo, joint, ea, a, qa, eb, b, ec, c)]
```

@tbl-smry-Da shows a summary of simulated trial data for surgical domain.
Each row comprises patients allocated to the surgical domain intervention along with whatever their duration and type interventions were.

For example, late stage patients with knee joint infections receiving revision would include patients allocated to the duration options dependent on the planned surgical procedure and type options dependent on whether they were eligible for the type domain.

```{r}
#| label: tbl-smry-Da
#| tbl-cap: 'Summary of simulated trial data for surgical domain'
#| column: page

cols <- c("Silo", "Infection site", "Surgery", "Planned", "Success", "N", "Pr(success)")
names(cols) <- names(d_a[, .(silo, joint, a, qa, y, N, p_obs = y/N)])

gt_tbl <- d_a[, .(silo, joint, a, qa, y, N, p_obs = y/N)] |> 
  gt(
  ) |> 
  cols_align(
    align = "left",
    columns = starts_with(c("silo", "joint"))
  ) |> 
  fmt_number(
    columns = starts_with(c("p_obs")),
    decimals = 2
  ) |>
  grand_summary_rows(
    columns = c("y", "N"),
    fns = list(
      subtotal = ~ sum(., na.rm = TRUE)
    )
  ) |>
  cols_label(.list = cols)

gt_tbl
```

@tbl-smry-Db shows the analogous summary of simulated trial data for the duration domain.

```{r}
#| label: tbl-smry-Db
#| tbl-cap: 'Summary of simulated trial data for duration domain'
#| column: page


cols <- c("Silo", "Infection site", "Revision", "Duration", "Success", "N", "Pr(success)")
names(cols) <- names(d_b[, .(silo, joint, qa, b, y, N, p_obs = y/N)])

gt_tbl <- d_b[, .(silo, joint, qa, b, y, N, p_obs = y/N)] |> 
  gt(
  ) |> 
  cols_align(
    align = "left",
    columns = starts_with(c("silo", "joint"))
  ) |> 
  fmt_number(
    columns = starts_with(c("p_obs")),
    decimals = 2
  ) |>
  grand_summary_rows(
    columns = c("y", "N"),
    fns = list(
      subtotal = ~ sum(., na.rm = TRUE)
    )
  ) |>
  cols_label(.list = cols)

gt_tbl

```

@tbl-smry-Dc shows the analogous summary of simulated trial data for the type domain.

```{r}
#| label: tbl-smry-Dc
#| tbl-cap: 'Summary of simulated trial data for type domain'
#| column: page

cols <- c("Silo", "Infection site", "Type", "Success", "N", "Pr(success)")
names(cols) <- names(d_c[, .(silo, joint, c, y, N, p_obs = y/N)])

gt_tbl <- d_c[, .(silo, joint, c, y, N, p_obs = y/N)] |> 
  gt(
  ) |> 
  cols_align(
    align = "left",
    columns = starts_with(c("silo", "joint"))
  ) |> 
  fmt_number(
    columns = starts_with(c("p_obs")),
    decimals = 2
  ) |>
  grand_summary_rows(
    columns = c("y", "N"),
    fns = list(
      subtotal = ~ sum(., na.rm = TRUE)
    )
  ) |>
  cols_label(.list = cols)

gt_tbl
```

@tbl-smry-all shows the analogous summary of simulated trial data across all the combinations of silo, site of infection, domain membership and treatment allocation.
It gives a better sense of the structure of the data as seen by the model, but unfortunately, it is not possible to produce dynamic totals based on the filtered data.

```{r}
#| label: tbl-smry-all
#| tbl-cap: 'Summary of all groupings from simulated trial data'
#| column: page

d_tbl <- d_all_grps[, .(silo, joint, ea, a, qa, eb, b, ec, c, y, N, p_obs = round(y/N, 2))]
d_tbl[, silo := factor(silo, levels = c("early", "late", "chronic"))]
d_tbl[, joint := factor(joint, levels = c("knee", "hip"))]

setkey(d_tbl, silo, joint)

opts <- list(
  pageLength = 20, autoWidth = TRUE
  )

datatable(d_tbl,
          rownames = FALSE,
          colnames = c(
            'Silo' = 1, 
            'Infection site' = 2,
            'A' = 3,
            'A (trt)' = 4,
            'A (plan)' = 5,
            'B' = 6,
            'B (trt)' = 7,
            'C' = 8,
            'C (trt)' = 9,
            'Success' = 10,
            'N' = 11,
            'Pr(success)' = 12
            ),
          filter = 'top', options = opts
          )

```

