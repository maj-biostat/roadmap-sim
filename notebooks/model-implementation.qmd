---
title: "Model implementation"

---

```{r, echo = FALSE}
source("./R/init.R")
log_info("Called model-implementation notebook")
```



The simplest implementation I could think of split the data into silo-specific chunks, mimicking the formulation in the model specification earlier.
Nevertheless, the model is cumbersome.

```{r}
#| class-output: stan
#| echo: false
cat(readLines("stan/model-sim-02.stan"), sep = "\n")
```

Below I create a data set with many more records that we will have available in order to see if we can recover the parameters.
I fit the above model and then extract and summarise the posterior.

```{r}
m2 <- cmdstanr::cmdstan_model("stan/model-sim-02.stan")

set.seed(1)
ll <- get_trial_data(N = 5e4)
lsd <- get_stan_data(ll$d_i)
ld <- lsd$ld
# cbind(ld$l_su, ld$l_y, ld$l_n, ld$l_ea, ld$l_eap, ld$l_a)
d_b <- copy(lsd$d_b)

f2 <- m2$sample(
  ld, iter_warmup = 1000, iter_sampling = 2000,
  parallel_chains = 2, chains = 2, refresh = 0, show_exceptions = F, 
  max_treedepth = 13)

post <- data.table(f2$draws(variables = c(
  "eta"
), format = "matrix"))

# create index field
post <- melt(post, measure.vars = names(post))
post[, idx := gsub(".*\\[", "", variable)]
post[, idx := gsub("\\]", "", idx)]
post[, idx := as.integer(idx)]

d_fig <- cbind(d_b, post[, .(eta_med = median(value), 
         eta_q025 = quantile(value, prob = 0.025),
         eta_q975 = quantile(value, prob = 0.975)), keyby = idx])
```

@fig-post-vs-tru shows a comparison between the true log-odds of treatment success with the 95% credible interval obtained from the model.
It suggests a strong association between the true and estimated log-odds of treatment success for this particular dataset.

```{r}
#| label: fig-post-vs-tru
#| fig-cap: 'Scatter plot comparing true vs estimated 95% credible interval for log-odds treatment success.'
#| fig-cap-location: margin
#| fig-height: 6

ggplot(d_fig, aes(x = eta, y = eta_med)) +
  # geom_point() +
  geom_linerange(aes(ymin = eta_q025, ymax = eta_q975)) +
  geom_abline(intercept = 0, slope = 1, lwd = 0.1) +
  scale_x_continuous("True log-odds success") +
  scale_y_continuous("Posterior log-odds success (95% credible interval)") +
  facet_grid(silo ~ joint) +
  ggtitle("True log-odds success vs 95% credible interval")
```


```{r}
post <- data.table(f2$draws(variables = c(
    "alpha", "gamma_b", "gamma_c", 
    "b_a_l", 
    "b_b1_l", 
    "b_b2_l",
    "b_a_c",
    "b_b1_c", 
    "b_b2_c",
    "b_c"
  ), format = "matrix"))
  

# test outcome
cols <- names(post)
cols <- gsub("[","_",cols,fixed = T)
cols <- gsub("]","",cols,fixed = T)
names(post) <- cols
  
# effects
effs <- c(
  # domain a, late (revision) and chronic (two-stage)
  "b_a_l_2", "b_a_c_2", 
  # domain b, (late/revision one stage pts)
  # wk12p1 (ref is wk6p1)
  "b_b1_l_2", 
  # wk12p2 (ref is day7p2)
  "b_b2_l_2", 
  # wk12p1 (ref is wk6p1)
  "b_b1_c_2", 
  # wk12p2 (ref is day7p2)
  "b_b2_c_2",
  # rif (ref is no-rif)
  "b_c_2")
  
d_beta <- post[, .SD, .SDcols = effs]
d_beta <- melt(d_beta, measure.vars = names(d_beta))


parname_map <- roadmap.data::get_par_effects_mapping()
d_beta[, parname := parname_map[variable]]
d_beta[, parname := factor(parname, levels = roadmap.data::get_par_effects_mapping())]

d_fig <- d_beta[, .(
  lor_med = median(value), 
  lor_q025 = quantile(value, prob = 0.025),
  lor_q975 = quantile(value, prob = 0.975)), keyby = parname]

d_effects <- roadmap.data::get_sim_spec_effects(roadmap.data::get_sim_spec())
d_effects <- melt(d_effects, measure.vars = names(d_effects), value.name = "lor")

d_fig <- merge(d_fig, d_effects, by.x = "parname", by.y = "variable")

```


@fig-post-vs-tru shows a comparison between the true log-odds of treatment success with the 95% credible interval obtained from the model.
It suggests a strong association between the true and estimated log-odds of treatment success for this particular dataset.

```{r}
#| label: fig-post-lor
#| fig-cap: 'Posterior estimates for log-odds-ratios (true values shown as triangles).'
#| fig-cap-location: margin
#| fig-height: 4

ggplot(d_fig, aes(x = parname, y = lor_med)) +
  geom_point() +
  geom_point(data = d_fig, aes(x = parname, y = lor), pch = 2) +
  geom_linerange(aes(ymin = lor_q025, ymax = lor_q975))  +
  scale_x_discrete("") +
  scale_y_continuous("Posterior log-odds-ratio (95% credible interval)") 
```
