[
  {
    "objectID": "notebooks/simulation-pars.html",
    "href": "notebooks/simulation-pars.html",
    "title": "Simulation setup",
    "section": "",
    "text": "Various aspects of the initial conditions for the simulations are described.",
    "crumbs": [
      "Design",
      "Simulation setup"
    ]
  },
  {
    "objectID": "notebooks/simulation-pars.html#baseline-response",
    "href": "notebooks/simulation-pars.html#baseline-response",
    "title": "Simulation setup",
    "section": "Baseline response",
    "text": "Baseline response\nThe baseline probability/log-odds of treatment success is assumed to vary by silo and site of infection as detailed below.\n\n\nBaseline probability of treatment success by silo and site of infection\n\n\nSilo\nJoint\nPr(trt success)\nlog-odds\n\n\n\n\nearly\nknee\n0.65\n0.62\n\n\nearly\nhip\n0.75\n1.10\n\n\nlate\nknee\n0.55\n0.20\n\n\nlate\nhip\n0.6\n0.41\n\n\nchronic\nknee\n0.6\n0.41\n\n\nchronic\nhip\n0.65\n0.62",
    "crumbs": [
      "Design",
      "Simulation setup"
    ]
  },
  {
    "objectID": "notebooks/simulation-pars.html#accrual",
    "href": "notebooks/simulation-pars.html#accrual",
    "title": "Simulation setup",
    "section": "Accrual",
    "text": "Accrual\nAccrual is assumed to follow a non-homogeneous Poisson process event times with ramp up over the first 12 months of enrolment and then enrolment of around 1.5 per day.\n\n\nCode\n# events per day\nlambda = 1.52\n# ramp up over 12 months \nrho = function(t) pmin(t/360, 1)\n\nd_fig &lt;- data.table(\n  t = 0:(5 * 365),\n  # expected number enrolled\n  n = c(0, nhpp.mean(lambda, rho, t1 = 5 * 365, num.points = 5 * 365))\n)\n\nggplot(d_fig, aes(x = t/365, y = n)) +\n  geom_line() +\n  scale_x_continuous(\"Year\") +\n  scale_y_continuous(\"E[Accrual]\", breaks = seq(0, 2500, by = 500))\n\n\n\n\n\n\n\n\nFigure 1: Expected accrual",
    "crumbs": [
      "Design",
      "Simulation setup"
    ]
  },
  {
    "objectID": "notebooks/simulation-pars.html#domain-non-membership-effects",
    "href": "notebooks/simulation-pars.html#domain-non-membership-effects",
    "title": "Simulation setup",
    "section": "Domain non-membership effects",
    "text": "Domain non-membership effects\nWe assume a small effects for not being randomised to a domain for all domains.",
    "crumbs": [
      "Design",
      "Simulation setup"
    ]
  },
  {
    "objectID": "notebooks/simulation-pars.html#missingness",
    "href": "notebooks/simulation-pars.html#missingness",
    "title": "Simulation setup",
    "section": "Missingness",
    "text": "Missingness\nMissingness is not implemented.",
    "crumbs": [
      "Design",
      "Simulation setup"
    ]
  },
  {
    "objectID": "notebooks/simulation-pars.html#non-differential-follow-up",
    "href": "notebooks/simulation-pars.html#non-differential-follow-up",
    "title": "Simulation setup",
    "section": "Non-differential follow-up",
    "text": "Non-differential follow-up\nTo avoid artifacts associated with non-differential follow-up (e.g. early vs late deaths), participants will be included in the analyses only when they reach the primary endpoints (12 months) irrespective of whether they experienced treatment failure before that time.",
    "crumbs": [
      "Design",
      "Simulation setup"
    ]
  },
  {
    "objectID": "notebooks/about.html#repository-status",
    "href": "notebooks/about.html#repository-status",
    "title": "About",
    "section": "Repository status",
    "text": "Repository status\nDetails on GitHub repository files, tags, commits follow:\n\n\nCode\nrepo &lt;- git2r::repository(path = \".\")\nsummary(repo)\n\n\nLocal:    main /Users/mark/Documents/project/roadmap/src/roadmap-sim\nRemote:   main @ origin (https://github.com/maj-biostat/roadmap-sim.git)\nHead:     [70a8876] 2024-04-11: Minor edit\n\nBranches:          2\nTags:              0\nCommits:         131\nContributors:      2\nStashes:           0\nIgnored files:    33\nUntracked files:  35\nUnstaged files:    3\nStaged files:      0\n\nLatest commits:\n[70a8876] 2024-04-11: Minor edit\n[a6293f3] 2024-04-11: Number sims now based on cfg\n[8db358e] 2024-04-11: Minor edit\n[b05c23a] 2024-04-11: Add caveat\n[1ce3228] 2024-04-11: Re-introduce fixed sized trial sim",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "notebooks/decision-rules.html",
    "href": "notebooks/decision-rules.html",
    "title": "Decision rules",
    "section": "",
    "text": "In the following, all treatment effect parameters relate back to the model specification provided earlier.",
    "crumbs": [
      "Design",
      "Decision rules"
    ]
  },
  {
    "objectID": "notebooks/decision-rules.html#surgical-domain",
    "href": "notebooks/decision-rules.html#surgical-domain",
    "title": "Decision rules",
    "section": "Surgical domain",
    "text": "Surgical domain\nThe surgical domain considers the effect of revision relative to dair in the late-stage infection silo.\nFollowing the earlier model specification, let \\(\\Delta_R = \\beta_4 \\mathbb{E}[\\mathbb{I}(S_{R_P} == 1 \\land R == 1)] + \\beta_5 \\mathbb{E}[\\mathbb{I}(S_{R_P} == 2 \\land R == 1)]\\) correspond to the average conditional log-odds ratio associated with revision. The probability that revision is superior to dair is defined as:\n\\[\\begin{aligned}\nP_{\\text{surgical (sup)}} = Pr(\\Delta_R &gt; 0)\n\\end{aligned}\\]\nand enrolment is stopped for superiority if \\(P_{\\text{surgical (sup)}} &gt; 0.99\\).\nThe probability of futility for revision being superior to dair is defined as:\n\\[\\begin{aligned}\nP_{\\text{surgical (fut)}} = Pr(\\Delta_R &gt; \\log(1.2))\n\\end{aligned}\\]\nand enrolment is stopped for futility if \\(P_{\\text{surgical (fut)}} &lt; 0.05\\).",
    "crumbs": [
      "Design",
      "Decision rules"
    ]
  },
  {
    "objectID": "notebooks/decision-rules.html#duration-domain",
    "href": "notebooks/decision-rules.html#duration-domain",
    "title": "Decision rules",
    "section": "Duration domain",
    "text": "Duration domain\nThe duration domain considers the effect of short relative to long duration therapy depending on the type of revision received.\nIf, in the surgical domain, revision is found to be inferior to DAIR, then randomisation in the surgical domain will cease and DAIR will be recommended for all late acute who meet the domain eligibility criteria. But the duration domain will continue, because people in other silos will continue to have revision surgery (occasionally in Early and routinely in Chronic).\n\nDAIR\nNo duration effects are applicable for DAIR.\n\n\nOne-stage revision\nLet \\(\\beta_6\\) correspond to the conditional log-odds ratio associated with 6 weeks (short) duration antibiotics relative to 12 weeks (long) when one-stage revision is received. The probability that short is non-inferior to long is defined as:\n\\[\\begin{aligned}\nP_{\\text{duration-1 (ni)}} = Pr(\\beta_6 &gt; \\log(1/1.2))\n\\end{aligned}\\]\nand enrolment is stopped for non-inferiority if \\(P_{\\text{duration-1 (ni)}} &gt; 0.99\\) or \\(P_{\\text{duration-1 (ni)}} &lt; 0.2\\), the latter being taken to imply futility (with respect to being able to establish non-inferiority).\n\n\nTwo-stage revision\nLet \\(\\beta_8\\) correspond to the conditional log-odds ratio associated with 12 weeks (long) duration antibiotics relative to 7 days (short) when two-stage revision is received. The probability that long duration is superior to short is defined as:\n\\[\\begin{aligned}\nP_{\\text{duration-2 (sup)}} = Pr(\\beta_7 &gt; 0)\n\\end{aligned}\\]\nand enrolment is stopped for superiority if \\(P_{\\text{duration-2 (sup)}} &gt; 0.99\\).\nThe probability of futility for long duration being superior to short is defined as:\n\\[\\begin{aligned}\nP_{\\text{duration-2 (fut)}} = Pr(\\beta_7 &gt; \\log(1.2))\n\\end{aligned}\\]\nand enrolment is stopped for futility if \\(P_{\\text{duration-2 (fut)}} &lt; 0.05\\).",
    "crumbs": [
      "Design",
      "Decision rules"
    ]
  },
  {
    "objectID": "notebooks/decision-rules.html#choice-domain",
    "href": "notebooks/decision-rules.html#choice-domain",
    "title": "Decision rules",
    "section": "Choice domain",
    "text": "Choice domain\nThe choice domain considers the effect of rifampacin relative to no-rifampacin.\nLet \\(\\beta_{9}\\) correspond to the conditional log-odds ratio associated with rifampacin relative to no-rifampacin The probability that rifampacin is superior to no-rifampacin is defined as:\n\\[\\begin{aligned}\nP_{\\text{choice (sup)}} = Pr(\\beta_{9} &gt; 0)\n\\end{aligned}\\]\nand enrolment is stopped for superiority if \\(P_{\\text{choice (sup)}} &gt; 0.99\\).\nThe probability of futility for rifampacin being superior to no-rifampacin is defined as:\n\\[\\begin{aligned}\nP_{\\text{choice (fut)}} = Pr(\\beta_{9} &gt; \\log(1.2))\n\\end{aligned}\\]\nand enrolment is stopped for futility if \\(P_{\\text{choice (fut)}} &lt; 0.05\\).",
    "crumbs": [
      "Design",
      "Decision rules"
    ]
  },
  {
    "objectID": "notebooks/sim-design1-results.html",
    "href": "notebooks/sim-design1-results.html",
    "title": "Simulation results 1",
    "section": "",
    "text": "Simulation 1 is a fixed sized trial with decision criteria for superiority, and non-inferiority and also for futility with respect to both superiority and non-inferiority.\nWe provide summaries of each simulation scenario and the results that were obtained.\n\n\nLoad simulation results\n# files of interest\nflist &lt;- list.files(\"data\", pattern = \"sim01-sc01\")\ntoks &lt;- list()\nl &lt;- list()\nfor(i in 1:length(flist)){\n  l[[i]] &lt;- qs::qread(file.path(\"data\", flist[i]))\n  toks[[i]] &lt;-  unlist(tstrsplit(flist[i], \"[-.]\"))\n}\n\n\n\n\nConfiguration used for each simulated scenario\n# cfg used in each scenario\nd_cfg &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  m &lt;- data.table(do.call(cbind, l[[i]]$cfg))\n  data.table(cbind(sc = tok[2], v = tok[3], analys = 1:nrow(m), m))\n}))\n\n# conversion to numeric\nd_cfg[, `:=`(\n  nsim = as.numeric(nsim),\n  N_pt = as.numeric(N_pt),\n  b_r1 = as.numeric(b_r1),\n  b_r2 = as.numeric(b_r2),\n  w_srp2 = as.numeric(w_srp2),\n  b_r1d = as.numeric(b_r1d),\n  b_r2d = as.numeric(b_r2d),\n  b_f = as.numeric(b_f),\n  d_sup = as.numeric(thresh_sup),\n  d_ni = as.numeric(thresh_non_inf),\n  d_fut_sup = as.numeric(thresh_fut_sup),\n  d_fut_ni = as.numeric(thresh_fut_ni)\n  )]\n\nd_cfg[, `:=`(w_srp2 = NULL)]\n\n\n\n\nProcess simulation results for variables of interest\n# Decisions\ni &lt;- 1\n\n\nd_sup &lt;- rbindlist(lapply(seq_along(l), function(i){\n  cbind(sc = d_cfg[i, sc], v = d_cfg[i, v], l[[i]]$d_sup[, lapply(.SD, mean)])\n}))\nd_sup &lt;- melt(d_sup, id.vars = c(\"sc\", \"v\"), value.name = \"p\")\nd_sup[, type := \"sup\"]\n\nd_trt_ni_ref &lt;- rbindlist(lapply(seq_along(l), function(i){\n  cbind(sc = d_cfg[i, sc], v = d_cfg[i, v], l[[i]]$d_pr_trt_ni_ref[, lapply(.SD, mean)])\n}))\nd_trt_ni_ref &lt;- melt(d_trt_ni_ref, id.vars = c(\"sc\", \"v\"), value.name = \"p\")\nd_trt_ni_ref[, type := \"trt_ni_ref\"]\n\nd_fut_sup &lt;- rbindlist(lapply(seq_along(l), function(i){\n  cbind(sc = d_cfg[i, sc], v = d_cfg[i, v], l[[i]]$d_fut_sup[, lapply(.SD, mean)])\n}))\nd_fut_sup &lt;- melt(d_fut_sup, id.vars = c(\"sc\", \"v\"), value.name = \"p\")\nd_fut_sup[, type := \"fut_sup\"]\n\nd_fut_ni &lt;- rbindlist(lapply(seq_along(l), function(i){\n  cbind(sc = d_cfg[i, sc], v = d_cfg[i, v], l[[i]]$d_fut_trt_ni_ref[, lapply(.SD, mean)])\n}))\nd_fut_ni &lt;- melt(d_fut_ni, id.vars = c(\"sc\", \"v\"), value.name = \"p\")\nd_fut_ni[, type := \"fut_ni\"]\n\nd_dec &lt;- rbind(\n  d_sup, d_trt_ni_ref, d_fut_sup, d_fut_ni\n)\n\nn_sims &lt;- d_cfg$nsim[1]\nN_pt &lt;- d_cfg$N_pt[1]\n\n\n# Posterior summaries on effects of interest\nd_post_smry_2 &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  m &lt;- l[[i]]$d_post_smry_2\n  cbind(sc = tok[2], v = tok[3], m)\n}))\n\n# Participant data from trial (grouped)\nd_all &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  m &lt;- l[[i]]$d_grp\n  cbind(sc = tok[2], v = tok[3], m)\n}))\n\n\nTable 1 summarises the configurations used in each simulated scenario. Each treatment effect parameter is set to have the same magnitude of effect. The effects range from \\(\\log(1/2)\\) in scenario 1 to \\(\\log(2)\\) in scenario 7. Decision rules and thresholds remain constant over the entire enrolment period.\nRevision effects are computed as a weighted combination of the log-odds ratios for the one-stage and two-stage revision effects. The weights are the sample proportion receiving one-stage and two-stage surgery in those patients receiving randomised surgical treatment and randomised to revision.\n\n\nCode\nd_tbl &lt;- d_cfg[, .(v, N_pt, b_r1, b_r2, b_r1d, b_r2d, b_f, \n                   delta_sup = delta_sup,\n                   delta_sup_fut = delta_sup_fut,\n                   delta_ni = 1/delta_ni,\n                   thresh_sup, thresh_non_inf, thresh_fut_sup, thresh_fut_ni)]\n\ng_tbl &lt;- d_tbl |&gt; gt() |&gt; \n  cols_align(\n    columns = everything(),\n    align = \"center\"\n  )  |&gt; \n  fmt_number(\n    columns = c(b_r1, b_r2, b_r1d, b_r2d, b_f,\n                delta_ni\n                ),\n    decimals = 3\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Surgical (D&lt;sub&gt;a&lt;/sub&gt;)\"),\n    columns = c(b_r1, b_r2)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Duration (D&lt;sub&gt;b&lt;/sub&gt;)\"),\n    columns = c(b_r1d, b_r2d)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Type (D&lt;sub&gt;c&lt;/sub&gt;)\"),\n    columns = c(b_f)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Decision setup\"),\n    columns = c(delta_sup, thresh_sup, \n                delta_sup_fut, thresh_fut_sup, \n                delta_ni, thresh_non_inf, thresh_fut_ni)\n  ) |&gt;\n  cols_label(\n    v = html(\"Configuration\"),\n    b_r1 = html(\"rev&lt;br&gt;(one-stage)\"),\n    b_r2 = html(\"rev&lt;br&gt;(two-stage)\"),\n    b_r1d = html(\"short&lt;br&gt;(one-stage)\"),\n    b_r2d = html(\"short&lt;br&gt;(two-stage)\"),\n    b_f = html(\"rif\"),\n    delta_sup = html(\"delta&lt;sub&gt;sup&lt;/sub&gt;\"),\n    thresh_sup = html(\"p&lt;sub&gt;sup&lt;/sub&gt;\"),\n    delta_sup_fut = html(\"delta&lt;sub&gt;fut-sup&lt;/sub&gt;\"),\n    thresh_fut_sup = html(\"p&lt;sub&gt;fut-sup&lt;/sub&gt;\"),\n    delta_ni = html(\"delta&lt;sub&gt;ni&lt;/sub&gt;\"),\n    thresh_non_inf = html(\"p&lt;sub&gt;ni&lt;/sub&gt;\"),\n    thresh_fut_ni = html(\"p&lt;sub&gt;fut-ni&lt;/sub&gt;\")\n  ) |&gt;\n  tab_style(\n    style = list(\n      cell_borders(\n        sides = c(\"bottom\"), color = \"black\", weight = px(1), style = \"solid\"\n      )),\n    locations = list(\n      cells_body(\n        columns = everything(),\n        rows = N_pt == 2500\n      )\n    )\n  ) |&gt;\n  tab_options(\n    table.font.size = \"70%\"\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Surgical effects only applies to late silo, effect is relative to response under DAIR.\",\n    locations = cells_column_labels(columns = c(b_r1, b_r2))\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Applies to all silos, effect is relative to response under long duration.\",\n    locations = cells_column_labels(columns = b_r1d)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Applies to all silos, effect is relative to response under short duration.\",\n    locations = cells_column_labels(columns = b_r2d)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Applies to all silos, effect is relative to response under no-rifampicin\",\n    locations = cells_column_labels(columns = b_f)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Reference OR for evaluating superiority\",\n    locations = cells_column_labels(columns = delta_sup)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Probability threshold above which superiority is concluded\",\n    locations = cells_column_labels(columns = thresh_sup)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Reference OR for evaluating futility wrt the superiority decision\",\n    locations = cells_column_labels(columns = delta_sup_fut)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Probability threshold below which futility is concluded\",\n    locations = cells_column_labels(columns = thresh_fut_sup)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Reference OR for evaluating non-inferiority\",\n    locations = cells_column_labels(columns = delta_ni)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Probability threshold above which non-inferiority is concluded\",\n    locations = cells_column_labels(columns = thresh_non_inf)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Probability threshold below which non-inferiority decision is deemed futile\",\n    locations = cells_column_labels(columns = thresh_fut_ni)\n  )   \n\ng_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguration\nN_pt\nSurgical (Da)\nDuration (Db)\nType (Dc)\nDecision setup\n\n\nrev\n(one-stage)1\nrev\n(two-stage)1\nshort\n(one-stage)2\nshort\n(two-stage)3\nrif4\ndeltasup5\npsup6\ndeltafut-sup7\npfut-sup8\ndeltani9\npni10\npfut-ni11\n\n\n\n\nv01\n2500\n−0.693\n−0.693\n−0.693\n−0.693\n−0.693\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\nv02\n2500\n−0.405\n−0.405\n−0.405\n−0.405\n−0.405\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\nv03\n2500\n−0.182\n−0.182\n−0.182\n−0.182\n−0.182\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\nv04\n2500\n0.000\n0.000\n0.000\n0.000\n0.000\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\nv05\n2500\n0.182\n0.182\n0.182\n0.182\n0.182\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\nv06\n2500\n0.405\n0.405\n0.405\n0.405\n0.405\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\nv07\n2500\n0.693\n0.693\n0.693\n0.693\n0.693\n1\n0.975\n1.2\n0.05\n0.833\n0.975\n0.2\n\n\n\n1 Surgical effects only applies to late silo, effect is relative to response under DAIR.\n\n\n2 Applies to all silos, effect is relative to response under long duration.\n\n\n3 Applies to all silos, effect is relative to response under short duration.\n\n\n4 Applies to all silos, effect is relative to response under no-rifampicin\n\n\n5 Reference OR for evaluating superiority\n\n\n6 Probability threshold above which superiority is concluded\n\n\n7 Reference OR for evaluating futility wrt the superiority decision\n\n\n8 Probability threshold below which futility is concluded\n\n\n9 Reference OR for evaluating non-inferiority\n\n\n10 Probability threshold above which non-inferiority is concluded\n\n\n11 Probability threshold below which non-inferiority decision is deemed futile\n\n\n\n\n\n\n\n\n\nTable 1: Parameters used to simulate treatment effects and decision thresholds\n\n\n\n\nFigure 1 summarises the variation in the probability of declaring each decision type on each parameter with increasing effects size (odds ratios). The results based on 5000 simulations for a cohort sample size of 2500.\n\n\nCode\nd_fig &lt;- copy(d_dec)\n\nd_fig[, or := g_or_num[v]]\n\nd_fig[, type := factor(\n  type, levels = c(\"sup\", \"fut_sup\", \"trt_ni_ref\", \"fut_ni\"),\n  labels = c(\"sup\", \"fut_sup\", \"ni\", \"fut_ni\"))]\n\nggplot(d_fig, aes(x = or, y = p, group = type, col = type)) +\n  geom_point(size = 0.5) +\n  geom_line(lwd = 0.4) +\n  geom_hline(yintercept = 0.05, lwd = 0.4) +\n  ggthemes::scale_colour_tableau(\n    \"\", palette = \"Tableau 10\",\n  type = \"regular\",\n  direction = 1) +\n  scale_x_continuous(\"Odds-ratio\", breaks = seq(0, 2, by = 0.2)) +\n  scale_y_continuous(\"Proportion sims with decision\", breaks = seq(0, 1, by = 0.1)) +\n  facet_wrap(~variable, ncol = 2, scales = \"free\") \n\n\n\n\n\n\n\n\nFigure 1: Probability of declaring decision by parameter by effect size (all pars set with same OR).\n\n\n\n\n\nTable 2 shows the same detail as the above figure, but makes it easier to see what the magnitudes of the probabilities are.\n\n\nCode\n# Widen data so that power is shown by col with each col corresponding to an\n# analysis\nd_tbl &lt;- copy(d_fig)\nd_tbl &lt;- dcast(d_tbl, variable + or ~ type, value.var = \"p\")\nnames(d_tbl) &lt;- gsub(\"superiority\", \"sup\", names(d_tbl))\nnames(d_tbl) &lt;- gsub(\"futility\", \"fut\", names(d_tbl))\nnames(d_tbl) &lt;- gsub(\"trt ni ref\", \"trt_ni_ref\", names(d_tbl))\nd_tbl &lt;- d_tbl[order(variable, or)]\n\n\ng_tbl &lt;- d_tbl |&gt; gt(groupname_col = \"variable\") |&gt; \n  cols_label(\n    or = html(\"Odds ratio&lt;br&gt;(true)\"),\n    sup = html(\"Superiority\"),\n    fut_sup = html(\"Futility (sup)\"),\n    ni = html(\"NI (trt ni ref)\"),\n    fut_ni = html(\"Futility (ni)\"),\n  )  |&gt;\n  fmt_number(\n    columns = everything(),\n    decimals = 3\n  ) |&gt;\n  tab_style(\n    style = list(\n      cell_borders(\n        sides = c(\"top\", \"bottom\"), color = \"red\", weight = px(1), style = \"solid\"\n      )),\n    locations = list(\n      cells_body(\n        columns = everything(),\n        rows = or == \"1\"\n      )\n    )\n  ) |&gt;\n  tab_options(\n    table.font.size = \"80%\"\n  ) \n\ng_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOdds ratio\n(true)\nSuperiority\nFutility (sup)\nNI (trt ni ref)\nFutility (ni)\n\n\n\n\nb_r\n\n\n0.500\n0.000\n1.000\n0.003\n0.999\n\n\n0.667\n0.000\n0.999\n0.110\n0.819\n\n\n0.833\n0.001\n0.893\n0.503\n0.188\n\n\n1.000\n0.024\n0.420\n0.843\n0.009\n\n\n1.200\n0.282\n0.047\n0.977\n0.000\n\n\n1.500\n0.860\n0.000\n0.999\n0.000\n\n\n2.000\n1.000\n0.000\n1.000\n0.000\n\n\nb_r1d\n\n\n0.500\n0.000\n0.992\n0.051\n0.929\n\n\n0.667\n0.000\n0.881\n0.225\n0.585\n\n\n0.833\n0.002\n0.525\n0.513\n0.181\n\n\n1.000\n0.027\n0.207\n0.738\n0.034\n\n\n1.200\n0.133\n0.047\n0.890\n0.006\n\n\n1.500\n0.435\n0.003\n0.969\n0.000\n\n\n2.000\n0.801\n0.000\n0.995\n0.000\n\n\nb_r2d\n\n\n0.500\n0.000\n1.000\n0.011\n0.994\n\n\n0.667\n0.000\n0.987\n0.149\n0.740\n\n\n0.833\n0.001\n0.802\n0.500\n0.189\n\n\n1.000\n0.023\n0.331\n0.813\n0.018\n\n\n1.200\n0.223\n0.050\n0.955\n0.001\n\n\n1.500\n0.720\n0.002\n0.995\n0.000\n\n\n2.000\n0.976\n0.000\n1.000\n0.000\n\n\nb_f\n\n\n0.500\n0.000\n1.000\n0.001\n1.000\n\n\n0.667\n0.000\n1.000\n0.070\n0.895\n\n\n0.833\n0.000\n0.964\n0.508\n0.192\n\n\n1.000\n0.020\n0.512\n0.895\n0.005\n\n\n1.200\n0.401\n0.041\n0.992\n0.000\n\n\n1.500\n0.947\n0.000\n1.000\n0.000\n\n\n2.000\n1.000\n0.000\n1.000\n0.000\n\n\n\n\n\n\n\n\nTable 2: Probability of decision\n\n\n\n\nFigure 2 shows the distribution of estimated posterior means by simulated effect size, parameter and scenario.\n\n\n\n\n\n\n\n\nFigure 2: Distribution of posterior means (true log OR shown in red).",
    "crumbs": [
      "Design",
      "Simulation results 1"
    ]
  },
  {
    "objectID": "notebooks/model-implementation.html",
    "href": "notebooks/model-implementation.html",
    "title": "Model implementation",
    "section": "",
    "text": "The model used for the simulations translates the binary outcome into a binomial outcome by aggregating over the unique groups. For example with the linear predictor:\n# data generation process\nformals(roadmap.data::get_trial_data)$g\n\nfunction(d, sim_spec) {\n    a0 &lt;- sim_spec$a0\n    m &lt;- sim_spec$m\n    b &lt;- sim_spec$b\n    eta &lt;- a0 + m[\"l1\"] * d$l1 + m[\"l2\"] * d$l2 + (b[\"erx-r0\"] * \n        d$srp0 + b[\"erx-r1\"] * d$srp1 + b[\"erx-r2\"] * d$srp2) * \n        d$erx + (b[\"r1\"] * d$srp1 + b[\"r2\"] * d$srp2) * d$r * \n        d$er + (b[\"r1d\"] * d$d * d$srp1 + b[\"r2d\"] * d$d * d$srp2) * \n        d$ed + b[\"efx\"] * d$efx + b[\"f\"] * d$f * d$ef\n    eta\n}\nI get:\n# simulate data\nset.seed(1)\nsim_spec &lt;- roadmap.data::get_sim_spec()\n\nunlist(sim_spec)\n\n         a0        m.l1        m.l2    b.erx-r0    b.erx-r1    b.erx-r2 \n 0.61903921 -0.33718806 -0.08682239 -0.10000000  0.10000000  0.05000000 \n       b.r1        b.r2       b.r1d       b.r2d       b.efx         b.f \n 0.20000000  0.09000000  0.30000000  0.10000000  0.25000000  0.15000000 \n\nll &lt;- roadmap.data::get_trial_data(N = 2500, sim_spec = sim_spec)\nd &lt;- copy(ll$d)\nhead(d[, .(y = sum(y), n = .N), keyby = .(l, er, ed, ef, r, srp0, srp1, srp2, d, f)])\n\n   l er ed ef r srp0 srp1 srp2 d f   y   n\n1: 0  0  0  0 0    1    0    0 0 0 167 247\n2: 0  0  0  1 0    1    0    0 0 0 112 193\n3: 0  0  0  1 0    1    0    0 0 1 116 197\n4: 0  0  1  0 0    0    1    0 0 0  12  15\n5: 0  0  1  0 0    0    1    0 1 0  11  12\n6: 0  0  1  1 0    0    1    0 0 0   5   7\nThe columns correspond to:\nDuration domain depends on what surgery was received, NOT what was originally planned/assigned. For one-stage 12-weeks is reference group (indicated by 0) vs 6 weeks. For two-stage 7 days is reference group (indicated by 0) vs 12 weeks (1).\nWithin early, late and chronic stage infection, the percentage (by silo, l) receiving each surgery type (srp) as a randomised or non-randomised treatment (er) are:\nPercent receiving each surgery type within silo\nll &lt;- roadmap.data::get_trial_data(N = 1e6, sim_spec = sim_spec)\nd_tbl &lt;- ll$d[, .(n = .N), keyby = .(l, er, srp)]\nd_tbl[, N_l := sum(n), keyby = l]\nd_tbl[, pct := 100 * n / N_l]\nd_tbl[, N_l := NULL]\nd_tbl\n\n\n    l er srp      n        pct\n 1: 0  0   0 270730 90.0593121\n 2: 0  0   1  29883  9.9406879\n 3: 1  0   0   2028  0.4059987\n 4: 1  0   1   2332  0.4668585\n 5: 1  0   2   5717  1.1445239\n 6: 1  1   0 244552 48.9584772\n 7: 1  1   1  73803 14.7751092\n 8: 1  1   2 171077 34.2490325\n 9: 2  0   0  39954 19.9891934\n10: 2  0   1  40146 20.0852520\n11: 2  0   2 119778 59.9255546",
    "crumbs": [
      "Design",
      "Model implementation"
    ]
  },
  {
    "objectID": "notebooks/model-implementation.html#stan-implementation",
    "href": "notebooks/model-implementation.html#stan-implementation",
    "title": "Model implementation",
    "section": "Stan implementation",
    "text": "Stan implementation\nThe model spec can be translated into stan, albeit using a different likelihood spec:\n\n\n\n\ndata {\n  int N;\n  array[N] int y;\n  array[N] int n;\n  // variation due to silo/joint\n  vector[N] l1;\n  vector[N] l2;\n  // reveal\n  vector[N] er;\n  vector[N] ed;\n  vector[N] ef;\n  // surgery\n  vector[N] r;\n  // duration\n  vector[N] d;\n  // vector[N] rp; // revision was recvd\n  vector[N] srp0; // dair recvd\n  vector[N] srp1; // one-stage revision recvd\n  vector[N] srp2; // two-stage revision recvd\n  // choice\n  vector[N] f;\n  \n  vector[2] pri_m_sd;\n  vector[9] pri_b_sd;\n  int prior_only;\n}\ntransformed data{\n  vector[N] erx_srp0;\n  vector[N] erx_srp1;\n  vector[N] erx_srp2;\n  vector[N] er_r;\n  vector[N] er_r_srp1;\n  vector[N] er_r_srp2;\n  vector[N] ed_d_srp1;\n  vector[N] ed_d_srp2;\n  vector[N] ef_f;\n  \n  erx_srp0 = (1-er) .* srp0;\n  erx_srp1 = (1-er) .* srp1;\n  erx_srp2 = (1-er) .* srp2;\n  \n  er_r = er .* r;\n  \n  er_r_srp1 = er_r .* srp1;\n  er_r_srp2 = er_r .* srp2;\n\n// you can remove rp srp1 indicates one-stage happened, srp2 indicates two stage\n// the rp becomes redundant.\n  ed_d_srp1 = ed .* d .* srp1;\n  ed_d_srp2 = ed .* d .* srp2;\n\n  ef_f = ef .* f;\n}\nparameters {\n  real a0;\n  vector[2] m;\n  vector[9] b;\n}\ntransformed parameters{\n  vector[N] eta;\n \n  eta = a0 + \n      m[1]*l1 + m[2]*l2 +  \n      (b[1]*erx_srp0 + b[2]*erx_srp1 + b[3]*erx_srp2)  +\n      (b[4]*er_r_srp1 + b[5]*er_r_srp2) +\n      // b[6] * (1 - ed) + \n      (b[6]*ed_d_srp1 + b[7]*ed_d_srp2)  + \n      b[8] * (1 - ef) + (b[9]*ef_f);\n      \n}\nmodel{\n  target += normal_lpdf(a0 | 0, 1.5);\n  target += normal_lpdf(m | 0, pri_m_sd);\n  target += normal_lpdf(b | 0, pri_b_sd);\n  \n  // likelihood chunks pertaining to each silo\n  if(!prior_only){\n    target += binomial_logit_lpmf(y | n, eta) ;      \n  }\n  \n  \n}\ngenerated quantities{\n\n  vector[N] eta_r_0;\n  vector[N] eta_r_1;\n  vector[N] eta_d_0;\n  vector[N] eta_d_1;\n  vector[N] eta_f_0;\n  vector[N] eta_f_1;\n\n  {\n\n    // predictions on log-odds scale setting all participants to the level\n    // of interest, e.g. assume all have r = 0\n    eta_r_0   =  a0 +\n      m[1]*l1   + m[2]*l2 +\n      (b[1] * erx_srp0 + b[2] * erx_srp1 + b[3] * erx_srp2) +\n      // b[6] * (1 - ed  ) + \n      (b[6]*ed_d_srp1   + b[7]*ed_d_srp2)   +\n      b[8] * (1 - ef  ) + (b[9]*ef_f)  ;\n    // r = 1\n    // (only those revealed to surgery domain contribute due to the er term)\n    eta_r_1   =  a0 +\n      m[1]*l1   + m[2]*l2 +\n      // note the use of er here and not er_r, i.e. the r is set to 1 for\n      // everyone\n      (b[1] * erx_srp0 + b[2] * erx_srp1 + b[3] * erx_srp2) +\n      (b[4]*er .* srp1 + b[5]*er .* srp2) +\n      // b[6] * (1 - ed  ) + \n      (b[6]*ed_d_srp1   + b[7]*ed_d_srp2)   +\n      b[8] * (1 - ef  ) + (b[9]*ef_f);\n\n    // duration, d = 0\n    eta_d_0   =  a0 +\n      m[1]*l1 + m[2]*l2 +\n      (b[1] * erx_srp0 + b[2] * erx_srp1 + b[3] * erx_srp2) +\n      (b[4]*er_r_srp1 + b[5]*er_r_srp2) +\n      // b[6] * (1 - ed) +\n      b[8] * (1 - ef) + (b[9]*ef_f);\n    // d = 1\n    eta_d_1   =  a0 +\n      m[1]*l1 + m[2]*l2 +\n      (b[1] * erx_srp0 + b[2] * erx_srp1 + b[3] * erx_srp2) +\n      (b[4]*er_r_srp1 + b[5]*er_r_srp2) +\n      // note the use of ed and rp here and not ed_rp_d_srp1, i.e. the d is\n      // set to 1 for everyone\n      // b[6] * (1 - ed) + \n      (b[6]*ed .* srp1 + b[7]*ed .* srp2)  +\n      b[8] * (1 - ef) + (b[9]*ef_f);\n\n    // choice, f = 0\n    eta_f_0   =  a0 +\n      m[1]*l1 + m[2]*l2 +\n      (b[1] * erx_srp0 + b[2] * erx_srp1 + b[3] * erx_srp2) +\n      (b[4]*er_r_srp1 + b[5]*er_r_srp2) +\n      // b[6] * (1 - ed) + \n      (b[6]*ed_d_srp1 + b[7]*ed_d_srp2)  +\n      b[8] * (1 - ef)  ;\n    // f = 1\n    eta_f_1   =  a0 +\n      m[1]*l1 + m[2]*l2 +\n      (b[1] * erx_srp0 + b[2] * erx_srp1 + b[3] * erx_srp2) +\n      (b[4]*er_r_srp1 + b[5]*er_r_srp2) +\n      // b[6] * (1 - ed) + \n      (b[6]*ed_d_srp1 + b[7]*ed_d_srp2)  +\n      // note the use of ef here and not ef_f\n      b[8] * (1 - ef) + (b[9]*ef);\n\n  }\n\n}\n\n\nThe model is fitted to a large dataset and the posterior summarised to determine if the parameter estimates approximate the known values.\n\n\n\n\n\n\nNote\n\n\n\n\n\nThere are some terms in the model that under ‘ideal’ situation, i.e. where all patients are revealed as initially intended, that may cause estimation problems. These issues can manifest as sluggish MCMC or weird NA terms appearing in the regression results. In general an NA in the regression results from lm means that the coefficient is not estimable. This can happen due to exact collinearity, e.g. when Q3 = a Q1 + b Q2 + c for some a, b and c, but, it can also happen due to not having enough observations to estimate the relevant parameters (e.g. if p &gt;&gt; n). If you predictors are categorical and you’re adding interaction terms, an NA can also mean that there are no observations with that combination of levels of the factors.\n\n\n\n\n\nCode\nm4 &lt;- cmdstanr::cmdstan_model(\"stan/model-sim-04.stan\")\n\nset.seed(1)\n\nsim_spec &lt;- roadmap.data::get_sim_spec()\nsim_spec$a0  &lt;- qlogis(0.65)\nsim_spec$m[\"l1\"] &lt;- 0.57\nsim_spec$m[\"l2\"] &lt;- 0.64\nsim_spec$b[\"erx-r0\"] &lt;- -0.1\nsim_spec$b[\"erx-r1\"] &lt;- 0.1\nsim_spec$b[\"erx-r2\"] &lt;- 0.05\nsim_spec$b[\"r1\"] &lt;- -0.6931472\nsim_spec$b[\"r2\"] &lt;- -0.6931472\nsim_spec$b[\"r1d\"] &lt;- -0.6931472\nsim_spec$b[\"r2d\"] &lt;- -0.6931472\nsim_spec$b[\"efx\"] &lt;- -0.2\nsim_spec$b[\"f\"] &lt;- -0.6931472\n\n\nll &lt;- roadmap.data::get_trial_data(N = 2e6, sim_spec = sim_spec)\nlsd &lt;- roadmap.data::get_stan_data(ll$d)\n\nd &lt;- copy(ll$d)\nd_s &lt;- copy(lsd$d_s)\nld &lt;- lsd$ld\n\nf1 &lt;- m4$sample(\n  ld, iter_warmup = 1000, iter_sampling = 2000,\n  parallel_chains = 2, chains = 2, refresh = 0, show_exceptions = F,\n  max_treedepth = 13)\n\n\nRunning MCMC with 2 parallel chains...\n\nChain 1 finished in 1.5 seconds.\nChain 2 finished in 1.5 seconds.\n\nBoth chains finished successfully.\nMean chain execution time: 1.5 seconds.\nTotal execution time: 1.6 seconds.\n\n\nCode\n# See note above. edx is dropped from the model as it is collinear with\n# srp1 and srp2 and leads to an estimation issue.\n\nf2 &lt;- glm(y ~ l1 + l2 +\n            erx:srp0 + erx:srp1 + erx:srp2 +\n            er:r:srp1 + er:r:srp2 +\n            ed:d:srp1 + ed:d:srp2 +\n            efx + ef:f,  \n          data = d, family = binomial())\n\n# summary(f2)\n\n# dtmp &lt;- data.table(model.matrix(f2)) \n# dtmp &lt;- cbind(model.matrix(f2), tot = 0)\n# pracma::rref(dtmp)\n# d_s\n\n# dtmp &lt;- data.table(model.matrix(f2))\n# \n# rref(dtmp)\n# dtmp.mean &lt;- apply(dtmp, 2, mean)\n# dtmp &lt;- sweep(dtmp, 2, dtmp.mean)\n# \n# f3 &lt;- prcomp(dtmp)\n# print(f3)\n# \n# # Fairly unsafe - checking for full rank on removal of each var\n# linearly_dep_cols(f2)\n\n\nThe parameter estimates align reasonably well to the simulation parameters used in the linear predictor:\n\n\nCode\npost1 &lt;- data.table(f1$draws(variables = c(c(\"a0\", \"m\", \"b\")), format = \"matrix\"))\ncf &lt;- coef(f2)\n\nround(rbind(\n  \"Simulation parameters\" = c(sim_spec$a0, sim_spec$m, sim_spec$b),\n  \"Posterior means\" = colMeans(post1),\n  \"Max likelihood\" = c(\n    cf[1:3], \n    cf[\"erx:srp0\"], cf[\"erx:srp1\"], cf[\"erx:srp2\"], \n    cf[\"srp1:er:r\"], cf[\"srp2:er:r\"] , \n    cf[\"srp1:ed:d\"], cf[\"srp2:ed:d\"],\n    cf[\"efx\"], cf[\"ef:f\"]\n  )\n), 4)\n\n\n                                 l1     l2  erx-r0 erx-r1 erx-r2      r1\nSimulation parameters 0.6190 0.5700 0.6400 -0.1000 0.1000 0.0500 -0.6931\nPosterior means       0.6254 0.5600 0.6343 -0.1091 0.0841 0.0574 -0.7023\nMax likelihood        0.6257 0.5596 0.6342 -0.1095 0.0839 0.0572 -0.7023\n                           r2     r1d     r2d     efx       f\nSimulation parameters -0.6931 -0.6931 -0.6931 -0.2000 -0.6931\nPosterior means       -0.6928 -0.6787 -0.7005 -0.1975 -0.6914\nMax likelihood        -0.6926 -0.6787 -0.7006 -0.1976 -0.6914",
    "crumbs": [
      "Design",
      "Model implementation"
    ]
  },
  {
    "objectID": "notebooks/model-implementation.html#estimation---g-computation",
    "href": "notebooks/model-implementation.html#estimation---g-computation",
    "title": "Model implementation",
    "section": "Estimation - G-computation",
    "text": "Estimation - G-computation\nThis section is now incomplete due to the revised model specification.\n\n\n\n\n\n\nNote\n\n\n\n\n\nCalculations based on Bayesian model are complicated by virtue of use of binomial instead of bernoulli likelihood. To deal with this, we weight the log-odds contributions by the number of trials associated with each unique combination.\n\n\n\nPredictions on log-odds scale:\n\neta_r_0 &lt;- f1$draws(variables = c(\"eta_r_0\"), format = \"matrix\")\neta_r_1 &lt;- f1$draws(variables = c(\"eta_r_1\"), format = \"matrix\")\neta_d_0 &lt;- f1$draws(variables = c(\"eta_d_0\"), format = \"matrix\")\neta_d_1 &lt;- f1$draws(variables = c(\"eta_d_1\"), format = \"matrix\")\neta_f_0 &lt;- f1$draws(variables = c(\"eta_f_0\"), format = \"matrix\")\neta_f_1 &lt;- f1$draws(variables = c(\"eta_f_1\"), format = \"matrix\")\n\nThe G-formula allows you to go from a conditional estimate to a marginal one via standardisation or other means.\n\n# g-comp - calculations are complicated by virtue of use of binomial\n# instead of bernoulli model. Approach is to weight the log-odds contributions\n# by the number of trials associated with each unique combination.\n\nmax_rows &lt;- 1000\n\n# Compute the effect of revision\nb_r &lt;- do.call(rbind, mclapply(1:(min(nrow(eta_r_0), max_rows)), function(ii){\n  \n  # columns in eta_r_0 correspond to the covariate groups, i.e. the rows in d_s\n  \n  # The repitition gives the right contribution (weight) for each covariate \n  # combination i.e. each column (covariate combination) is replicated by \n  # the number of pts with this covariate combination. \n  \n  # This first one is averaged across both non-reveal and revealed. It is not\n  # what we want\n  lo_0 &lt;- eta_r_0[ii, rep(1:nrow(d_s), times = ld$n)]\n  lo_1 &lt;- eta_r_1[ii, rep(1:nrow(d_s), times = ld$n)]\n  mu_r = mean(lo_1 - lo_0)\n  \n  # Should be no effect of rev in those that were not rand to surg\n  # idx &lt;- d_s[er == 0 , which = T]\n  # lo_0_erx &lt;- eta_r_0[ii, rep(idx, times = ld$n[idx])]\n  # lo_1_erx &lt;- eta_r_1[ii, rep(idx, times = ld$n[idx])]\n  # mu_r_erx &lt;- sum(lo_1_erx - lo_0_erx) / sum(ld$n[idx])\n  \n  # Finally, these give the effect in those revealed to surgery domain. This\n  # is what we want.\n  idx &lt;- d_s[er == 1 , which = T]\n  lo_0_erx &lt;- eta_r_0[ii, rep(idx, times = ld$n[idx])]\n  lo_1_erx &lt;- eta_r_1[ii, rep(idx, times = ld$n[idx])]\n  mu_r_er &lt;- sum(lo_1_erx - lo_0_erx) / sum(ld$n[idx])\n  \n  # avg effect then effect in non-reveal and reveal\n  c(\"mu_r\" = mu_r, \n    # \"mu_r_erx\" = mu_r_erx, \n    \"mu_r_er\" = mu_r_er)\n}, mc.cores = 10))\n\n\n# Compute the effect of duration for the pt that received one-stage\n# and for those that received two-stage surgery.\nb_d &lt;- do.call(rbind, mclapply(1:(min(nrow(eta_d_0), max_rows)), function(ii){\n  \n  lo_0 &lt;- eta_d_0[ii, rep(1:nrow(d_s), times = ld$n)]\n  lo_1 &lt;- eta_d_1[ii, rep(1:nrow(d_s), times = ld$n)]\n\n  # stratification, silo/revision type that actually took place\n  # idx &lt;- d_s[ed == 0 & srp2 == 0, which = T]\n  # lo_0_edx_srp1 &lt;- eta_d_0[ii, rep(idx, times = ld$n[idx])]\n  # lo_1_edx_srp1 &lt;- eta_d_1[ii, rep(idx, times = ld$n[idx])]\n  # mu_d_edx_srp1 &lt;- sum(lo_1_edx_srp1 - lo_0_edx_srp1) / sum(ld$n[idx])\n  # \n  # idx &lt;- d_s[ed == 0 & srp2 == 1, which = T]\n  # lo_0_edx_srp2 &lt;- eta_d_0[ii, rep(idx, times = ld$n[idx])]\n  # lo_1_edx_srp2 &lt;- eta_d_1[ii, rep(idx, times = ld$n[idx])]\n  # mu_d_edx_srp2 &lt;- sum(lo_1_edx_srp2 - lo_0_edx_srp2) / sum(ld$n[idx])\n\n  idx &lt;- d_s[ed == 1 & srp2 == 0, which = T]\n  lo_0_ed_srp1 &lt;- eta_d_0[ii, rep(idx, times = ld$n[idx])]\n  lo_1_ed_srp1 &lt;- eta_d_1[ii, rep(idx, times = ld$n[idx])]\n  mu_d_ed_srp1 &lt;- sum(lo_1_ed_srp1 - lo_0_ed_srp1) / sum(ld$n[idx])\n\n  idx &lt;- d_s[ed == 1 & srp2 == 1, which = T]\n  lo_0_ed_srp2 &lt;- eta_d_0[ii, rep(idx, times = ld$n[idx])]\n  lo_1_ed_srp2 &lt;- eta_d_1[ii, rep(idx, times = ld$n[idx])]\n  mu_d_ed_srp2 &lt;- sum(lo_1_ed_srp2 - lo_0_ed_srp2) / sum(ld$n[idx])\n\n  c(\"mu_d\" = mean(lo_1 - lo_0), \n    # you need to base the mean on the n that were used in the strata\n    # \"mu_d_edx_srp1\" = mu_d_edx_srp1,  \"mu_d_edx_srp2\" = mu_d_edx_srp2,\n    \"mu_d_ed_srp1\" = mu_d_ed_srp1, \"mu_d_ed_srp2\" = mu_d_ed_srp2\n    )\n  \n}, mc.cores = 10))\n\n# Compute the effect of AB choice.\nb_f &lt;- do.call(rbind, mclapply(1:(min(nrow(eta_f_0), max_rows)), function(ii){\n  \n  # Avg effect of rif - what is the effect of rif in the sample population\n  # Might be wrong, but don't believe this is a meaningful/useful quantity.\n  lo_0 &lt;- eta_f_0[ii, rep(1:nrow(d_s), times = ld$n)]\n  lo_1 &lt;- eta_f_1[ii, rep(1:nrow(d_s), times = ld$n)]\n  mu_f &lt;- mean(lo_1 - lo_0)\n  \n  # Should be no effect of rif in those that were not rand to choice\n  # idx &lt;- d_s[ef == 0 , which = T]\n  # lo_0_efx &lt;- eta_f_0[ii, rep(idx, times = ld$n[idx])]\n  # lo_1_efx &lt;- eta_f_1[ii, rep(idx, times = ld$n[idx])]\n  # mu_f_efx &lt;- sum(lo_1_efx - lo_0_efx) / sum(ld$n[idx])\n\n  # Effect of rif in those rand to choice domain\n  idx &lt;- d_s[ef == 1 , which = T]\n  lo_0_ef &lt;- eta_f_0[ii, rep(idx, times = ld$n[idx])]\n  lo_1_ef &lt;- eta_f_1[ii, rep(idx, times = ld$n[idx])]\n  mu_f_ef &lt;- sum(lo_1_ef - lo_0_ef) / sum(ld$n[idx])\n  \n  c(\"mu_f\" = mu_f, \n    # \"mu_f_efx\" = mu_f_efx, \n    \"mu_f_ef\" = mu_f_ef)\n}, mc.cores = 10))\n\nThe following provides the results and also comparisons to combinations of parameters used in data simulation.\nFor the surgery domain, the comparison of interest is dair (ref) vs revision, which can be obtained by averaging over the distribution of surgery type that took place. The revision effects are silo-specific in that only the late silo is randomised which we obtain by producing a conditional treatment effect by stratifying on the reveal status (er).\n\n\n\n\n\n\nWarning\n\n\n\n\n\nI don’t believe that we currently need to worry about differential selection (\\(\\mathbb{P}(S=s|G=1)\\ne\\mathbb{P}(S=s|G=2)\\)) because only one silo is contributing to the randomised comparison and I think we are restricting to that silo by virtue of conditiong on er.\n\n\n\n\n# dair (ref)  vs revision (of any form)\navg_comparisons(f2, variables = \"r\", comparison = \"lnor\")\n\n\n Term              Contrast Estimate Std. Error    z Pr(&gt;|z|)   S  2.5 % 97.5 %\n    r ln(odds(1) / odds(0))    -0.17    0.00118 -144   &lt;0.001 Inf -0.173 -0.168\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n# The above call to avg_comparisons is equivalent to:\n# w_eta_r0 &lt;- sweep(eta_r0, 1, ld$n, \"*\")\nd_new &lt;- copy(d)\nlo &lt;- copy(d_new[, r := 0])\nd_new &lt;- copy(d)\nhi &lt;- copy(d_new[, r := 1])\ny_lo &lt;- predict(f2, newdata = lo)\ny_hi &lt;- predict(f2, newdata = hi)\nmean(y_hi - y_lo)\n\n[1] -0.170319\n\n# But we are only interested in the effect of r in the group that were revealed.\n# The following, in avg_comparisons, does not make sense to me. Need to revisit.\n# cmp &lt;- avg_comparisons(f2, newdata = d[er == 1 & r == 1], variables = \"r\", comparison = \"lnor\")\n# print(cmp, digits = 6)\n\n# The randomised comparison should approx map to a weighted combination of the pars.\n# The reason that the weights are computed conditional on r == 1 is so that we are\n# weight by the proportion within the revision group that receive each revision type \n# (approx 30% one-stage, 70% two-stage) and not the proportion receiving each revision \n# type over all those that received randomised surgery (approx 50% dair, 15% one, 35% two).\nmean(d[er == 1 & r == 1, mean(srp1)] * post1$`b[4]` + d[er == 1 & r == 1, mean(srp2)] * post1$`b[5]`) \n\n[1] -0.695645\n\n\nThe above series of outputs suggest somewhat that we are able to recover the required parameters using various approaches.\nFor the choice domain, the comparison of interest is no-rf (ref) vs rif, which can be obtained directly from the parameter estimate that characterised the effects of the randomised comparisons. Choice domain effects reflect an average over the silos since all silos can enter this domain.\n\n# no-rif (ref)  vs rif (of any form)\n# NO - avg_comparisons(f2, variables = \"f\", comparison = \"lnor\")\n# We are only interested in the effect of choice for those revealed to choice\n# cmp &lt;- avg_comparisons(f2, newdata = d[ef == 1], variables = \"f\", comparison = \"lnor\")\n# print(cmp, digits = 6)\n\n# colMeans(b_f)\n# And this should just be the same as the coefficient from the model\nmean(post1$`b[9]`)\n\n[1] -0.6914353\n\n\nFor the duration domain, the comparison of interest can be obtained directly from the parameter estimates that characterised the effects of the randomised comparisons. Duration domain effects are also currently reflecting an average over the silos.\n\n# long (ref) vs short (specific to the type of surg recvd - one or two stage)\n\ncmp &lt;- avg_comparisons(f2, newdata = d[ed == 1 ], variables = \"d\", comparison = \"lnor\", by = \"d\")\nprint(cmp, digits = 6)\n\n\n Term              Contrast d  Estimate Std. Error        z Pr(&gt;|z|)   S\n    d ln(odds(1) / odds(0)) 0 -0.656909 0.00421194 -155.963  &lt; 0.001 Inf\n    d ln(odds(1) / odds(0)) 1 -0.656735 0.00421091 -155.960  &lt; 0.001 Inf\n     2.5 %    97.5 %\n -0.665164 -0.648654\n -0.664988 -0.648481\n\nColumns: term, contrast, d, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\ncmp &lt;- avg_comparisons(f2, newdata = d[ed == 1 & srp2 == 1], variables = \"d\", comparison = \"lnor\")\nprint(cmp, digits = 6)\n\n\n Term              Contrast  Estimate Std. Error        z Pr(&gt;|z|)   S\n    d ln(odds(1) / odds(0)) -0.700637   0.005446 -128.652  &lt; 0.001 Inf\n     2.5 %    97.5 %\n -0.711311 -0.689963\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n# colMeans(b_d)\n\n# The randomised comparison should approx map directly to the surg type \n# specific pars \nmean(post1$`b[6]`) \n\n[1] -0.6786935\n\nmean(post1$`b[7]` ) \n\n[1] -0.7005013\n\n\nBased on the above, we seem to be in the right ballpark.",
    "crumbs": [
      "Design",
      "Model implementation"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html",
    "href": "notebooks/population-structure.html",
    "title": "Population structure",
    "section": "",
    "text": "The following provides some detail on the assumptions relating to important design variables. The outcome model is specified separately.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#silo",
    "href": "notebooks/population-structure.html#silo",
    "title": "Population structure",
    "section": "Silo",
    "text": "Silo\nThe total sample size is divided across the silos in proportion to the values described in the table below. Each simulated dataset will vary somewhat from these proportions due to the stochastic nature of the data generation process.\n\n\nSilo categories (\\(\\pi\\) denotes probability of membership)\n\n\nSilo\n\\(\\pi\\)\n\n\n\n\nearly\n0.3\n\n\nlate\n0.5\n\n\nchronic\n0.2",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#site-of-infection-joint",
    "href": "notebooks/population-structure.html#site-of-infection-joint",
    "title": "Population structure",
    "section": "Site of infection (joint)",
    "text": "Site of infection (joint)\nEach silo comprises patients assumed to have primary infection in either knee or hip (not both). The assumed proportion of infections for each joint and for each silo are shown below.\n\n\nSite of infection (\\(\\pi\\) denotes probability of site infection conditional on silo membership)\n\n\nSilo\nJoint\n\\(\\pi\\)\n\n\n\n\n\nearly\nknee\n0.4\n\n\n\nearly\nhip\n0.6\n\n\n\nlate\nknee\n0.7\n\n\n\nlate\nhip\n0.3\n\n\n\nchronic\nknee\n0.5\n\n\n\nchronic\nhip\n0.5",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#randomisation-into-surgery-domain-a",
    "href": "notebooks/population-structure.html#randomisation-into-surgery-domain-a",
    "title": "Population structure",
    "section": "Randomisation into surgery domain (A)",
    "text": "Randomisation into surgery domain (A)\nOnly the late-stage infection cohort has randomisation options for surgery type. Other silos are assigned by clinician/patient preference.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#surgery-domain-a",
    "href": "notebooks/population-structure.html#surgery-domain-a",
    "title": "Population structure",
    "section": "Surgery domain (A)",
    "text": "Surgery domain (A)\nOnly late stage patients enter the surgery domain and are randomised 1:1 to DAIR/revision. The clinician selects what type of revision to perform.\nEarly stage patients do not receive randomisation and are assumed to mostly receive DAIR, although they may have any form of surgery. Chronic stage patients do not receive randomisation and are assumed to receive DAIR, one-stage and two-stage based on clinician assessment.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#intended-surgery",
    "href": "notebooks/population-structure.html#intended-surgery",
    "title": "Population structure",
    "section": "Intended surgery",
    "text": "Intended surgery\nThe planned surgery will be based on a range of factors including clinician preference, hospital protocols etc.\nFor early stage infection patients, we assume the proportion of dair, one and two-stage surgery to be 90%, 10% and 0%.\nFor late stage infection patients randomised to revision, we assume that the preferences for one and two-stage are 30% and 70%. For late stage infection patients randomised to dair, we assume that the preferences for dair, one and two-stage are 20%, 24% and 56%.\nFor chronic stage infection patients, we assume that the preferences for dair, one and two-stage are 20%, 20% and 60%.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#randomisation-into-duration-domain-b",
    "href": "notebooks/population-structure.html#randomisation-into-duration-domain-b",
    "title": "Population structure",
    "section": "Randomisation into duration domain (B)",
    "text": "Randomisation into duration domain (B)\nEntry into domain B is dependent on the surgery that was actually received.\nSurgery received is dependent on whether surgery was randomised (as in late infection patients) and what the surgical preference is (as in chronic infection patients).\nThe surgery received may deviate from the original randomised allocation or preferred approach (in the case where randomisation was not applicable).",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#duration-domain-b",
    "href": "notebooks/population-structure.html#duration-domain-b",
    "title": "Population structure",
    "section": "Duration domain (B)",
    "text": "Duration domain (B)\nWithin the duration domain, allocation is to long vs short duration, the meaning of which differs under one and two-stage surgery. Patients receiving DAIR are assumed to have 12 wk duration (not randomised). The default randomisation is 1:1 for long vs short within surgery type.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#randomisation-into-antibiotic-choice-domain-c",
    "href": "notebooks/population-structure.html#randomisation-into-antibiotic-choice-domain-c",
    "title": "Population structure",
    "section": "Randomisation into antibiotic choice domain (C)",
    "text": "Randomisation into antibiotic choice domain (C)\nThe data generating process assumes that 60% of the total sample enter into this domain at random, unrelated to risk factors.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#antibiotic-choice-domain-c",
    "href": "notebooks/population-structure.html#antibiotic-choice-domain-c",
    "title": "Population structure",
    "section": "Antibiotic choice domain (C)",
    "text": "Antibiotic choice domain (C)\nThe treatment options and allocation probabilities for domain C are 1:1.",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "notebooks/population-structure.html#encoded-specification",
    "href": "notebooks/population-structure.html#encoded-specification",
    "title": "Population structure",
    "section": "Encoded specification",
    "text": "Encoded specification\nThe above specification is bundled into an R package (roadmap.data) for consistent data generation for ROADMAP.\n\nroadmap.data::get_pop_spec()\n\n$r_silo\n  early    late chronic \n    0.3     0.5     0.2 \n\n$r_joint\n        knee hip\nearly    0.4 0.6\nlate     0.7 0.3\nchronic  0.5 0.5\n\n$r_a\n$r_a$early\n[1] NA\n\n$r_a$late\ndair  rev \n 0.5  0.5 \n\n$r_a$chronic\n[1] NA\n\n\n$r_a_q\n$r_a_q$early\ndair  one  two \n 0.9  0.1  0.0 \n\n$r_a_q$late\ndair  one  two \n0.20 0.24 0.56 \n\n$r_a_q$chronic\ndair  one  two \n 0.2  0.2  0.6 \n\n\n$r_b\n$r_b$dair\n[1] NA\n\n$r_b$one\n long short \n  0.5   0.5 \n\n$r_b$two\n long short \n  0.5   0.5 \n\n\n$r_c\nnorif   rif \n  0.5   0.5 \n\n\nThe following function simulates the design matrix.\n\nroadmap.data::get_design\n\nfunction (N = 2500, pop_spec = NULL, idx_s = 1) \n{\n    if (is.null(pop_spec)) {\n        pop_spec &lt;- get_pop_spec()\n    }\n    l &lt;- sample(0:2, N, replace = T, prob = pop_spec$r_silo)\n    l1 = as.numeric(l == 1)\n    l2 = as.numeric(l == 2)\n    j &lt;- rbinom(N, 1, pop_spec$r_joint[l + 1, 2])\n    if (all(is.na(unlist(pop_spec$r_a)))) {\n        er &lt;- rep(0, N)\n    }\n    else {\n        er &lt;- as.numeric(l == 1)\n        i_rec &lt;- as.logical(rbinom(er[l == 1], 1, 0.02))\n        er[l == 1][i_rec] &lt;- 0\n    }\n    r &lt;- rep(NA, N)\n    for (i in 1:length(pop_spec$r_a)) {\n        z &lt;- pop_spec$r_a[[i]]\n        if (all(!is.na(z))) {\n            r[l == (i - 1)] &lt;- sample(0:(length(z) - 1), sum(l == \n                (i - 1)), TRUE, z)\n        }\n        else {\n            r[l == (i - 1)] &lt;- 0\n        }\n    }\n    r[er == 0] &lt;- 0\n    dtmp &lt;- data.table(cbind(l, er, r, srp = rep(NA, N)))\n    for (i in 1:length(pop_spec$r_a_q)) {\n        z &lt;- pop_spec$r_a_q[[i]]\n        dtmp[l == i - 1 & er == 0, `:=`(srp, sample(0:(length(z) - \n            1), .N, TRUE, z))]\n        dtmp[l == i - 1 & er == 1 & r == 0, `:=`(srp, 0)]\n        dtmp[l == i - 1 & er == 1 & r == 1, `:=`(srp, sample(1:(length(z) - \n            1), .N, TRUE, z[2:length(z)]/sum(z[2:length(z)])))]\n    }\n    srp &lt;- dtmp$srp\n    dtmp &lt;- data.table(srp, ed = rep(0, N))\n    if (all(!is.na(pop_spec$r_b$one))) {\n        dtmp[srp == 1, `:=`(ed, 1)]\n    }\n    if (all(!is.na(pop_spec$r_b$two))) {\n        dtmp[srp == 2, `:=`(ed, 1)]\n    }\n    ed &lt;- dtmp$ed\n    dtmp &lt;- data.table(cbind(srp, ed, d = rep(NA, N)))\n    for (i in 1:length(pop_spec$r_b)) {\n        z &lt;- pop_spec$r_b[[i]]\n        if (all(!is.na(z))) {\n            dtmp[srp == (i - 1), `:=`(d, sample(0:(length(z) - \n                1), .N, TRUE, z))]\n        }\n        else {\n            dtmp[srp == (i - 1), `:=`(d, 0)]\n        }\n    }\n    d &lt;- dtmp$d\n    if (all(is.na(pop_spec$r_c))) {\n        ef &lt;- rep(0, N)\n        f &lt;- rep(0, N)\n    }\n    else {\n        ef &lt;- rbinom(N, 1, 0.6)\n        f &lt;- as.numeric((ef == 1) * rbinom(N, 1, pop_spec$r_c))\n    }\n    D &lt;- data.table(l, l1, l2, j, er, ed, ef, erx = 1 - er, edx = 1 - \n        ed, efx = 1 - ef, r, srp, srp0 = as.numeric(srp == 0), \n        srp1 = as.numeric(srp == 1), srp2 = as.numeric(srp == \n            2), d, f)\n    D[, `:=`(id, idx_s:(N + idx_s - 1))]\n    setcolorder(D, \"id\")\n    D\n}\n&lt;bytecode: 0x11a380180&gt;\n&lt;environment: namespace:roadmap.data&gt;\n\n\nThe data generation assumptions imply unique patient groups on which we would observe the outcome. The outcome is known to be heterogenous across these groups and yet the stated goal is to aggregate measures of effect (odds ratios) across all these groups, e.g. no rif vs rif.\n\nd &lt;- roadmap.data::get_design()\nhead(d)\n\n   id l l1 l2 j er ed ef erx edx efx r srp srp0 srp1 srp2 d f\n1:  1 1  1  0 0  1  0  0   0   1   1 0   0    1    0    0 0 0\n2:  2 1  1  0 1  1  0  1   0   1   0 0   0    1    0    0 0 0\n3:  3 2  0  1 0  0  1  1   1   0   0 0   1    0    1    0 0 0\n4:  4 1  1  0 0  1  1  1   0   0   0 1   2    0    0    1 0 1\n5:  5 2  0  1 0  0  1  0   1   0   1 0   1    0    1    0 1 0\n6:  6 1  1  0 0  1  0  0   0   1   1 0   0    1    0    0 0 0",
    "crumbs": [
      "Design",
      "Population structure"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "This site contains notes, data summaries and simulation results for the ROADMAP study.\nAll the code can be found on github, just use the icon to the top right. The functionality herein has a dependency on the roadmap.data R package, which can also be found via the above link (see the readme for this repo). If you find any issues, let me know and I will prioritise accordingly.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#notestodo",
    "href": "index.html#notestodo",
    "title": "Overview",
    "section": "Notes/TODO",
    "text": "Notes/TODO\n\nAnalyses based on cohorts having reached primary endpoint (12 months post rand)\nQuery definition and implementation of targets of inference (b_r, b_r1d etc)\nShould inference and decisions leading to trial actions be restricted to very specific questions ?\nTODO - compute implications of NI margin in terms of risk for each parameter\nTODO - compute family wise type-i errors?",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "etc/readme.html",
    "href": "etc/readme.html",
    "title": "readme",
    "section": "",
    "text": "readme\nfile name format is\ncfg-sim&lt;sim-id&gt;-&lt;scenario-id&gt;-&lt;variant-id&gt;\nuse sed for efficient updating, e.g. \n\nChange number of simulations from 10 to 500:\n\ngsed -i 's/nsim:\\ 10/nsim:\\ 500/' cfg-sim01-sc01-0*.yml\ngsed -i 's/nsim:\\ 10/nsim:\\ 500/' cfg-sim02-sc01-v0*.yml\n\nUpdate scenario label:\n\ngsed -i 's/sc01/sc02/' cfg-sim01-sc02-0*.yml"
  },
  {
    "objectID": "notebooks/model-spec.html#primary-outcome",
    "href": "notebooks/model-spec.html#primary-outcome",
    "title": "Model specification",
    "section": "Primary outcome",
    "text": "Primary outcome\nThe primary outcome is treatment success at 12 months post platform entry, defined as all of:\n\nAlive\nClinical cure (no clinical or microbiological evidence of infection)\nNo ongoing use of antibiotics for the index joint; and\nThe prosthesis present after the initial management strategy is complete (destination prosthesis) still in place\n\nreferred to as ‘treatment success’.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#early-infection",
    "href": "notebooks/model-spec.html#early-infection",
    "title": "Model specification",
    "section": "Early infection",
    "text": "Early infection\nPatients with early stage infection are not revealed1 to the surgical domain. The surgical intervention will usually be dair for which 12 weeks of antibiotics are recommended. There are, however, instances where early stage infection patients will receive a surgical intervention and these patients will therefore be able to enter the duration domain and receive randomised antibiotic duration. These patients will also enter the choice domain.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#late-infection",
    "href": "notebooks/model-spec.html#late-infection",
    "title": "Model specification",
    "section": "Late infection",
    "text": "Late infection\nPatients with late infection enter all domains, but with some restrictions. They are randomised to dair vs revision in the surgical domain. Patients allocated to revision will receive a one or two-stage procedure. Both the planned surgery (one-stage/two-stage) and the surgery actually performed should be captured – the former should be recorded at the time of randomisation. These patients will also enter the choice domain.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#chronic-infection",
    "href": "notebooks/model-spec.html#chronic-infection",
    "title": "Model specification",
    "section": "Chronic infection",
    "text": "Chronic infection\nPatients with chronic stage infection are not randomised into the surgical domain, but they can enter into the duration domain based on the type of surgery they receive. These patients will also enter the choice domain.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#causal-structure",
    "href": "notebooks/model-spec.html#causal-structure",
    "title": "Model specification",
    "section": "Causal structure",
    "text": "Causal structure\nWe assume the following DAG, which is a simplified causal representation of how patients reach their treatment status across the domains:\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  ER(E&lt;sub&gt;R) --&gt; RA(R&lt;sub&gt;A) \n  ER --&gt; SR(S&lt;sub&gt;R)\n  ED(E&lt;sub&gt;D) --&gt; DA(D&lt;sub&gt;A) \n  SR --&gt; RA \n  SD(S&lt;sub&gt;D) --&gt; DA \n  R --&gt; RA\n  RA --&gt; RP(R&lt;sub&gt;P) \n  SRP(S&lt;sub&gt;R&lt;sub&gt;P) --&gt; RP\n  RA --&gt; Y\n  RP --&gt; ED\n  D --&gt; DA(D&lt;sub&gt;A)\n  DA --&gt; Y\n  F --&gt; FA(F&lt;sub&gt;A)\n  EF(E&lt;sub&gt;F) --&gt; FA\n  SF(S&lt;sub&gt;F) --&gt; FA \n  FA --&gt; Y\n  UER((U&lt;sub&gt;E&lt;sub&gt;R)) -.-&gt; ER\n  UED((U&lt;sub&gt;E&lt;sub&gt;D)) -.-&gt; ED\n  UEF((U&lt;sub&gt;E&lt;sub&gt;F)) -.-&gt; EF\n  UF((U&lt;sub&gt;F)) -.-&gt; F\n  URP((U&lt;sub&gt;R&lt;sub&gt;P)) -.-&gt; SRP\n  UD((U&lt;sub&gt;D)) -.-&gt; D\n  USR((U&lt;sub&gt;S&lt;sub&gt;R)) -.-&gt; SR\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  USD((U&lt;sub&gt;S&lt;sub&gt;D)) -.-&gt; SD\n  USF((U&lt;sub&gt;S&lt;sub&gt;F)) -.-&gt; SF\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\nFigure 1: Assumed causal diagram representing the (simplified) processes on successful treatment\n\n\n\n\n\nwhere the following definitions apply:\n\n\\(E_R\\) reveal for surgical domain - 0: no, 1: yes\n\\(E_D\\) reveal for duration domain - 0: no, 1: yes\n\\(E_F\\) reveal for choice domain - 0: no, 1: yes\n\\(R\\) randomised surgery - 0: DAIR, 1: revision\n\\(S_R\\) revision type preference (pre-randomisation) - 0: DAIR, 1: one-stage, 2: two-stage\n\\(R_A\\) allocated surgery - 0: DAIR, 1: one-stage, 2: two-stage\n\\(R_P\\) performed surgery - 0: DAIR, 1: revision\n\\(S_{R_P}\\) revision type performed (post-randomisation) - 0: dair, 1: one-stage, 2: two-stage\n\\(D\\) randomised duration - 0: long, 1: short (for one-stage), 0: short, 1: long (for two-stage)\n\\(D_A\\) allocated duration - 0: long, 1: short, 2: other\n\\(S_D\\) selected duration - 0: long, 1: short, 2: other (sometimes duration will be selected rather than randomised)\n\\(F\\) randomised choice - 0: norif, 1: rif\n\\(F_A\\) allocated choice - 0: norif, 1: rif, 2: other\n\\(S_F\\) selected choice - 0: norif, 1: rif, 2: other\n\\(Y\\) treatment success - 0: no, 1: yes",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#research-questions",
    "href": "notebooks/model-spec.html#research-questions",
    "title": "Model specification",
    "section": "Research questions",
    "text": "Research questions\nThe questions of interest are:\n\nSurg Domain – Early Silo – Revision is superior to DAIR (reference group)\nAB Duration – One-stage revision – 6 weeks (short) is non-inferior to 12 weeks (long) (reference group)\nAB Duration – Two-stage revision – 12 weeks (long) is superior to 7 days (short) (reference group)\nAB Choice – All silos combined – Rifampicin is superior to no-rifampicin (reference group)",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#sec-model-spec",
    "href": "notebooks/model-spec.html#sec-model-spec",
    "title": "Model specification",
    "section": "Model specification",
    "text": "Model specification\nFor each silo \\(l\\) and site of infection \\(j\\) we therefore simulate and model the probability of treatment success as:\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|Q; \\alpha,  \\beta,\\lambda] &=  \\text{expit}( \\alpha_0 + \\\\\n  &\\quad \\lambda_1 \\mathbb{I}(L = 1) + \\lambda_2 \\mathbb{I}(L = 2) + \\\\\n  &\\quad (\\beta_1 \\mathbb{I}(S_{R_P} = 0) + \\beta_2 \\mathbb{I}(S_{R_P} = 1) + \\beta_3 \\mathbb{I}(S_{R_P} = 2) ) (1-E_R) +\\\\\n  &\\quad (\\beta_4 \\mathbb{I}(S_{R_P} = 1) + \\beta_5 \\mathbb{I}(S_{R_P} = 2) )R E_R + \\\\\n  &\\quad \\beta_6 (1-E_D) + \\\\\n  &\\quad (\\beta_{7} \\mathbb{I}(S_{R_P} = 1) + \\beta_{8} \\mathbb{I}(S_{R_P} = 2)])D E_D + \\\\\n  &\\quad \\beta_{9} (1-E_F) + \\beta_{10} F E_F )\n\\end{aligned}\n\\tag{1}\\]\nwhere the \\(Q\\), \\(\\alpha\\), \\(\\lambda\\) and \\(\\beta\\) denote the terms and parameters included in the model and specifically\n\n\\(\\alpha_0\\) denotes the baseline log-odds of treatment success\n\\(\\lambda_1\\) change associated with membership of the late silo\n\\(\\lambda_2\\) change associated with membership of the chronic silo\n\\(\\beta_{1}\\) change under non-reveal surgery receiving dair\n\\(\\beta_{2}\\) change under non-reveal surgery receiving one-stage\n\\(\\beta_{3}\\) change under non-reveal surgery receiving two-stage\n\\(\\beta_{4}\\) change under revision that was performed with one-stage procedure\n\\(\\beta_{5}\\) change under revision that was performed with two-stage procedure\n\\(\\beta_{6}\\) change under non-reveal (duration)\n\\(\\beta_{7}\\) change for short duration when one-stage was actually performed\n\\(\\beta_{8}\\) change for long duration when two-stage was actually performed\n\\(\\beta_{9}\\) change under non-reveal (choice)\n\\(\\beta_{10}\\) change for rif\n\nIn order to easily evaluate the duration effects, we to make the reference arm 12-weeks (long) in the case of one-stage revision and 7-days (short) in the case of two-stage revision.\nIn the full model, there would be additional terms to capture time trends, site variation, prognostic covariates and joint (knee/hip) effects.\n\\(\\beta_1\\), \\(\\beta_2\\) and \\(\\beta_3\\) are required because there will be some patients who are not randomised to revision and yet will still receive either a one-stage or two-stage surgical procedure. These patients may be eligible to enter into the duration domain and therefore the duration domain effects are informed by patients receiving randomised and non-randomised surgical treatment. The \\(\\beta_1\\), \\(\\beta_2\\) and \\(\\beta_3\\) parameters provide adjustment for non-randomised surgical treatment and \\(\\beta_4\\) and \\(\\beta_5\\) provide adjustment for the patients that did.\nNotice that \\(E_D = 0\\) generally implies \\(S_{R_P} \\notin \\{1, 2\\}\\) such that \\(1-E_D\\) is some linear function of the other terms in the model. This can lead to estimation problems that might necessitate model re-parameterisation and it is for this reason that the simulation model drops the \\((1 - E_D)\\) term:\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|Q; \\alpha,  \\beta,\\lambda] &=  \\text{expit}( \\alpha_0 + \\\\\n  &\\quad \\lambda_1 \\mathbb{I}(L = 1) + \\lambda_2 \\mathbb{I}(L = 2) + \\\\\n  &\\quad (\\beta_1 \\mathbb{I}(S_{R_P} = 0) + \\beta_2 \\mathbb{I}(S_{R_P} = 1) + \\beta_3 \\mathbb{I}(S_{R_P} = 2) ) (1-E_R) +\\\\\n  &\\quad (\\beta_4 \\mathbb{I}(S_{R_P} = 1) + \\beta_5 \\mathbb{I}(S_{R_P} = 2) )R E_R + \\\\\n  &\\quad (\\beta_{6} \\mathbb{I}(S_{R_P} = 1) + \\beta_{7} \\mathbb{I}(S_{R_P} = 2)])D E_D + \\\\\n  &\\quad \\beta_{8} (1-E_F) + \\beta_{9} F E_F )\n\\end{aligned}\n\\tag{2}\\]",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#examples",
    "href": "notebooks/model-spec.html#examples",
    "title": "Model specification",
    "section": "Examples",
    "text": "Examples\nThe following characterise how patients enter into the likelihood under various scenarios under Equation 2.\n\n\nLikelihood contributions under various scenarios\n\n\n\n\n\n\n\nID\nPatient type\nLog-odds treatment success\n\n\n\n\n1\nLate silo receiving rand DAIR, non-rand 12 weeks AB and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_{9}\\)\n\n\n2\nLate silo receiving rand rev (one-stage), rand 12 weeks AB (ref group) and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_4 + \\beta_{9}\\)\n\n\n3\nLate silo receiving non-rand rev (one-stage), rand 12 weeks AB (ref group) and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_2 + \\beta_{9}\\)\n\n\n4\nChronic silo receiving non-rand rev (one-stage), rand 12 weeks AB (ref group) and rand rif\n\\(\\alpha_0 + \\lambda_2 + \\beta_2 + \\beta_{9}\\)\n\n\n5\nLate silo receiving non-rand rev (two-stage), rand 7 days AB (ref group) and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_3 + \\beta_{9}\\)\n\n\n6\nChronic silo receiving non-rand rev (two-stage), rand 7 days AB (ref group) and rand rif\n\\(\\alpha_0 + \\lambda_2 + \\beta_3 + \\beta_{9}\\)\n\n\n7\nLate silo receiving rand rev (one-stage), rand 6 weeks AB and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_4 + \\beta_6 + \\beta_{9}\\)\n\n\n8\nLate silo receiving non-rand rev (one-stage), rand 6 weeks AB and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_2 + \\beta_6 + \\beta_{9}\\)\n\n\n9\nChronic silo receiving non-rand rev (one-stage), rand 6 weeks AB and rand rif\n\\(\\alpha_0 + \\lambda_2 + \\beta_2 + \\beta_6 + \\beta_{9}\\)\n\n\n10\nLate silo receiving non-rand rev (two-stage), rand 12 weeks AB and rand rif\n\\(\\alpha_0 + \\lambda_1 + \\beta_3 + \\beta_7 + \\beta_{9}\\)\n\n\n11\nChronic silo receiving non-rand rev (two-stage), rand 12 weeks AB and rand rif\n\\(\\alpha_0 + \\lambda_2 + \\beta_3 + \\beta_7 + \\beta_{9}\\)\n\n\n\n\nIf the non-reveal parameters for the surgical domain were not split by surgery type, then ID 3 above would have the same terms as ID 5 and ID 4 would have the same terms as ID 6.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#treatment-effects",
    "href": "notebooks/model-spec.html#treatment-effects",
    "title": "Model specification",
    "section": "Treatment effects",
    "text": "Treatment effects\nFor the surgical domain, the effect of interest is an average conditional log-odds ratio and is applicable to the late silo. This amounts to a weighted combination of \\(\\beta_2\\) and \\(\\beta_3\\) where the weights are the sample based expectations for the probability of receiving one-stage and two-stage surgery.\n\\[\n\\begin{aligned}\n\\Delta_R = \\beta_4 \\mathbb{E}[S_{R_P} == 1 \\land R == 1] + \\beta_5 \\mathbb{E}[S_{R_P} == 2 \\land R == 1]\n\\end{aligned}\n\\]\nFor the duration domain, the conditional log-odds ratios of interest are \\(\\beta_6\\) and \\(\\beta_7\\) which characterise the effect of 6 weeks (short) vs 12 weeks (long) under one-stage revision and 12 weeks (long) vs 7 days (short) in two-stage revision. For the choice domain, the conditional log-odd ratios of interest is \\(\\beta_{9}\\), characterising the effect of rifampacin vs no-rifampacin. For the duration and choice domains, the effects are applicable to all silos.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#priors",
    "href": "notebooks/model-spec.html#priors",
    "title": "Model specification",
    "section": "Priors",
    "text": "Priors\nAs with the linear predictor, the priors are currently targeted towards the simulation work and may be modified in the final model.\n\nIntercepts\nThe silo and infection site intercepts are given independent normal priors\n\\[\\begin{aligned}\n\\alpha_0 \\sim \\mathcal{N}(0, 1.5^2)\n\\end{aligned}\\]\nOn the probability scale, these concentrate on 0.5 with 95% of the density between 0.04 and 0.96, approximately uniform across this interval.\n\n\nOther covariates\nIndependent standard normal priors are assumed for all other covariate terms effects.\n\n\nTreatment effects\nAll covariates relating to treatment effects have standard normal priors.",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/model-spec.html#footnotes",
    "href": "notebooks/model-spec.html#footnotes",
    "title": "Model specification",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nDependent on how the randomisation process is designed and implemented, they might not even be randomised.↩︎",
    "crumbs": [
      "Design",
      "Model specification"
    ]
  },
  {
    "objectID": "notebooks/misc-notes.html",
    "href": "notebooks/misc-notes.html",
    "title": "Reminders",
    "section": "",
    "text": "Just some brief notes/examples to act as basics stats reminders.",
    "crumbs": [
      "Design",
      "Reminders"
    ]
  },
  {
    "objectID": "notebooks/misc-notes.html#example---lotplote",
    "href": "notebooks/misc-notes.html#example---lotplote",
    "title": "Reminders",
    "section": "Example - LOTP/LOTE",
    "text": "Example - LOTP/LOTE\nAssume the following true joint distribution for some outcome \\(Y\\) and its distribution conditional on sex, smoking and vegetarianism.\n\n\nCode\nset.seed(1)\nd_tru &lt;- CJ(sex = 0:1, smk = 0:1, veg = 0:1)\ng &lt;- function(sex, smk, veg){\n  -1 + 2 * sex - 1 * smk + 3 * veg +\n    -1 * sex * smk - 3 * sex * veg + 1 * smk * veg +\n    0.5 * sex * smk * veg\n}\n# probability of group membership\nq &lt;- rnorm(nrow(d_tru))\nd_tru[, p_grp := exp(q)/sum(exp(q))]\n# probability of outcome\nd_tru[, p_y := plogis(g(sex,smk,veg))]\nd_tru\n\n\n   sex smk veg      p_grp       p_y\n1:   0   0   0 0.04225019 0.2689414\n2:   0   0   1 0.09498377 0.8807971\n3:   0   1   0 0.03427561 0.1192029\n4:   0   1   1 0.38968687 0.8807971\n5:   1   0   0 0.10989996 0.7310586\n6:   1   0   1 0.03479920 0.7310586\n7:   1   1   0 0.12870098 0.2689414\n8:   1   1   1 0.16540341 0.6224593\n\n\nTake a random sample from the population:\n\n\nCode\nn &lt;- 1e7\ni &lt;- sample(1:nrow(d_tru), n, T, prob = d_tru$p_grp)\nd &lt;- d_tru[i]\nd[, y := rbinom(.N, 1, p_y)]\n\n\nRecover the distribution of the covariates (the p_grp)\n\n\nCode\n# recover distribution of covariates\nd[, .(.N/nrow(d)), keyby = .(sex, smk, veg)]\n\n\n   sex smk veg        V1\n1:   0   0   0 0.0421805\n2:   0   0   1 0.0950815\n3:   0   1   0 0.0343139\n4:   0   1   1 0.3898065\n5:   1   0   0 0.1096864\n6:   1   0   1 0.0348148\n7:   1   1   0 0.1288739\n8:   1   1   1 0.1652425\n\n\nRecover the joint distribution of the outcome (the p_y)\n\n\nCode\n# recover distribution of outcome\nd[, .(mu_y = mean(y)), keyby = .(sex, smk, veg)]\n\n\n   sex smk veg      mu_y\n1:   0   0   0 0.2693899\n2:   0   0   1 0.8812230\n3:   0   1   0 0.1189314\n4:   0   1   1 0.8805292\n5:   1   0   0 0.7309010\n6:   1   0   1 0.7311000\n7:   1   1   0 0.2692407\n8:   1   1   1 0.6217244\n\n\nEstimate the probability of outcome by sex\n\n\nCode\nd[, .(mu_y = mean(y)), keyby = sex]\n\n\n   sex      mu_y\n1:   0 0.7881758\n2:   1 0.5541419\n\n\nWe are interested in \\(\\mathbb{E}[y | sex]\\). Can we get to this via iterated expectation/LOTE?\nThink - is all we need LOTP (with extra conditioning), e.g.\n\\[\n\\begin{aligned}\nPr(y | sex = s) &= Pr(y | sex = s, smk = 0, veg = 0) Pr(smk = 0, veg = 0|sex = s) + \\\\\n& \\quad Pr(y | sex = s, smk = 0, veg = 1) Pr(smk = 0, veg = 1|sex = s) + \\\\\n& \\quad Pr(y | sex = s, smk = 1, veg = 0) Pr(smk = 1, veg = 0|sex = s) + \\\\\n& \\quad Pr(y | sex = s, smk = 1, veg = 1) Pr(smk = 1, veg = 1|sex = s)\n\\end{aligned}\n\\tag{1}\\]\nOperationalised, based on the known distributions, we get:\n\n\nCode\nc(\n  \"Pr(Y | sex = 0)\" = sum(d_tru[sex == 0, p_y] * d_tru[sex == 0, p_grp / sum(p_grp)] ),\n  \"Pr(Y | sex = 1)\" = sum(d_tru[sex == 1, p_y] * d_tru[sex == 1, p_grp / sum(p_grp)] )\n)\n\n\nPr(Y | sex = 0) Pr(Y | sex = 1) \n      0.7882179       0.5545841 \n\n\nAnd which can be estimated from the simulated data:\n\n\nCode\nc(\n  \"Pr(Y | sex = 0)\" = \n    sum(d[sex == 0, mean(y)] * \n          d[sex == 0, .(p_grp = .N/nrow(d[sex == 0])), keyby = .(smk, veg)]$p_grp ),\n  \"Pr(Y | sex = 1)\" = \n    sum(d[sex == 1, mean(y)] * \n          d[sex == 1, .(p_grp = .N/nrow(d[sex == 1])), keyby = .(smk, veg)]$p_grp)\n)\n\n\nPr(Y | sex = 0) Pr(Y | sex = 1) \n      0.7881758       0.5541419 \n\n\nTake Equation 1, multiply both sides by \\(y\\) and then sum over all \\(y\\)\n\\[\n\\begin{aligned}\n\\sum_y y Pr(y | sex = s) &= \\sum_y y Pr(y | sex = s, smk = 0, veg = 0) Pr(smk = 0, veg = 0|sex = s) + \\\\\n& \\quad \\sum_y y Pr(y | sex = s, smk = 0, veg = 1) Pr(smk = 0, veg = 1|sex = s) + \\\\\n& \\quad \\sum_y y Pr(y | sex = s, smk = 1, veg = 0) Pr(smk = 1, veg = 0|sex = s) + \\\\\n& \\quad \\sum_y y Pr(y | sex = s, smk = 1, veg = 1) Pr(smk = 1, veg = 1|sex = s)  \n\\end{aligned}\n\\tag{2}\\]\nwhich (I think) can be re-stated as\n\\[\n\\begin{aligned}\n\\mathbb{E}(Y|sex=s) &= \\mathbb{E}(Y|sex = s, smk = 0, veg = 0) Pr(smk = 0, veg = 0|sex = s) + \\\\\n& \\quad \\mathbb{E}(Y|sex = s, smk = 0, veg = 1)  Pr(smk = 0, veg = 1|sex = s)  + \\\\\n& \\quad \\mathbb{E}(Y|sex = s, smk = 1, veg = 0)  Pr(smk = 1, veg = 0|sex = s)  + \\\\\n& \\quad \\mathbb{E}(Y|sex = s, smk = 1, veg = 1)  Pr(smk = 1, veg = 1|sex = s)  \\\\\n&= \\sum_{smk,veg} \\mathbb{E}(Y|sex = s, smk, veg) Pr(smk, veg|sex = s)\n\\end{aligned}\n\\tag{3}\\]\nalso note1 (just in case one is easier to determine than another):\n\\[\nPr(smk, veg|sex) = Pr(smk|veg, sex) Pr(veg | sex)\n\\]\nso (perhaps) alternatively:\n\\[\n\\begin{aligned}\n\\mathbb{E}(Y|sex=s) &= \\sum_{smk,veg} \\mathbb{E}(Y|sex = s, smk, veg) Pr(smk|veg, sex = s) Pr(veg | sex = s)\n\\end{aligned}\n\\tag{4}\\]",
    "crumbs": [
      "Design",
      "Reminders"
    ]
  },
  {
    "objectID": "notebooks/misc-notes.html#footnotes",
    "href": "notebooks/misc-notes.html#footnotes",
    "title": "Reminders",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFor the proof, consider \\(P(Y,X|Z) = \\frac{Pr(X,Y,Z)}{Pr(Z)}\\), \\(P(Y|X,Z) = \\frac{Pr(X,Y,Z)}{Pr(X,Z)}\\) and \\(Pr(X|Z) = \\frac{Pr(X,Z)}{Pr(Z)}\\).↩︎",
    "crumbs": [
      "Design",
      "Reminders"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html",
    "href": "notebooks/design-notes.html",
    "title": "Design Notes",
    "section": "",
    "text": "Setup\nsource(\"./R/init.R\")\nlog_info(\"Called design-notes notebook\")\nStart by saying we were doing a trial in just the late acute patients. We are interested in surgery (DAIR/revision) and antibiotic duration (long/short), but we are limited in that, for whatever reason, we can not ethically randomise the type of revision surgery, only revision surgery itself.\nChoice of antibiotic duration is conditional on the type of revision surgery used, so surgery type needs to be considered in any joint analysis (alternatively, analyse separately).\nI just want to work through from a basic scenario to more involved ones to check understanding of potential issues. The following will ignore much of the complexity, but just want to get some basics down as a reference.",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#surgery",
    "href": "notebooks/design-notes.html#surgery",
    "title": "Design Notes",
    "section": "Surgery",
    "text": "Surgery\nAs a starting point, consider the following:\n\nR: randomised surgery - 0: DAIR, 1: revision\nS: preferred revision - 0: one-stage, 1: two-stage\nA: allocated surgery - 0: DAIR, 1: one-stage, 2: two-stage\nY: treatment success - 0: no, 1: yes\n\nPatients are randomised to a surgery type, \\(R\\): DAIR or revision. For every patient, if they were to have been allocated to revision, there is some preference/plan for one/two stage, \\(S\\). The value of \\(S\\) is determined by the surgeon/patient and I’m considering it here as just an attribute of the patient.\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe above determination is actually dependent on the surgeon’s position as well as patient characteristics. In fact, one may dominate the other. For example, would a surgeon choose two-stage for all their patients simply because they have more experience or sucess with that approach, whereas another might choose one-stage for all theirs?\nNote to self - in practice, I actually think that what matters is that we know what selection is rather than what process occurs to decide. Additionally, later we see that this consideration becomes redundant.\n\n\n\nThe actual allocated treatment is a deterministic function of \\(R\\) and \\(S\\), i.e. \\(A = R \\times (S + 1)\\). Note that I’m assuming that \\(S\\) is known for every patient before \\(R\\) is revealed to the surgeon, irrespective of whether they are eventually assigned to DAIR or revision (if that it isn’t the case then perhaps some issues might arise, but I don’t think that it matters too much for what’s being considered here given randomisation).\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  R --&gt; A --&gt; Y\n  S --&gt; A \n  S --&gt; Y\n  US((U&lt;sub&gt;S)) -.-&gt; S\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\nFigure 1: Scenario 1, the \\(U\\) denote independent exogenous variables\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nThere are no back-door paths for the above, hence no open back-door paths\n\\(Y\\) is caused by/depends on some function of \\(R\\) and \\(S\\): \\(Y = f(R,S)\\)\nAssuming \\(S\\) causes \\(Y\\) a weaker/safer assumption than excluding that link.\nMaybe there should be some shared \\(U\\) that influences both \\(S\\) and \\(Y\\) rather than assuming \\(S\\) causes \\(Y\\)?\nThe graph implies:\n\n\\(S\\) and \\(R\\) are independent; \\(S \\mathrel{\\unicode{x2AEB}} R\\)\n\\(Y\\) is conditionally independent of \\(R\\) given \\(A\\) and \\(S\\); \\(Y \\mathrel{\\unicode{x2AEB}} R | A, S\\)\n\nWe can estimate the total effect of \\(R\\) on \\(Y\\) where \\(R = 1\\) is loosely defined as revision with expert selection of one-stage or two-stage procedure (or something along those lines)\nThink planned/intended procedure should be recorded prior to any elements of randomisation being revealed.\nNo adjustment is required to estimate the total effect of \\(R\\) on \\(Y\\)\n\n\n\n\nOur intervention is on \\(R\\), everything down stream from that (revision type, antibiotic use, physiotherapy, complications) is a consequence of the intervention. It’s the overall effect of allocation to \\(R=0\\) or \\(R=1\\) that we are trying to (the only thing we can, not necessarily want to) compare.\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nIsn’t revision-type independent of intervention? I don’t think I understand why it is downstream.\nNot really sure what is meant by the statement the only thing we can, not necessarily want to compare\n\n\n\n\nIf \\(Y(a)\\) is the potential outcome of a patient under surgery of type \\(a\\) (dair, one-stage, two-stage), then:\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y(a)] &= \\mathbb{E}[Y(a)|R=0] \\\\\n&= \\mathbb{E}[Y(a) | R=1] \\\\\n&= \\mathbb{E}[Y(a) | A = 0] \\\\\n&= \\mathbb{E}[Y(a) | A \\in \\{1,2\\}] \\\\\n&\\ne \\mathbb{E}[Y(a) | A = j], \\quad j\\in\\{1,2\\} \\\\\n\\end{aligned}\n\\]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nAbove we establish exchangeability assumptions, which are a partial requirement for identifying causal effects, i.e. it gets you to \\(\\mathbb{E}[Y(1)] = \\mathbb{E}[Y|A=1]\\) and \\(\\mathbb{E}[Y(0)] = \\mathbb{E}[Y|A=0]\\) whereby you are learning about the potential outcomes from the observed data.\nAll come about due to randomisation of \\(R\\).\nWhere independence holds (as above for the majority of the cases) knowing the conditioning variable tells you nothing about \\(Y(a)\\) (the term on the LHS of the conditioning).\nFor example \\(\\mathbb{E}[Y(a)] = \\mathbb{E}[Y(a)|R=0]\\) tells us that the potential outcomes of \\(Y(a)\\) in those receive dair have the same distribution as those that do not.\nFor \\(\\mathbb{E}[Y(a)] \\ne \\mathbb{E}[Y(a) | A = 1]\\) and \\(\\mathbb{E}[Y(a)] \\ne \\mathbb{E}[Y(a) | A = 2]\\) we are saying that the distribution of potential outcomes in those for whom one-stage is planned do not share the same distribtion as for those for whom one-stage is not planned. And this is by virtue of the fact that revision type is selected rather than randomised.\n\n\n\n\nThe only randomised comparison we can make is \\(R=1\\) vs \\(R=0\\), but, given we want to eventually condition on which revision type is selected, we want to include terms for preferred revision type in the model. Assume logistic regression is the true model and specify\n\\[\n\\begin{align}\n\\mathbb{E}[Y | R] &= Pr(Y = 1 | R) = \\text{expit}(\\alpha_0 + \\alpha_1R) \\\\\n\\end{align}\n\\tag{1}\\]\n\\[\n\\begin{align}\n\\mathbb{E}[Y | A] &= Pr(Y = 1 | A) = \\text{expit}(\\beta_0 + \\beta_1\\mathbb{I}(A=1) + \\beta_2\\mathbb{I}(A=2)) \\\\\n\\end{align}\n\\tag{2}\\]\nEquivalently, state in terms of \\(R\\) and \\(S\\).\n\\[\n\\mathbb{E}[Y | R, S] = \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2RS) \\\\\n\\tag{3}\\]\nEquation 1 targets the thing we actually want to compare, the log-odds ratio of revision versus DAIR. Equation 3 splits this out into one and two stage which we would need to combine to get the overall revision effect. In Equation 3, the \\(\\beta_1\\) gives the effect of revision under a one-stage procedure and the \\(\\beta_2\\) gives the increment on that term when a two-stage procedure is undertaken. Some weighted combination of these terms will give us a view of the aggregated effect of revision.\n\n\n\n\n\n\nNote\n\n\n\n\n\nWhat isn’t directly stated above is that the (primary?) reason we need to split \\(R\\) into one-stage and two-stage effects is so that we can incorporate the duration domain within a single model. The randomised interventions for duration are 12 weeks vs 6 weeks antibiotics for those receiving one-stage surgery and 12 weeks vs 7 days for those receiving two-stage surgery. If a patient received one-stage, the duration intervention parameters associated with two-stage are mostly irrelevant to estimating the log-odds of treatment success for this patient. Moreover, the response for the one-stage patient does not inform the two-stage duration intervention effects. To accommodate this, the one-stage and two-stage duration parameters enter the model independently, e.g.\n\\[\n\\mathbb{E}[Y | R, S] = \\text{expit}(\\beta_0 + \\beta_1 \\mathbb{I}(R = \\text{one-stage} \\land D = short) + \\beta_2 \\mathbb{I}(R = \\text{two-stage} \\land D = short)) \\\\\n\\]\nHowever, this means that the duration domain reference group for the one-stage and two-stage duration effects have the same log-odds of treatment success and this is very unlikely to be the case. Thus, by splitting \\(R\\) into one-stage and two-stage effects we allow the reference groups for the one-stage and two-stage duration effects to vary.\n\n\n\nThese models could also adjust for \\(S\\), i.e. in addition to any actual effect of one/two stage revision, the patients for whom a two-stage would be preferred may differ from those for who a one-stage is the preference. Interpretation of model parameters then changes of course.\n\\[\n\\mathbb{E}[Y | R, S] = \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2RS + \\beta_3S) \\\\\n\\tag{4}\\]\nWe don’t really care about the difference due to \\(S\\), as the revision type effects may still be confounded by other factors anyway. Due to the randomisation, I think that both the version with and without \\(S\\) are targeting the same estimand for revision vs. DAIR (the distribution of \\(S\\) is the same (in expectation) amongst DAIR and revision patients, so is not a confounder, but obviously, \\(S\\) is known exactly to be \\(A-1\\) when \\(R=1\\)).\n\n\n\n\n\n\nNote\n\n\n\n\n\nI think what you are proposing for the \\(\\beta_3\\) term (the effect of \\(S\\)) boils down to the following:\n\nthe effect of \\(S\\), clinical selection of one-stage vs two-stage may be confounded and we can probably do very little about that\nhowever, the estimate we obtain for \\(\\beta_3\\) would be the same in the group that received revision as the group that did not due to the fact that dair vs revision was randomised\n\nProbably incorrectly, I think the selection effect is meaningless in the sense that receiving dair contradicts the possibility of a selection. It is analogous to a model for number of children whereby you make an adjustment for (randomised) marriage and (self-selected) age of marriage. The main effect of age of marriage is excluded, on the basis that it has no counterpart in reality and therefore no way to inform the effect.\nWhat is the counter-argument? Perhaps something along the lines of:\nTo justify the inclusion of \\(\\beta_3\\) we argue that the married and the non-married groups are balanced across age (and all other characteristics). Therefore, the married and unmarried groups are similar and the effect for age of married in the group is portable to the group that were not randomised to marriage, in the counterfactual world where they had been.\nOk, think I have convinced myself (if perhaps no-one else) that it makes sense.\n\n\n\nFor the second model above, in terms of \\(R\\) and \\(S\\), without adjustment for \\(S\\)\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y | R] &= \\mathbb{E}[\\mathbb{E}[Y | S, R] | R] \\\\\n&= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2Rs)\\mathbb{P}(S = s | R) \\\\\n\\mathbb{E}[Y|R =0] &= \\text{expit}(\\beta_0) \\\\\n\\mathbb{E}[Y|R = 1] &=  \\text{expit}(\\beta_0 + \\beta_1)\\mathbb{P}(S=0|R=1) \\\\\n& \\quad \\ + \\text{expit}(\\beta_0 + \\beta_1 + \\beta_2)\\mathbb{P}(S=1|R=1)\n\\end{aligned}\n\\]\nso the log-odds ratio for the marginal success probability for revision vs. DAIR is\n\\[\n\\begin{aligned}\n\\ln\\frac{\\text{odds}(Y|R=1)}{\\text{odds}(Y|R=0)} &= \\text{logit}[\\text{expit}(\\beta_0 + \\beta_1)\\mathbb{P}(S=0|R=1) + \\\\  \n& \\quad \\quad \\ \\text{expit}(\\beta_0 + \\beta_1 + \\beta_2)\\mathbb{P}(S=1|R=1)] -  \\beta_0\n\\end{aligned}\n\\tag{5}\\]\nWe don’t know \\(\\mathbb{P}(S=s|R)\\) so estimate it from the sample. Due to randomisation \\(\\mathbb{P}(S=s|R) = \\mathbb{P}(S=s)\\).\n\n\n\n\n\n\nNote\n\n\n\n\n\nWhich is just creating a standardised probability of treatment success under revision based on a weighted version of the probability of treatment success for each of the selection groups (one-stage and two-stage) where the weights are formed from the (unknown) distribution of \\(S\\) (estimated from the sample). The standardised probability of treatment success under revision is then converted to the log odds of treatment success and the reference group (DAIR) log-odds of treatment success is subtracted to come up with the log-OR.\nThe final line in the above derivation is just saying that we can assume that the probability distribution of \\(S\\) is independent to treatment group membership and so can be estimated from the full sample rather than condition on \\(R\\). Note that \\(\\mathbb{P}(S=s)\\) is not necessarily indicative of the probability distribution of \\(S\\) in the population because of our convenience sample, but this is true for all inference here and in the majority of trials.\n\n\n\nAn alternative to the above is to consider the “average” conditional log-odds ratio rather than the odds ratio of the marginal probabilities.\n\\[\n\\mathbb{E}\\left[\\ln\\frac{\\text{odds}(Y|R=1,S)}{\\text{odds}(Y|R=0,S)}\\right] = \\mathbb{E}[\\beta_1 + \\beta_2S] = \\beta_1 + \\beta_2\\mathbb{E}[S]\n\\tag{6}\\]\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe expectation of \\(S\\) above is across the sample, but below the weighting is taken from the revision group. Would it not be preferable to use the mean derived from the full sample or am I thinking about it incorrectly?\n\n\n\nIf the model also adjusts for \\(S\\), then\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y | R] &= \\mathbb{E}[\\mathbb{E}[Y | S, R] | R] \\\\\n&= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2Rs + \\beta_3s)\\mathbb{P}(S = s | R) \\\\\n\\mathbb{E}[Y|R = 0] &= \\text{expit}(\\beta_0)\\mathbb{P}(S = 0 | R=0) + \\text{expit}(\\beta_0 + \\beta_3)\\mathbb{P}(S=1|R=0)\\\\\n\\mathbb{E}[Y|R = 1] &= \\text{expit}(\\beta_0 + \\beta_1)\\mathbb{P}(S = 0 | R = 1) + \\text{expit}(\\beta_0 + \\beta_1 + \\beta_2 + \\beta_3)\\mathbb{P}(S=1 | R = 1) \\\\\n\\ln\\frac{\\text{odds}(Y|R=1)}{\\text{odds}(Y|R=0)} &= \\text{logit}(\\mathbb{E}[Y|R = 1]) - \\text{logit}(\\mathbb{E}[Y|R = 0])\n\\end{aligned}\n\\]\nWith the introduction of a main effect for \\(S\\) we can still report on the average conditional log-odds ratio in the same form as previously:\n\\[\n\\mathbb{E}\\left[\\ln\\frac{\\text{odds}(Y|R=1,S)}{\\text{odds}(Y|R=0,S)}\\right] = \\mathbb{E}[\\beta_1 + \\beta_2S] = \\beta_1 + \\beta_2\\mathbb{E}[S]\n\\]\ni.e. with the same terms as without adjustment for \\(S\\). However, the treatment effect parameter estimates produced from the model that includes the main effect for \\(S\\) (and the interaction term) and the model that only has the interaction term, are likely be different.\n\nExample\nHerein I am just assuming \\(n\\approx \\infty\\), i.e. checking consistency.\n\n\n\n\n\n\nNote\n\n\n\n\n\nConsistency is simply about whether the estimator produces an estimate that gets closer towards the true value as the sample size gets bigger; a consistent estimator does not negate the possibility of bias. For example, \\(\\frac{1}{N-1}\\sum_i (x_i)\\) is a consistent but biased estimator of the mean for a random vector, \\(x\\).\nThe default parameterisation for the data generating mechanism is to adopt the functional form from Equation 4, which includes terms for \\(R\\), \\(S\\) and an interaction between \\(R\\) and \\(S\\).\n\n\n\n\n\nGenerate data scenario 1\n# Assume ~ infinite population as just checking consistency\n# Precision will of course vary by approach at small sample sizes\ngenerate_data_1 &lt;- function(\n    n = 1000000,\n    f = function(r, s, x){-1 + s + 0.25 * r + 0.25 * r * s}) {\n  s &lt;- rbinom(n, 1, 0.7)\n  r &lt;- rbinom(n, 1, 0.5)\n  x &lt;- rbinom(n, 1, 0.25)\n  a &lt;- r * (s + 1)\n  y0 &lt;- rbinom(n, 1, plogis(f(0, s, x)))\n  y1 &lt;- rbinom(n, 1, plogis(f(1, s, x)))\n  y &lt;- (1 - r) * y0 + r * y1\n  w &lt;- mean(s) # Selection probability\n  D &lt;- data.table(r = r, x = x, s = s, a = a, y0 = y0, y1 = y1, y = y)[\n    ,\n    `:=`(\n      r_fac = factor(r),\n      a_fac = factor(a),\n      s_fac = factor(s),\n      a_cen = r * (a - 1 - mean(a[r == 1] - 1)),\n      s_cen = s - mean(s)\n    )\n  ]\n}\n\n\n\n\nSimulate null effect\nset.seed(123)\nD &lt;- generate_data_1(f = function(r, s, x){-1 + s})\n\n# Eqn 1\nfit1 &lt;- glm(y ~ r, data = D, family = binomial())\n\n# Eqn 3\nfit2 &lt;- glm(y ~ r + r:s, data = D, family = binomial())\n\n# Eqn 6?\nfit1s &lt;- glm(y ~ r + s, data = D, family = binomial())\n\n# Eqn 4\nfit2s &lt;- glm(y ~ r + r:s + s, data = D, family = binomial())\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nIn the use of “true” below, what is meant is the empirical log-odds ratios in the population (approximated by a very large sample) that we observe. We estimate the effects directly from the data by calculating the difference in the log-odds of treatment success in the strata of interest for those in the treated vs control groups.\nThe table just tries to line up the quantities, like with like as there were some minor differences in the naming.\n\n\n\n\n\nNull effect quantities\nw &lt;- mean(D$a == 2) / mean(D$a %in% c(1, 2))\nw_s1 &lt;- mean(D[r == 0]$s == 1)\nw_s2 &lt;- mean(D[r == 1]$s == 1)\n\nb1 &lt;- unname(coef(fit1))\nb2 &lt;- unname(coef(fit2))\nb1s &lt;- unname(coef(fit1s))\nb2s &lt;- unname(coef(fit2s))\n\nEY_R0_2 &lt;- expit(b2[1])\nEY_R1_2 &lt;- (1 - w) * expit(b2[1] + b2[2]) + w * expit(b2[1] + b2[2] + b2[3])\n\nEY_R0_1_S0 &lt;- expit(b1s[1])\nEY_R0_1_S1 &lt;- expit(b1s[1] + b1s[3])\nEY_R1_1_S0 &lt;- expit(b1s[1] + b1s[2])\nEY_R1_1_S1 &lt;- expit(b1s[1] + b1s[2] + b1s[3])\nEY_R0_1 &lt;- (1 - w_s1) * EY_R0_1_S0 + w_s1 * EY_R0_1_S1\nEY_R1_1 &lt;- (1 - w_s2) * EY_R1_1_S0 + w_s2 * EY_R1_1_S1\n\nEY_R0_2s_S0 &lt;- expit(b2s[1])\nEY_R0_2s_S1 &lt;- expit(b2s[1] + b2s[3])\nEY_R1_2s_S0 &lt;- expit(b2s[1] + b2s[2]) # Pr(A = 2 | S = 0) = 0\nEY_R1_2s_S1 &lt;- expit(b2s[1] + b2s[2] + b2s[3] + b2s[4]) # Pr(A = 2 | S = 1) = 1\nEY_R0_2s &lt;- (1 - w_s1) * EY_R0_2s_S0 + w_s1 * EY_R0_2s_S1\nEY_R1_2s &lt;- (1 - w_s2) * EY_R1_2s_S0 + w_s2 * EY_R1_2s_S1\n\nrbind(\n  \"True conditional (S = 0) log-odds ratio\" =\n    qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y)),\n  \"True conditional (S = 1) log-odds ratio\" =\n    qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y)),\n  \"True marginal log-odds ratio\" = qlogis(mean(D[r == 1]$y)) - qlogis(mean(D[r == 0]$y)),\n  \"True weighted log-odds ratio\" =\n    (1 - w) * qlogis(mean(D[a == 1]$y)) + w * qlogis(mean(D[a == 2]$y)) -\n      qlogis(mean(D[r == 0]$y)),\n  \"True average weighted log-odds ratio\" =\n    (1 - w) * (qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y))) +\n      w * (qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y))),\n  \"fit1 marginal log-odds ratio\" = b1[2],\n  \"fit2 marginal log-odds ratio\" = qlogis(EY_R1_2) - qlogis(EY_R0_2),\n  \"fit2 conditional (weighted) log-odds ratio\" = b2[2] + w * b2[3],\n  \"fit1s conditional log-odds ratio\" = b1s[2], # Don't know what this targets\n  \"fit1s marginal log-odds ratio\" = qlogis(EY_R1_1) - qlogis(EY_R0_1),\n  \"fit2s conditional (S = 0) log-odds ratio\" = qlogis(EY_R1_2s_S0) - qlogis(EY_R0_2s_S0),\n  \"fit2s conditional (S = 1) log-odds ratio\" = qlogis(EY_R1_2s_S1) - qlogis(EY_R0_2s_S1),\n  \"fit2s marginal log-odds ratio\" = qlogis(EY_R1_2s) - qlogis(EY_R0_2s),\n  \"fit2s average (weighted) log-odds ratio\" = b2s[2] + w * b2s[4]\n)\n\n\n                                                   [,1]\nTrue conditional (S = 0) log-odds ratio    -0.003882742\nTrue conditional (S = 1) log-odds ratio     0.003222299\nTrue marginal log-odds ratio                0.002568068\nTrue weighted log-odds ratio               -0.018727631\nTrue average weighted log-odds ratio        0.001097800\nfit1 marginal log-odds ratio                0.002568068\nfit2 marginal log-odds ratio                0.002568068\nfit2 conditional (weighted) log-odds ratio -0.018727631\nfit1s conditional log-odds ratio            0.001436139\nfit1s marginal log-odds ratio               0.002568068\nfit2s conditional (S = 0) log-odds ratio   -0.003882742\nfit2s conditional (S = 1) log-odds ratio    0.003222299\nfit2s marginal log-odds ratio               0.002568068\nfit2s average (weighted) log-odds ratio     0.001097800\n\n\nNull effect quantities\nd_out &lt;- data.table(\n  desc = c(\n    \"conditional (S = 0) log-OR\",\n    \"conditional (S = 1) log-OR\",\n    \"conditional log-OR (?)\",\n    \"conditional (weighted) log-OR\",\n    \"marginal log-OR\",\n    \"weighted log-OR\",\n    \"average (weighted) log-OR\"\n  ),\n  true = c(\n    qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y)),\n    qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y)),\n    NA,  \n    NA,\n    qlogis(mean(D[r == 1]$y)) - qlogis(mean(D[r == 0]$y)),\n    (1 - w) * qlogis(mean(D[a == 1]$y)) + w * qlogis(mean(D[a == 2]$y)) -\n      qlogis(mean(D[r == 0]$y)),\n    (1 - w) * (qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y))) +\n      w * (qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y)))\n  ),\n  fit_1 = c(\n    NA, \n    NA,  \n    NA,\n    NA, \n    b1[2], \n    NA, \n    NA\n  ),\n  fit_2 = c(\n    NA, \n    NA,\n    NA, \n    b2[2] + w * b2[3], \n    qlogis(EY_R1_2) - qlogis(EY_R0_2), \n    NA,\n    NA\n  ),\n  fit_1s = c(\n    NA, \n    NA, \n    b1s[2],\n    NA,\n    qlogis(EY_R1_1) - qlogis(EY_R0_1), \n    NA,\n    NA\n  ),\n  fit_2s = c(\n    qlogis(EY_R1_2s_S0) - qlogis(EY_R0_2s_S0), \n    qlogis(EY_R1_2s_S1) - qlogis(EY_R0_2s_S1), \n    NA, \n    NA,\n    qlogis(EY_R1_2s) - qlogis(EY_R0_2s),\n    NA,\n    b2s[2] + w * b2s[4]\n  )\n)\n\n\n\n\nTabulate effect quantities\ngt_tbl &lt;- d_out |&gt; \n  gt(rowname_col = c(\"desc\")) |&gt; \n  cols_align(align = \"right\", columns = 2:6) |&gt;  \n  fmt_number(columns = everything(), decimals = 3) |&gt;\n  sub_missing(columns = everything(), missing_text = \"\") |&gt;\n  tab_options(table.font.size = \"80%\") |&gt;\n  tab_footnote(\n    footnote = \"y ~ r\",\n    locations = cells_column_labels(columns = fit_1)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + r:s\",\n    locations = cells_column_labels(columns = fit_2)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + s\",\n    locations = cells_column_labels(columns = fit_1s)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + r:s + s\",\n    locations = cells_column_labels(columns = fit_2s)\n    ) |&gt;\n  tab_footnote(\n    footnote = md(\"Should be labelled *conditional (weighted) log-OR*?\"),\n    locations = cells_stub(rows = c(\n      \"weighted log-OR\"\n    ))\n  ) |&gt;\n  tab_footnote(\n    footnote = md(\"log-OR for R term in model, but interpretation unclear\"),\n    locations = cells_stub(rows = c(\n      \"conditional log-OR (?)\"))\n  )\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrue\nfit_11\nfit_22\nfit_1s3\nfit_2s4\n\n\n\n\nconditional (S = 0) log-OR\n−0.004\n\n\n\n\n\n\n−0.004\n\n\nconditional (S = 1) log-OR\n0.003\n\n\n\n\n\n\n0.003\n\n\nconditional log-OR (?)5\n\n\n\n\n\n\n0.001\n\n\n\n\nconditional (weighted) log-OR\n\n\n\n\n−0.019\n\n\n\n\n\n\nmarginal log-OR\n0.003\n0.003\n0.003\n0.003\n0.003\n\n\nweighted log-OR6\n−0.019\n\n\n\n\n\n\n\n\n\n\naverage (weighted) log-OR\n0.001\n\n\n\n\n\n\n0.001\n\n\n\n1 y ~ r\n\n\n2 y ~ r + r:s\n\n\n3 y ~ r + s\n\n\n4 y ~ r + r:s + s\n\n\n5 log-OR for R term in model, but interpretation unclear\n\n\n6 Should be labelled conditional (weighted) log-OR?\n\n\n\n\n\n\n\n\n\nTable 1: Null effects\n\n\n\n\n\n\nSimulate effect\nset.seed(123)\nD &lt;- generate_data_1()\nfit1 &lt;- glm(y ~ r, data = D, family = binomial())\nfit2 &lt;- glm(y ~ r + r:s, data = D, family = binomial())\nfit1s &lt;- glm(y ~ r + s, data = D, family = binomial())\nfit2s &lt;- glm(y ~ r + r:s + s, data = D, family = binomial())\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nSimulate from Equation 4 with a baseline probability of treatment success equal to 0.27 together with \\(\\beta_1 = 0.25\\), \\(\\beta_2 = 0.25\\) and \\(\\beta_3 = 1\\) for the log-ORs associated with treatment, the interaction between treatment and selection and selection, respectively.\n\n\n\n\n\nEffect quantities\nw &lt;- mean(D$a == 2) / mean(D$a %in% c(1, 2))\nw_s1 &lt;- mean(D[r == 0]$s == 1)\nw_s2 &lt;- mean(D[r == 1]$s == 1)\n\nb1 &lt;- unname(coef(fit1))\nb2 &lt;- unname(coef(fit2))\nb1s &lt;- unname(coef(fit1s))\nb2s &lt;- unname(coef(fit2s))\n\nEY_R0_2 &lt;- expit(b2[1])\nEY_R1_2 &lt;- (1 - w) * expit(b2[1] + b2[2]) + w * expit(b2[1] + b2[2] + b2[3])\n\nEY_R0_1_S0 &lt;- expit(b1s[1])\nEY_R0_1_S1 &lt;- expit(b1s[1] + b1s[3])\nEY_R1_1_S0 &lt;- expit(b1s[1] + b1s[2])\nEY_R1_1_S1 &lt;- expit(b1s[1] + b1s[2] + b1s[3])\nEY_R0_1 &lt;- (1 - w_s1) * EY_R0_1_S0 + w_s1 * EY_R0_1_S1\nEY_R1_1 &lt;- (1 - w_s2) * EY_R1_1_S0 + w_s2 * EY_R1_1_S1\n\nEY_R0_2s_S0 &lt;- expit(b2s[1])\nEY_R0_2s_S1 &lt;- expit(b2s[1] + b2s[3])\nEY_R1_2s_S0 &lt;- expit(b2s[1] + b2s[2]) # Pr(A = 2 | S = 0) = 0\nEY_R1_2s_S1 &lt;- expit(b2s[1] + b2s[2] + b2s[3] + b2s[4]) # Pr(A = 2 | S = 1) = 1\nEY_R0_2s &lt;- (1 - w_s1) * EY_R0_2s_S0 + w_s1 * EY_R0_2s_S1\nEY_R1_2s &lt;- (1 - w_s2) * EY_R1_2s_S0 + w_s2 * EY_R1_2s_S1\n\nrbind(\n  \"True conditional (S = 0) log-odds ratio\" =\n    qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y)),\n  \"True conditional (S = 1) log-odds ratio\" =\n    qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y)),\n  \"True marginal log-odds ratio\" = qlogis(mean(D[r == 1]$y)) - qlogis(mean(D[r == 0]$y)),\n  \"True weighted log-odds ratio\" =\n    (1 - w) * qlogis(mean(D[a == 1]$y)) + w * qlogis(mean(D[a == 2]$y)) -\n      qlogis(mean(D[r == 0]$y)),\n  \"True average (weighted) log-odds ratio\" =\n    (1 - w) * (qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y))) +\n      w * (qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y))),\n  \"fit1 marginal log-odds ratio\" = b1[2],\n  \"fit2 marginal log-odds ratio\" = qlogis(EY_R1_2) - qlogis(EY_R0_2),\n  \"fit2 conditional (weighted) log-odds ratio\" = b2[2] + w * b2[3],\n  \"fit1s conditional log-odds ratio\" = b1s[2], # Don't know what this targets\n  \"fit1s marginal log-odds ratio\" = qlogis(EY_R1_1) - qlogis(EY_R0_1),\n  \"fit2s conditional (S = 0) log-odds ratio\" = qlogis(EY_R1_2s_S0) - qlogis(EY_R0_2s_S0),\n  \"fit2s conditional (S = 1) log-odds ratio\" = qlogis(EY_R1_2s_S1) - qlogis(EY_R0_2s_S1),\n  \"fit2s marginal log-odds ratio\" = qlogis(EY_R1_2s) - qlogis(EY_R0_2s),\n  \"fit2s average (weighted) log-odds ratio\" = b2s[2] + w * b2s[4]\n)\n\n\n                                                [,1]\nTrue conditional (S = 0) log-odds ratio    0.2462550\nTrue conditional (S = 1) log-odds ratio    0.4944007\nTrue marginal log-odds ratio               0.4038167\nTrue weighted log-odds ratio               0.4003765\nTrue average (weighted) log-odds ratio     0.4202020\nfit1 marginal log-odds ratio               0.4038167\nfit2 marginal log-odds ratio               0.4038167\nfit2 conditional (weighted) log-odds ratio 0.4003765\nfit1s conditional log-odds ratio           0.4285063\nfit1s marginal log-odds ratio              0.4038167\nfit2s conditional (S = 0) log-odds ratio   0.2462550\nfit2s conditional (S = 1) log-odds ratio   0.4944007\nfit2s marginal log-odds ratio              0.4038167\nfit2s average (weighted) log-odds ratio    0.4202020\n\n\nEffect quantities\nd_out &lt;- data.table(\n  desc = c(\n    \"conditional (S = 0) log-OR\",\n    \"conditional (S = 1) log-OR\",\n    \"conditional log-OR (?)\",\n    \"conditional (weighted) log-OR\",\n    \"marginal log-OR\",\n    \"weighted log-OR\",\n    \"average (weighted) log-OR\"\n  ),\n  true = c(\n    qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y)),\n    qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y)),\n    NA,  \n    NA,\n    qlogis(mean(D[r == 1]$y)) - qlogis(mean(D[r == 0]$y)),\n    (1 - w) * qlogis(mean(D[a == 1]$y)) + w * qlogis(mean(D[a == 2]$y)) -\n      qlogis(mean(D[r == 0]$y)),\n    (1 - w) * (qlogis(mean(D[r == 1 & s == 0]$y)) - qlogis(mean(D[r == 0 & s == 0]$y))) +\n      w * (qlogis(mean(D[r == 1 & s == 1]$y)) - qlogis(mean(D[r == 0 & s == 1]$y)))\n  ),\n  fit_1 = c(\n    NA, \n    NA,   \n    NA,\n    NA, \n    b1[2], \n    NA, \n    NA\n  ),\n  fit_2 = c(\n    NA, \n    NA, \n    NA, \n    b2[2] + w * b2[3], \n    qlogis(EY_R1_2) - qlogis(EY_R0_2), \n    NA,\n    NA\n  ),\n  fit_1s = c(\n    NA, \n    NA, \n    b1s[2],\n    NA,\n    qlogis(EY_R1_1) - qlogis(EY_R0_1), \n    NA,\n    NA\n  ),\n  fit_2s = c(\n    qlogis(EY_R1_2s_S0) - qlogis(EY_R0_2s_S0), \n    qlogis(EY_R1_2s_S1) - qlogis(EY_R0_2s_S1),  \n    NA, \n    NA,\n    qlogis(EY_R1_2s) - qlogis(EY_R0_2s),\n    NA,\n    b2s[2] + w * b2s[4]\n  )\n)\n\n\n\n\nTabulate effect quantities\ngt_tbl &lt;- d_out |&gt; \n  gt(rowname_col = c(\"desc\")) |&gt; \n  cols_align(align = \"right\", columns = 2:6) |&gt;  \n  fmt_number(columns = everything(), decimals = 3) |&gt;\n  sub_missing(columns = everything(), missing_text = \"\") |&gt;\n  tab_options(table.font.size = \"80%\") |&gt;\n  tab_footnote(\n    footnote = \"y ~ r\",\n    locations = cells_column_labels(columns = fit_1)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + r:s\",\n    locations = cells_column_labels(columns = fit_2)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + s\",\n    locations = cells_column_labels(columns = fit_1s)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + r:s + s\",\n    locations = cells_column_labels(columns = fit_2s)\n    ) |&gt;\n  tab_footnote(\n    footnote = md(\"Should be labelled *conditional (weighted) log-OR*?\"),\n    locations = cells_stub(rows = c(\n      \"weighted log-OR\"))) |&gt;\n  tab_footnote(\n    footnote = md(\"log-OR for R term in model, but interpretation unclear\"),\n    locations = cells_stub(rows = c(\n      \"conditional log-OR (?)\"))\n  )\n\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrue\nfit_11\nfit_22\nfit_1s3\nfit_2s4\n\n\n\n\nconditional (S = 0) log-OR\n0.246\n\n\n\n\n\n\n0.246\n\n\nconditional (S = 1) log-OR\n0.494\n\n\n\n\n\n\n0.494\n\n\nconditional log-OR (?)5\n\n\n\n\n\n\n0.429\n\n\n\n\nconditional (weighted) log-OR\n\n\n\n\n0.400\n\n\n\n\n\n\nmarginal log-OR\n0.404\n0.404\n0.404\n0.404\n0.404\n\n\nweighted log-OR6\n0.400\n\n\n\n\n\n\n\n\n\n\naverage (weighted) log-OR\n0.420\n\n\n\n\n\n\n0.420\n\n\n\n1 y ~ r\n\n\n2 y ~ r + r:s\n\n\n3 y ~ r + s\n\n\n4 y ~ r + r:s + s\n\n\n5 log-OR for R term in model, but interpretation unclear\n\n\n6 Should be labelled conditional (weighted) log-OR?\n\n\n\n\n\n\n\n\n\nTable 2: Effects\n\n\n\n\nSo in the basic case, as \\(n\\to\\infty\\), these models are all in a sense equivalent, in that they are consistent for the treatment effects of interest.\nMore generally, can just use g-computation rather than analytic expressions\n\n\nCode\nm &lt;- rbind(\n  \"G-comp marginal mean\" =\n    c(avg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\")$estimate, NA_real_),\n  \"G-comp marginal mean (adjust s)\" =\n    c(avg_comparisons(fit2s, variables = \"r\", comparison = \"lnoravg\")$estimate, NA_real_),\n  \"G-comp average log-odds\" =\n    c(avg_comparisons(fit2, variables = \"r\", comparison = \"lnor\")$estimate, NA_real_),\n  \"G-comp average log-odds (adjust s)\" = \n    c(avg_comparisons(fit2s, variables = \"r\", comparison = \"lnor\")$estimate, NA_real_),\n  \"G-comp conditional (S) average log-odds\" =\n    avg_comparisons(fit2, variables = \"r\", comparison = \"lnor\", by = \"s\")$estimate,\n  \"G-comp conditional (S) average log-odds (adjust s)\" =\n    avg_comparisons(fit2s, variables = \"r\", comparison = \"lnor\", by = \"s\")$estimate\n)\ncolnames(m) &lt;- c(\"S = 0\", \"S = 1\")\nm\n\n\n                                                        S = 0     S = 1\nG-comp marginal mean                                0.4030520        NA\nG-comp marginal mean (adjust s)                     0.4024538        NA\nG-comp average log-odds                             0.3995870        NA\nG-comp average log-odds (adjust s)                  0.4200453        NA\nG-comp conditional (S) average log-odds            -0.4764725 0.7744050\nG-comp conditional (S) average log-odds (adjust s)  0.2462550 0.4944007\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nI think that the above are basically making predictions for the comparison of interest at each of the rows in the data set and then averaging to give a marginalised view.\nThe definitional differences between lnoravg and lnor amount to:\nlnor   \\(hi, lo) log((hi/(1 - hi))/(lo/(1 - lo)))\nvs.\nlnoravg    \\(hi, lo) log((mean(hi)/(1 - mean(hi)))/(mean(lo)/(1 - mean(lo)))\nso (I think but need to confirm) one is doing the calculation on every row and then averaging whereas the other averages first.",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#covariate",
    "href": "notebooks/design-notes.html#covariate",
    "title": "Design Notes",
    "section": "Covariate",
    "text": "Covariate\nSuppose we introduce a covariate \\(X\\) because it’s predictive of the outcome, e.g. sex. Our model, which does not adjust for \\(S\\), is\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|R,S,X] &= \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2RS + \\beta_3X) \\\\\n\\mathbb{E}[Y|R,X] &= \\mathbb{E}[\\mathbb{E}[Y|R,S,X]|R,X] \\\\\n&= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2Rs + \\beta_3X)\\mathbb{P}(S=s|R,X) \\\\\n\\mathbb{E}[Y|R=0,X] &= \\text{expit}(\\beta_0 + \\beta_3X) \\\\\n\\mathbb{E}[Y|R=1,X] &= \\text{expit}(\\beta_0 + \\beta_1 + \\beta_3X)\\mathbb{P}(S=0|R=1,X)  \\\\\n&\\quad \\ + \\text{expit}(\\beta_0 + \\beta_1 + \\beta_2 + \\beta_3X)\\mathbb{P}(S=1|R=1,X)\n\\end{aligned}\n\\]\nThe conditional (on \\(X\\)) log-odds ratio of marginal success probability for revision versus DAIR depends on the value of \\(X\\) (i.e. is not the same effect for every \\(X=x\\)) and cannot be simplified. It is\n\\[\n\\text{logit}(\\mathbb{E}[Y|R=1,X]) - (\\beta_0 + \\beta_3X).\n\\]\nBy marginalising over type of revision type (which is necessary for the comparison we want), we lose our one number summary. No way to avoid that other than perhaps considering fitting separate models for surgery and duration.\nTo maintain a one-number-summary, again an alternative is to consider the average conditional log-odds\n\\[\n\\mathbb{E}\\left[\\ln\\frac{\\text{odds}(Y|R=1|S,X)}{\\text{odds}(Y|R=0|S,X)}\\right] = \\beta_1 + \\beta_2\\mathbb{E}[S].\n\\]\nIf \\(S\\) has an effect, say in truth,\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|S,R,X] &= \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2RS + \\beta_3S + \\beta_4X) \\\\\n\\mathbb{E}[Y|R,X] &= \\mathbb{E}[\\mathbb{E}[Y|S,R,X]|R,X] \\\\\n&= \\sum_{s=0}^1 \\mathbb{E}[Y|S=s,R,X]\\mathbb{P}(S=s|R,X)\n\\end{aligned}\n\\]\nThen if our model does condition on \\(S\\),\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|R,X] &= \\mathbb{E}[\\mathbb{E}[Y|R,X,S]|R,X] \\\\\n&= \\sum_{s=0}^1\n\\text{expit}(\\beta_0 + \\beta_1R + \\beta_2Rs + \\beta_3s+\\beta_4X)\n\\mathbb{P}(S=s|R,X) \\\\\n\\mathbb{E}[Y|R=0,X] &= \\text{expit}(\\beta_0 + \\beta_4X)\\mathbb{P}(S=0|R=0,X) +\n\\text{expit}(\\beta_0 + \\beta_3 + \\beta_4X)\\mathbb{P}(S=1|R=0,X) \\\\\n\\mathbb{E}[Y|R=1,X] &= \\text{expit}(\\beta_0 + \\beta_1 + \\beta_4X)\\mathbb{P}(S=0|R=0,X) +\n\\text{expit}(\\beta_0 + \\beta_1 + \\beta_2 + \\beta_3 + \\beta_4X)\\mathbb{P}(S=1|R=0,X) \\\\\n\\ln\\frac{\\text{odds}(Y|R=1,X)}{\\text{odds}(Y|R=0,X)} &= \\text{logit}(\\mathbb{E}[Y|R=1,X]) - \\text{logit}(\\mathbb{E}[Y|R=0,X])\n\\end{aligned}\n\\]\nDue to randomisation, \\(\\mathbb{P}(S=s|R,X) = \\mathbb{P}(S=s|X)\\).\nThe model without adjustment for \\(S\\) assumes\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|R,S,X] &= \\text{expit}(\\alpha_0 + \\alpha_1R + \\alpha_2RS + \\alpha_3X) \\\\\n&= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1R + \\beta_2RS + \\beta_3X + \\beta_4s)\\mathbb{P}(S=s|R,X)\n\\end{aligned}\n\\]\n\nExample\n\n\n\n\n\n\nNote\n\n\n\n\n\nBy definition, \\(x\\) has a 25% chance of occurrence in the sample data.\n\n\n\n\n\nGenerate data with covariate\nset.seed(6124)\nD &lt;- generate_data_1(\n  f = function(r, s, x){ -1 + s + x + 0.25 * r + 0.25 * r * s}\n)\nfit1 &lt;- glm(y ~ r + x, data = D, family = binomial())\nfit2 &lt;- glm(y ~ r + r:s + x, data = D, family = binomial())\nfit1s &lt;- glm(y ~ r + s + x, data = D, family = binomial())\nfit2s &lt;- glm(y ~ r + s + r:s + x, data = D, family = binomial())\n\n\nUsing G-computation to marginalise over \\(S\\) and \\(X\\).\n\n\nEffect quantities\ntt &lt;- cbind(\n  qlogis(mean(D[r == 1]$y)) - qlogis(mean(D[r == 0]$y)),\n  NA,\n  qlogis(mean(D[r == 1 & x == 0]$y)) - qlogis(mean(D[r == 0 & x == 0]$y)),\n  qlogis(mean(D[r == 1 & x == 1]$y)) - qlogis(mean(D[r == 0 & x == 1]$y))\n)\nrownames(tt) &lt;- \"True\"\nm1 &lt;- rbind(\n  avg_comparisons(fit1, variables = \"r\", comparison = \"lnoravg\")$estimate,\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\")$estimate,\n  avg_comparisons(fit1s, variables = \"r\", comparison = \"lnoravg\")$estimate,\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnoravg\")$estimate\n)\nm2 &lt;- rbind(\n  avg_comparisons(fit1, variables = \"r\", comparison = \"lnor\")$estimate,\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnor\")$estimate,\n  avg_comparisons(fit1s, variables = \"r\", comparison = \"lnor\")$estimate,\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnor\")$estimate\n)\nm3 &lt;- rbind(\n  avg_comparisons(fit1, variables = \"r\", comparison = \"lnoravg\", by = \"x\")$estimate,\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\", by = \"x\")$estimate,\n  avg_comparisons(fit1s, variables = \"r\", comparison = \"lnoravg\", by = \"x\")$estimate,\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnoravg\", by = \"x\")$estimate\n)\nm &lt;- cbind(m1, m2, m3)\ncols &lt;- c(\"Marginal log-odds ratio\", \"Average log-odds ratio\", \"Conditional (X = 0)\", \"Conditional (X = 1)\")\ncolnames(m) &lt;- cols\nrownames(m) &lt;- c(\"fit1\", \"fit2\", \"fit1s\", \"fit2s\")\nround(rbind(tt, m), 3)\n\n\n      Marginal log-odds ratio Average log-odds ratio Conditional (X = 0)\nTrue                    0.376                     NA               0.397\nfit1                    0.377                  0.391               0.391\nfit2                    0.378                  0.405               0.408\nfit1s                   0.378                  0.418               0.393\nfit2s                   0.378                  0.416               0.398\n      Conditional (X = 1)\nTrue                0.367\nfit1                0.391\nfit2                0.334\nfit1s               0.392\nfit2s               0.371\n\n\n\n\nTabulate effect quantities\nd_out &lt;- data.table(t(round(rbind(tt, m), 3)))\nd_out[, desc := cols]\nsetcolorder(d_out, \"desc\")\n\n\n\ngt_tbl &lt;- d_out |&gt; \n  gt(rowname_col = c(\"desc\")) |&gt; \n  cols_align(align = \"right\", columns = 2:6) |&gt;  \n  fmt_number(columns = everything(), decimals = 3) |&gt;\n  sub_missing(columns = everything(), missing_text = \"\") |&gt;\n  tab_options(table.font.size = \"80%\") |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + x\",\n    locations = cells_column_labels(columns = fit1)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + r:s + x\",\n    locations = cells_column_labels(columns = fit2)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + s + x\",\n    locations = cells_column_labels(columns = fit1s)\n    ) |&gt;\n  tab_footnote(\n    footnote = \"y ~ r + r:s + s + x\",\n    locations = cells_column_labels(columns = fit2s)\n    ) \n\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrue\nfit11\nfit22\nfit1s3\nfit2s4\n\n\n\n\nMarginal log-odds ratio\n0.376\n0.377\n0.378\n0.378\n0.378\n\n\nAverage log-odds ratio\n\n\n0.391\n0.405\n0.418\n0.416\n\n\nConditional (X = 0)\n0.397\n0.391\n0.408\n0.393\n0.398\n\n\nConditional (X = 1)\n0.367\n0.391\n0.334\n0.392\n0.371\n\n\n\n1 y ~ r + x\n\n\n2 y ~ r + r:s + x\n\n\n3 y ~ r + s + x\n\n\n4 y ~ r + r:s + s + x\n\n\n\n\n\n\n\n\n\nTable 3: G-computation estimates in presence of prognostic covariate",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#unmeasured-confounder",
    "href": "notebooks/design-notes.html#unmeasured-confounder",
    "title": "Design Notes",
    "section": "Unmeasured Confounder",
    "text": "Unmeasured Confounder\nThe above hides some complexity because we assume everything is correctly specified. Suppose we introduce some unmeasured factor which influences which patients are preferred for a given revision type. Consider the following:\n\nR: randomised surgery - 0: DAIR, 1: revision\nS: preferred revision - 0: one-stage, 1: two-stage\nA: allocated surgery - 0: DAIR, 1: one-stage, 2: two-stage\nY: treatment success - 0: no, 1: yes\nZ: unmeasured factor, patient attributes/type - continuous\n\nWe assume \\(Z\\) is some immeasurable combination of factors which partly determines a patients risk of failure. We also think that this \\(Z\\) partly determines the surgeons choice of one/two stage. Say patients with higher values of \\(Z\\) are less likely to have successful treatment. However, the surgeon has some knowledge/experience/expertise/intuition which means that they are more likely to prefer a two-stage revision for patients with higher values of \\(Z\\), as they expect those types of patients will have better outcomes under two-stage. The allocated treatment and the underlying patient risk determines the patients outcome, \\(Y\\).\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  R --&gt; A --&gt; Y\n  S --&gt; A\n  Z(Z) --&gt; S & A & Y\n  US((U&lt;sub&gt;S)) -.-&gt; S\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\nFigure 2: Scenario 2, the \\(U\\) denote independent exogenous variables,\n\n\n\n\n\nGiven the randomisation, this does not really change anything, except making explicit that differences between one/two stage may just be due to confounding rather than effect of treatment. We can’t tell which without adjusting for all confounders.",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#checkpoint",
    "href": "notebooks/design-notes.html#checkpoint",
    "title": "Design Notes",
    "section": "Checkpoint",
    "text": "Checkpoint\nSo, perhaps the easiest quantity to consider is the average conditional log-odds, i.e.\n\\[\n\\mathbb{E}\\left[\\ln\\frac{\\text{odds}(Y|R=1,S,X,...)}{\\text{odds}(Y|R=0,S,X,...)}\\right] = \\beta_1 + \\beta_2\\mathbb{E}[S].\n\\]\nIs this sufficiently meaningful?\n\n\n\n\n\n\nNote\n\n\n\n\n\nI think what you are saying is to adopt Equation 4 and then report our effect estimate for revision at the sample mean of observed selection, which is this case fully characterises the distribution anyway.\nThe terminology used for effects seems to vary a bit throughout, but my label would probably be more explicit conditional log-OR evaluated at the mean selection or something like that, whereas I think it has been previously referred to as conditional (weighted) log-OR earlier and average (weighted) log-OR earlier, probably because that is how they have been computed.",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#duration",
    "href": "notebooks/design-notes.html#duration",
    "title": "Design Notes",
    "section": "Duration",
    "text": "Duration\nDuration, \\(D\\), is randomised, however, the duration options depends upon assignment to revision \\(R\\), and the chosen revision type, \\(S\\). So it is random conditional on \\(R\\) and \\(S\\). Nothing else alters the distribution of \\(D\\). We expect that duration has an effect on the outcome.\nBelow we just use \\(D=0\\) for long and \\(D=1\\) for short, but note that the meaning of these is conditional on \\(R/S\\) (i.e. short for one-stage different to short for two-stage and only applies to revision)\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  R --&gt; A --&gt; Y\n  S --&gt; A & D\n  R --&gt; D\n  D --&gt; Y\n  UD((U&lt;sub&gt;D)) -.-&gt; D\n  US((U&lt;sub&gt;S)) -.-&gt; S\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\nFigure 3: Scenario 3, the \\(U\\) denote independent exogenous variables,\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThere might be alternative representations of the above and also the potential for direct and indirect effects of \\(S\\), see below:\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  R --&gt; A --&gt; Y\n  S --&gt; A\n  S --&gt; Y\n  A --&gt; D\n  D --&gt; Y\n  UD((U&lt;sub&gt;D)) -.-&gt; D\n  US((U&lt;sub&gt;S)) -.-&gt; S\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  R --&gt; D\n  S --&gt; D\n  S --&gt; Y\n  D --&gt; Y\n  UD((U&lt;sub&gt;D)) -.-&gt; D\n  US((U&lt;sub&gt;S)) -.-&gt; S\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4\n\nFigure 5\nNow there are two interventions: \\(R\\) which has downstream unknown effects partly due to the unknown revision type, \\(S\\), which is selected, and \\(D\\) which is randomised.\nThe simplest approach is to analyse these separately. First, restrict the analysis to those patients who were assigned to one-stage and have an RCT for duration in embedded in that subset. Then, restrict analysis to only those assigned to two-stage and have an RCT for duration in that subset. However, we would like to have a joint model so that other effects can be shared (other domains/site/surgeon/age/whatever else). In the joint model, duration effect needs to be conditional on revision type.\nSay the true model were something like\n\\[\n\\mathbb{E}[Y|R,S,D] = \\text{expit}(\\beta_0 + \\beta_1S + \\beta_2R + \\beta_3RS + \\beta_4RD + \\beta_5RDS)\n\\tag{7}\\]\nso\n\n\\(\\beta_2\\) is the shift associated with revision and long duration (assuming long-duration is the refrence group)\n\\(\\beta_3\\) the additional shift associated with two-stage long duration,\n\\(\\beta_4\\) the relative shift for short duration given revision,\n\\(\\beta_5\\) the relative shift for short duration given two-stage.\n\nWe might choose to setup the design matrix so that it is orthonormal so that a-priori we don’t assign more uncertainty to a specific revision type. E.g.\n\\[\n\\mathbb{E}[Y|R,S] = \\text{expit}(\\beta_0 + \\beta_1(S - 0.5) + \\beta_2R + \\beta_3R(S-0.5) + \\beta_4R(D-0.5) + \\beta_5R(D-0.5)(S-0.5)\n\\]\n\n\n\n\n\n\nNote\n\n\n\n\n\nIs the above missing a \\(D\\) from the conditioning?\n\n\n\nbut for simplicity, not doing this here.\nFrom the above, and with a focus on the surgical domain, we could compare (randomised comparison) any of:\n\nrevision long vs. DAIR\nrevision short vs. DAIR, but no other combinations of revision.\none-stage short + two-stage long vs. DAIR\ntwo-stage short + one-stage long vs. DAIR\n\nWhere (1) and (2) are the likely the most relevant comparisons of interest, but nothing precludes the comparisons stated in (3) and (4). The key point is the explicit statement of the duration type at which the comparison is made, which again is averaged over the empircal distribution of surgical procedure type (one-stage/two-stage).\nHowever, we always needs to marginalise over \\(S\\) (selection/plan):\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|R=0] &= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1s)\\mathbb{P}(S=s|R=0) \\\\\n\\mathbb{E}[Y|R=1,D=0] &= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1s + \\beta_2 + \\beta_3s)\\mathbb{P}(S=s|R=1,D=0) \\\\\n\\mathbb{E}[Y|R=1,D=1] &= \\sum_{s=0}^1 \\text{expit}(\\beta_0 + \\beta_1s + \\beta_2 + \\beta_3s + \\beta_4 + \\beta_5s)\\mathbb{P}(S=s|R=1,D=1)\n\\end{aligned}\n\\]\nAgain, can alternatively consider the average conditional log-odds ratio\n\\[\n\\begin{aligned}\n\\mathbb{E}\\left[\\ln\\frac{\\text{odds}(Y|R=1,S,D)}{\\text{odds}(Y|R=0,S,D)}|D_0,D_1\\right] &= \\beta_2+\\beta_3\\mathbb{E}[S] + \\beta_4D_0 + \\beta_5D_1\\mathbb{E}[S]\n\\end{aligned}\n\\]\nwhere I’ve made it explicit that \\(D_0\\) (one-stage short) and \\(D_1\\) (two-stage short) may differ. However, in practice, these would likely be set to the same level.\nThe default data generating mechanism has the functional form:\n\\[\n\\mathbb{E}[Y|R,S,D] = \\text{expit}(\\beta_0 + \\beta_1X + \\beta_1S + \\beta_2R + \\beta_3RS + \\beta_4RD + \\beta_5RSD)\n\\]\nspecified with non-zero effects on all terms.\n\n\nGenerate duration data\ngenerate_data_2 &lt;- function(\n    n = 1000000,\n    f = function(x, r, s, d){ -1 + x + s + r + 0.5 * r * s - 0.5 * r * d - 0.25 * r * s * d}) {\n  x &lt;- rbinom(n, 1, 0.25)\n  s &lt;- rbinom(n, 1, 0.7)\n  r &lt;- rbinom(n, 1, 0.5)\n  a &lt;- r * (s + 1)\n  d &lt;- as.numeric((a &gt; 0) * rbinom(n, 1, 0.5))\n  y0 &lt;- rbinom(n, 1, plogis(f(x, 0, s, 0)))\n  y10 &lt;- rbinom(n, 1, plogis(f(x, 1, s, 0)))\n  y11 &lt;- rbinom(n, 1, plogis(f(x, 1, s, 1)))\n  y &lt;- (1 - r) * y0 + r * ((1 - d) * y10 + d * y11)\n  D &lt;- data.table(x = x, r = r, s = s, a = a, d = d, y0 = y0, y10 = y10, y11 = y11, y = y)[\n    ,\n    `:=`(\n      a1d1 = as.numeric(a == 1 & d == 1),\n      a2d1 = as.numeric(a == 2 & d == 1),\n      r_fac = factor(r),\n      a_fac = factor(a),\n      s_fac = factor(s),\n      a_cen = r * (a - 1 - mean(a[r == 1] - 1)),\n      s_cen = s - mean(s),\n      s_ort = s - 0.5\n    )\n  ]\n}\nset.seed(1246)\nD &lt;- generate_data_2(f = function(x, r, s, d){ -1 + s + x})\nfit2 &lt;- glm(y ~ x + r + r:s + r:d + r:s:d, data = D, family = binomial())\nfit2s &lt;- glm(y ~ x + s + r + r:s + r:d + r:s:d, data = D, family = binomial())\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nIn the following examples estimation under null effects is considered wherein the true data generation mechanism was \\(\\mathbb{E}[Y|S,X] = \\text{expit}(-1 + S + X)\\). That is, where there are no treatment effects in either the surgical or duration domains.\nThe estimates use G-computation. Specifically, all of the following average over all terms bar the comparison of interest.\n\n\n\n\n\nRevision vs. DAIR\n# Revision vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast Estimate Std. Error     z Pr(&gt;|z|)   S   2.5 %\n    r ln(odds(1) / odds(0)) -0.00856    0.00410 -2.09   0.0370 4.8 -0.0166\n    r ln(odds(1) / odds(0)) -0.00836    0.00406 -2.06   0.0396 4.7 -0.0163\n    97.5 %\n -0.000515\n -0.000400\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted \nType:  response \n\n\n\n\nRevision (long) vs. DAIR and Revision (short) vs. DAIR\n# Revision (long) vs. DAIR and Revision (short) vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", by = \"d\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", by = \"d\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast d Estimate Std. Error     z Pr(&gt;|z|)   S   2.5 %\n    r ln(odds(1) / odds(0)) 0 -0.00864    0.00473 -1.83   0.0676 3.9 -0.0179\n    r ln(odds(1) / odds(0)) 1 -0.00832    0.00473 -1.76   0.0785 3.7 -0.0176\n    r ln(odds(1) / odds(0)) 0 -0.00863    0.00469 -1.84   0.0658 3.9 -0.0178\n    r ln(odds(1) / odds(0)) 1 -0.00755    0.00469 -1.61   0.1074 3.2 -0.0167\n   97.5 %\n 0.000627\n 0.000949\n 0.000562\n 0.001641\n\nColumns: term, contrast, d, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nConditional on X\n# Conditional on X\nrbind(\n  avg_comparisons(fit2, variables = \"r\", by = c(\"d\", \"x\"), comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", by = c(\"d\", \"x\"), comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast d x Estimate Std. Error      z Pr(&gt;|z|)    S\n    r ln(odds(1) / odds(0)) 0 0  0.00267    0.00493  0.541   0.5884  0.8\n    r ln(odds(1) / odds(0)) 0 1 -0.04726    0.00496 -9.525   &lt;0.001 69.0\n    r ln(odds(1) / odds(0)) 1 0  0.00270    0.00493  0.547   0.5842  0.8\n    r ln(odds(1) / odds(0)) 1 1 -0.04602    0.00496 -9.277   &lt;0.001 65.6\n    r ln(odds(1) / odds(0)) 0 0 -0.00895    0.00490 -1.829   0.0675  3.9\n    r ln(odds(1) / odds(0)) 0 1 -0.00909    0.00494 -1.841   0.0656  3.9\n    r ln(odds(1) / odds(0)) 1 0 -0.00822    0.00489 -1.680   0.0930  3.4\n    r ln(odds(1) / odds(0)) 1 1 -0.00667    0.00494 -1.350   0.1771  2.5\n    2.5 %    97.5 %\n -0.00700  0.012332\n -0.05699 -0.037538\n -0.00696  0.012360\n -0.05575 -0.036301\n -0.01855  0.000643\n -0.01878  0.000588\n -0.01782  0.001370\n -0.01635  0.003014\n\nColumns: term, contrast, d, x, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nShort vs Long (one-stage) and short vs. long (two-stage)\n# Short vs Long (one-stage) and short vs. long (two-stage)\nrbind(\n  avg_comparisons(fit2, variables = \"d\", by = \"s\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"d\", by = \"s\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast s Estimate Std. Error      z Pr(&gt;|z|)   S    2.5 %\n    d ln(odds(1) / odds(0)) 0  0.00603    0.00491  1.228    0.220 2.2 -0.00359\n    d ln(odds(1) / odds(0)) 1 -0.00174    0.00330 -0.528    0.597 0.7 -0.00821\n    d ln(odds(1) / odds(0)) 0  0.00664    0.00538  1.234    0.217 2.2 -0.00390\n    d ln(odds(1) / odds(0)) 1 -0.00176    0.00333 -0.527    0.598 0.7 -0.00829\n  97.5 %\n 0.01565\n 0.00472\n 0.01718\n 0.00478\n\nColumns: term, contrast, s, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nShort vs long conditional on x\n# Short vs long conditional on x\navg_comparisons(fit2, variables = \"d\", by = c(\"s\", \"x\"), comparison = \"lnoravg\")\n\n\n\n Term              Contrast s x Estimate Std. Error      z Pr(&gt;|z|)   S\n    d ln(odds(1) / odds(0)) 0 0  0.00599    0.00488  1.228    0.220 2.2\n    d ln(odds(1) / odds(0)) 0 1  0.00712    0.00580  1.228    0.220 2.2\n    d ln(odds(1) / odds(0)) 1 0 -0.00184    0.00349 -0.528    0.597 0.7\n    d ln(odds(1) / odds(0)) 1 1 -0.00172    0.00326 -0.528    0.597 0.7\n    2.5 %  97.5 %\n -0.00357 0.01555\n -0.00425 0.01850\n -0.00868 0.00499\n -0.00812 0.00467\n\nColumns: term, contrast, s, x, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nAnd now consider estimation under effects for all surgery and duration.\n\n\n\n\n\nData generation assuming effects in both domains\nD &lt;- generate_data_2()\nfit2 &lt;- glm(y ~ x + r + r:s + r:d + r:s:d, data = D, family = binomial())\nfit2s &lt;- glm(y ~ x + s + r + r:s + r:d + r:s:d, data = D, family = binomial())\n\n\n\n\nRevision vs. DAIR\n# Revision vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0))     1.03    0.00427 240   &lt;0.001 Inf  1.02   1.03\n    r ln(odds(1) / odds(0))     1.03    0.00423 243   &lt;0.001 Inf  1.02   1.03\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted \nType:  response \n\n\n\n\nRevision (long) vs. DAIR and Revision (short) vs. DAIR\n# Revision (long) vs. DAIR and Revision (short) vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", by = \"d\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", by = \"d\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast d Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0)) 0    1.184    0.00518 228   &lt;0.001 Inf 1.174  1.194\n    r ln(odds(1) / odds(0)) 1    0.607    0.00482 126   &lt;0.001 Inf 0.598  0.617\n    r ln(odds(1) / odds(0)) 0    1.184    0.00515 230   &lt;0.001 Inf 1.174  1.194\n    r ln(odds(1) / odds(0)) 1    0.607    0.00478 127   &lt;0.001 Inf 0.598  0.616\n\nColumns: term, contrast, d, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nConditional on X\n# Conditional on X\nrbind(\n  avg_comparisons(fit2, variables = \"r\", by = c(\"d\", \"x\"), comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", by = c(\"d\", \"x\"), comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast d x Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 %\n    r ln(odds(1) / odds(0)) 0 0    1.239    0.00532 233   &lt;0.001 Inf 1.228\n    r ln(odds(1) / odds(0)) 0 1    1.153    0.00554 208   &lt;0.001 Inf 1.142\n    r ln(odds(1) / odds(0)) 1 0    0.645    0.00499 129   &lt;0.001 Inf 0.635\n    r ln(odds(1) / odds(0)) 1 1    0.573    0.00510 112   &lt;0.001 Inf 0.563\n    r ln(odds(1) / odds(0)) 0 0    1.230    0.00528 233   &lt;0.001 Inf 1.219\n    r ln(odds(1) / odds(0)) 0 1    1.191    0.00554 215   &lt;0.001 Inf 1.180\n    r ln(odds(1) / odds(0)) 1 0    0.635    0.00495 128   &lt;0.001 Inf 0.625\n    r ln(odds(1) / odds(0)) 1 1    0.610    0.00509 120   &lt;0.001 Inf 0.600\n 97.5 %\n  1.249\n  1.163\n  0.655\n  0.583\n  1.240\n  1.202\n  0.645\n  0.620\n\nColumns: term, contrast, d, x, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nShort vs Long (one-stage) and short vs. long (two-stage)\n# Short vs Long (one-stage) and short vs. long (two-stage)\nrbind(\n  avg_comparisons(fit2, variables = \"d\", by = \"s\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"d\", by = \"s\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast s Estimate Std. Error     z Pr(&gt;|z|)   S  2.5 %\n    d ln(odds(1) / odds(0)) 0   -0.235    0.00504 -46.6   &lt;0.001 Inf -0.245\n    d ln(odds(1) / odds(0)) 1   -0.264    0.00295 -89.7   &lt;0.001 Inf -0.270\n    d ln(odds(1) / odds(0)) 0   -0.242    0.00520 -46.6   &lt;0.001 Inf -0.252\n    d ln(odds(1) / odds(0)) 1   -0.277    0.00309 -89.7   &lt;0.001 Inf -0.283\n 97.5 %\n -0.225\n -0.258\n -0.232\n -0.271\n\nColumns: term, contrast, s, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nShort vs long conditional on x\n# Short vs long conditional on x\navg_comparisons(fit2, variables = \"d\", by = c(\"s\", \"x\"), comparison = \"lnoravg\")\n\n\n\n Term              Contrast s x Estimate Std. Error     z Pr(&gt;|z|)   S  2.5 %\n    d ln(odds(1) / odds(0)) 0 0   -0.246    0.00527 -46.6   &lt;0.001 Inf -0.256\n    d ln(odds(1) / odds(0)) 0 1   -0.243    0.00523 -46.5   &lt;0.001 Inf -0.253\n    d ln(odds(1) / odds(0)) 1 0   -0.286    0.00319 -89.7   &lt;0.001 Inf -0.292\n    d ln(odds(1) / odds(0)) 1 1   -0.212    0.00241 -87.9   &lt;0.001 Inf -0.217\n 97.5 %\n -0.235\n -0.233\n -0.280\n -0.207\n\nColumns: term, contrast, s, x, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#other-domains",
    "href": "notebooks/design-notes.html#other-domains",
    "title": "Design Notes",
    "section": "Other Domains",
    "text": "Other Domains\nThe desire for a single model is incorporation of multiple silos and domains. Suppose we introduce the antibiotic type (rifampicin) domain, which is denoted by \\(F\\). Assume everyone were eligible. Our base model would be\n\\[\n\\mathbb{E}[Y|R,S,D,F] = \\text{expit}(\\beta_0 + \\beta_1S + \\beta_2R + \\beta_3RS + \\beta_4RD + \\beta_5RDS + \\beta_6F)\n\\]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\\(\\beta_2\\) is now the shift for revision (under long duration irrespective of surgical type)\n\n\n\n\n\nGenerate rifampicin data\ngenerate_data_3 &lt;- function(\n    n = 1000000,\n    g = function(x, r, s, d, f){ -1 + x + s + r + 0.5 * r * s - 0.25 * r * d - 0.15 * r * s * d + 0.2 * f}) {\n  x &lt;- rbinom(n, 1, 0.25)\n  s &lt;- rbinom(n, 1, 0.7)\n  r &lt;- rbinom(n, 1, 0.5)\n  f &lt;- rbinom(n, 1, 0.5)\n  a &lt;- r * (s + 1)\n  d &lt;- as.numeric((a &gt; 0) * rbinom(n, 1, 0.5))\n  y &lt;- rbinom(n, 1, plogis(g(x, r, s, d, f)))\n  D &lt;- data.table(x = x, r = r, s = s, a = a, d = d, f = f, y = y)\n}\nset.seed(1246)\nD &lt;- generate_data_3()\nfit2 &lt;- glm(y ~ x + r + f + r:s + r:d + r:s:d, data = D, family = binomial())\nfit2s &lt;- glm(y ~ x + s + r + f + r:s + r:d + r:s:d, data = D, family = binomial())\n\n\n\n\nRevision vs. DAIR\n# Revision vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0))      1.1    0.00441 250   &lt;0.001 Inf   1.1   1.11\n    r ln(odds(1) / odds(0))      1.1    0.00437 253   &lt;0.001 Inf   1.1   1.11\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted \nType:  response \n\n\nRevision vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", comparison = \"lnor\"),\n  avg_comparisons(fit2s, variables = \"r\", comparison = \"lnor\")\n)\n\n\n\n Term              Contrast Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0))     1.25    0.00508 247   &lt;0.001 Inf  1.24   1.26\n    r ln(odds(1) / odds(0))     1.26    0.00512 246   &lt;0.001 Inf  1.25   1.27\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nRevision vs. DAIR conditional\n# Revision vs. DAIR conditional\nrbind(\n  avg_comparisons(fit2, variables = \"r\", by = c(\"f\", \"x\", \"d\"), comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", by = c(\"f\", \"x\", \"d\"), comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast f x d Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 %\n    r ln(odds(1) / odds(0)) 0 0 0    1.245    0.00542 230   &lt;0.001 Inf 1.234\n    r ln(odds(1) / odds(0)) 0 0 1    0.945    0.00519 182   &lt;0.001 Inf 0.935\n    r ln(odds(1) / odds(0)) 0 1 0    1.159    0.00561 206   &lt;0.001 Inf 1.148\n    r ln(odds(1) / odds(0)) 0 1 1    0.861    0.00532 162   &lt;0.001 Inf 0.850\n    r ln(odds(1) / odds(0)) 1 0 0    1.225    0.00543 226   &lt;0.001 Inf 1.215\n    r ln(odds(1) / odds(0)) 1 0 1    0.926    0.00518 179   &lt;0.001 Inf 0.916\n    r ln(odds(1) / odds(0)) 1 1 0    1.145    0.00567 202   &lt;0.001 Inf 1.134\n    r ln(odds(1) / odds(0)) 1 1 1    0.852    0.00537 158   &lt;0.001 Inf 0.841\n    r ln(odds(1) / odds(0)) 0 0 0    1.232    0.00538 229   &lt;0.001 Inf 1.222\n    r ln(odds(1) / odds(0)) 0 0 1    0.931    0.00515 181   &lt;0.001 Inf 0.921\n    r ln(odds(1) / odds(0)) 0 1 0    1.192    0.00560 213   &lt;0.001 Inf 1.181\n    r ln(odds(1) / odds(0)) 0 1 1    0.896    0.00531 169   &lt;0.001 Inf 0.886\n    r ln(odds(1) / odds(0)) 1 0 0    1.221    0.00539 227   &lt;0.001 Inf 1.210\n    r ln(odds(1) / odds(0)) 1 0 1    0.922    0.00514 179   &lt;0.001 Inf 0.912\n    r ln(odds(1) / odds(0)) 1 1 0    1.188    0.00569 209   &lt;0.001 Inf 1.177\n    r ln(odds(1) / odds(0)) 1 1 1    0.894    0.00538 166   &lt;0.001 Inf 0.883\n 97.5 %\n  1.256\n  0.955\n  1.170\n  0.871\n  1.236\n  0.936\n  1.156\n  0.862\n  1.243\n  0.941\n  1.203\n  0.907\n  1.231\n  0.932\n  1.200\n  0.905\n\nColumns: term, contrast, f, x, d, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nRevision (long) vs. DAIR and Revision (short) vs. DAIR\n# Revision (long) vs. DAIR and Revision (short) vs. DAIR\nrbind(\n  avg_comparisons(fit2, variables = \"r\", by = \"d\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"r\", by = \"d\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast d Estimate Std. Error   z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0)) 0    1.182    0.00528 224   &lt;0.001 Inf 1.171  1.192\n    r ln(odds(1) / odds(0)) 1    0.889    0.00502 177   &lt;0.001 Inf 0.879  0.899\n    r ln(odds(1) / odds(0)) 0    1.182    0.00525 225   &lt;0.001 Inf 1.171  1.192\n    r ln(odds(1) / odds(0)) 1    0.890    0.00499 178   &lt;0.001 Inf 0.880  0.899\n\nColumns: term, contrast, d, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nRifampicin vs not\n# Rifampicin vs not\nrbind(\n  avg_comparisons(fit2, variables = \"f\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"f\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast Estimate Std. Error    z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    f ln(odds(1) / odds(0))    0.168    0.00387 43.4   &lt;0.001 Inf 0.161  0.176\n    f ln(odds(1) / odds(0))    0.168    0.00382 44.0   &lt;0.001 Inf 0.160  0.175\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted \nType:  response \n\n\n\n\nShort vs Long (one-stage) and short vs. long (two-stage)\n# Short vs Long (one-stage) and short vs. long (two-stage)\nrbind(\n  avg_comparisons(fit2, variables = \"d\", by = \"s\", comparison = \"lnoravg\"),\n  avg_comparisons(fit2s, variables = \"d\", by = \"s\", comparison = \"lnoravg\")\n)\n\n\n\n Term              Contrast s Estimate Std. Error     z Pr(&gt;|z|)     S  2.5 %\n    d ln(odds(1) / odds(0)) 0   -0.119    0.00505 -23.6   &lt;0.001 406.7 -0.129\n    d ln(odds(1) / odds(0)) 1   -0.121    0.00284 -42.6   &lt;0.001   Inf -0.127\n    d ln(odds(1) / odds(0)) 0   -0.120    0.00508 -23.6   &lt;0.001 407.5 -0.130\n    d ln(odds(1) / odds(0)) 1   -0.129    0.00302 -42.6   &lt;0.001   Inf -0.134\n 97.5 %\n -0.109\n -0.115\n -0.110\n -0.123\n\nColumns: term, contrast, s, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nShort vs long conditional on x\n# Short vs long conditional on x\navg_comparisons(fit2, variables = \"d\", by = c(\"s\", \"x\"), comparison = \"lnoravg\")\n\n\n\n Term              Contrast s x Estimate Std. Error     z Pr(&gt;|z|)     S\n    d ln(odds(1) / odds(0)) 0 0  -0.1250    0.00530 -23.6   &lt;0.001 406.9\n    d ln(odds(1) / odds(0)) 0 1  -0.1210    0.00513 -23.6   &lt;0.001 406.4\n    d ln(odds(1) / odds(0)) 1 0  -0.1309    0.00307 -42.6   &lt;0.001   Inf\n    d ln(odds(1) / odds(0)) 1 1  -0.0946    0.00223 -42.4   &lt;0.001   Inf\n   2.5 %  97.5 %\n -0.1354 -0.1146\n -0.1310 -0.1109\n -0.1370 -0.1249\n -0.0989 -0.0902\n\nColumns: term, contrast, s, x, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#silos",
    "href": "notebooks/design-notes.html#silos",
    "title": "Design Notes",
    "section": "Silos",
    "text": "Silos\nThe above has considered the late-acute silo in isolation. Suppose we also had a chronic silo with the same limitations: randomise to DAIR vs. revision, then revision type is determined by the surgeon/patient, duration is randomised. In the new setting, nothing really changes, we can just introduce silo-specific parameters.\nFor lack of letters, let \\(G\\) denote group (silo). Then\n\\[\n\\mathbb{E}[Y|G=g,R,S,D] = \\text{expit}(\\beta_{0,g} + \\beta_{1,g}R + \\beta_{2,g}S + \\beta_{3,g}RS + \\beta_{4,g}RD + \\beta_{5,g}RSD + \\gamma_g^\\mathsf{T}X)\n\\]\nWe might choose to assume that some of the conditional effects are equal across groups. E.g. \\(\\gamma_g=\\gamma\\) for all \\(g\\). Or \\(\\beta_{4,g} = \\beta_4\\) and \\(\\beta_{5,g}=\\beta_5\\). Depends how realistic we think these assumptions may be and whether we have sufficient data to meaningfully estimate silo-specific effects.\nPerhaps the only new issue is that now \\(\\mathbb{P}(S=s|G=1)\\ne\\mathbb{P}(S=s|G=2)\\), so need to weight things within silo.\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe other thing to consider here is that in the early silo, there is no information contributed to parameters characterising the surgical intervention effects. I am not sure that the above model addresses this in that \\(\\beta_{1,g}\\) for \\(g = early\\) would not be defined.",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#revision-type",
    "href": "notebooks/design-notes.html#revision-type",
    "title": "Design Notes",
    "section": "Revision Type",
    "text": "Revision Type\nIn all the above I’ve been assuming that the revision type, \\(S\\), is an attribute of the patient. E.g. all surgeons would choose the same \\(S\\) for the same patient. More realistically, \\(S\\) might also partly depend on the surgeon (e.g. say a surgeon would choose \\(S=1\\) for all patients, but another would choose \\(S=0\\) for all patients, now \\(S\\) is conditional on the surgeon rather than the patient). Assume \\(S\\) is an attribute of the patient/surgeon combination rather than either alone. Do we need to change anything? How to interpret “revision effect”? An average effect over patients and surgeons?\nAlready expect that we should at least condition on the site/surgeon, but do we need anything extra to account for \\(S\\)? Distribution of \\(S\\) conditional on surgeon?",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#randomisation-reveal",
    "href": "notebooks/design-notes.html#randomisation-reveal",
    "title": "Design Notes",
    "section": "Randomisation reveal",
    "text": "Randomisation reveal\nA number of simplifying assumptions have been made that result in an incomplete representation of the design. For example, at the start of the discussion on the duration domain, we assumed that duration is randomised, but depends on both \\(R\\) and \\(S\\). However, note:\n\n\\(R\\) presupposes eligibility and reveal for the surgical domain, which is not the general case, e.g. early stage infection silo.\nPatients may enter into the study without having being entered for a randomised comparison in the surgical domain (e.g. patients with early stage infection) in which case the allocated surgery (\\(R_A\\)) would have been determined entirely by clinician selection.\nPatients enter into the duration domain based on the surgical procedure that occurred. This is expected to usually align with the allocated procedure \\(R_A\\), but may deviate from that.\n\\(D\\) is random, conditional solely on \\(R_P\\) rather than both \\(R\\) and \\(S_{R_A}\\) (as stated in the duration section).\n\\(D\\) exists only for \\(R_P \\in \\{\\text{one-stage}, \\text{two-stage}\\}\\) otherwise reveal never occurs and duration allocated \\(D_A\\) is determined by clinician selection\nWhile the duration domain for one-stage and two-stage both contain long (reference) vs short levels for duration of antibiotic, the levels are distinct for each procedure.\n\nTo incorporate some of these ideas, start with the following definitions:\n\n\\(E_R\\) reveal for surgical domain - 0: no, 1: yes\n\\(E_D\\) reveal for duration domain - 0: no, 1: yes\n\\(E_F\\) reveal for choice domain - 0: no, 1: yes\n\\(R\\) randomised surgery - 0: DAIR, 1: revision\n\\(S_R\\) revision type preference (pre-randomisation) - 0: DAIR, 1: one-stage, 2: two-stage\n\\(R_A\\) allocated surgery - 0: DAIR, 1: one-stage, 2: two-stage\n\\(R_P\\) performed surgery - 0: DAIR, 1: revision\n\\(S_{R_P}\\) revision type performed (post-randomisation) - 0: one-stage, 1: two-stage\n\\(D\\) randomised duration - 0: long, 1: short\n\\(D_A\\) allocated duration - 0: long, 1: short, 2: other\n\\(S_D\\) selected duration - 0: long, 1: short, 2: other\n\\(F\\) randomised choice - 0: norif, 1: rif\n\\(F_A\\) allocated choice - 0: norif, 1: rif, 2: other\n\\(S_F\\) selected choice - 0: norif, 1: rif, 2: other\n\\(Y\\) treatment success - 0: no, 1: yes\n\nIn practice, we expect the allocated \\(R_A\\) and actual \\(R_P\\) surgical procedure performed will align, but in some cases they may not.\nContrived) example one: revision was randomised and the original surgeon only performs two-stage revision. The original surgeon becomes unavailable to do the procedure and another surgeon (who only performs one-stage revision) takes over the case. The patient enters into the duration domain for comparisons within the setting of one-stage revision.\nContrived) example two: revision was randomised and the surgeon intends to perform a two-stage revision. On the operating table, the surgeon switches to dair, for unknown reasons and the patient will no longer enter into randomised comparisons for the duration domain.\n\\(R_A\\) (allocation) is now determined by additional variables:\n\\[\nR_A = (1-E_R) S_R + E_R R S_R\n\\]\nso that when we have no revealed randomisation for the surgical domain, \\(R_A\\) aligns with the preferred procedure out of all those possible (dair, one-stage, two-stage). When randomisation revealed for the surgical domain, the first term disappears and for \\(R = 0\\), the allocation is dair, irrespective of preferred surgery, whereas when \\(R = 1\\) we get whatever one of one-stage (\\(S_R = 1\\)) or two-stage (\\(S_R = 2\\)) is preferred.\nFor duration allocated \\(D_A\\):\n\\[\nD_A = (1-E_D) S_D + E_D D\n\\]\nwhen no reveal, \\(E_D = 1\\) and \\(D_A = S_D\\) (long/short/other duration) and when revealed, \\(D_A = D\\) (long/short duration).\nFor choice allocated \\(F_A\\):\n\\[\nF_A = (1 - E_F) S_F + E_F F\n\\]\nwhen no reveal, \\(F_A = S_F\\) (norif/rif/other) and when revealed, \\(F_A = F\\) (norif/rif).\n\n\n\n\n\n\nNote\n\n\n\n\n\nAbove, I am assuming that you can randomise someone within a domain without first assessing their eligibility status or knowing anything about them other than they want to enter the platform, which I believe is the intention. Randomisation is only revealed if eligibility is confirmed and this process is independent to the randomisation process.\n\n\n\nThe edited DAG is shown below, which still has a number of simplications relative to the intended approach but is intended to represent a generalised silo and site of infection, implicitly acknowledging that the outcome will be dependent on both these factors. Patients may contribute to some or all domains, which influences the treatment regimen (combination of treatments across the domains) they receive and which suggests the various causal effects that are identifiable.\n\n\n\n\n\n\n%%{\n  init:{\n    \"flowchart\":{\"htmlLabels\": \"true\"},\n    \"securityLevel\": \"loose\",\n    \"theme\": \"base\"\n}}%%\nflowchart LR\n  ER(E&lt;sub&gt;R) --&gt; RA(R&lt;sub&gt;A) \n  ER --&gt; SR(S&lt;sub&gt;R)\n  ED(E&lt;sub&gt;D) --&gt; DA(D&lt;sub&gt;A) \n  SR --&gt; RA \n  SD(S&lt;sub&gt;D) --&gt; DA \n  R --&gt; RA\n  RA --&gt; RP(R&lt;sub&gt;P) \n  SRP(S&lt;sub&gt;R&lt;sub&gt;P) --&gt; RP\n  RA --&gt; Y\n  RP --&gt; ED\n  D --&gt; DA(D&lt;sub&gt;A)\n  DA --&gt; Y\n  F --&gt; FA(F&lt;sub&gt;A)\n  EF(E&lt;sub&gt;F) --&gt; FA\n  SF(S&lt;sub&gt;F) --&gt; FA \n  FA --&gt; Y\n  UER((U&lt;sub&gt;E&lt;sub&gt;R)) -.-&gt; ER\n  UED((U&lt;sub&gt;E&lt;sub&gt;D)) -.-&gt; ED\n  UEF((U&lt;sub&gt;E&lt;sub&gt;F)) -.-&gt; EF\n  UF((U&lt;sub&gt;F)) -.-&gt; F\n  URP((U&lt;sub&gt;R&lt;sub&gt;P)) -.-&gt; SRP\n  UD((U&lt;sub&gt;D)) -.-&gt; D\n  USR((U&lt;sub&gt;S&lt;sub&gt;R)) -.-&gt; SR\n  UR((U&lt;sub&gt;R)) -.-&gt; R\n  USD((U&lt;sub&gt;S&lt;sub&gt;D)) -.-&gt; SD\n  USF((U&lt;sub&gt;S&lt;sub&gt;F)) -.-&gt; SF\n  UY((U&lt;sub&gt;Y)) -.-&gt; Y\n\n\n\n\nFigure 6: Scenario 4, the \\(U\\) denote independent exogenous variables,\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThere is potentially a direct as well as the indirect effect of both \\(S_R\\) on \\(Y\\) and \\(S_{R_P}\\) on \\(Y\\) but these have been left out of the DAG for now. \\(S_R\\) is actually representing multiple ideas:\n\nwhen the surgical domain is not applicable (randomisation never revealed) e.g. for the chronic patients, then \\(S_R\\) is the selection from dair, one-stage, two-stage\nwhen surgical domain is applicable (randomisation is revealed) then \\(S_R\\) is the option between one-stage and two-stage that is most prefered.\n\nIn essence, \\(S_R\\) involves a conditional ranking of which surgical procedure is prefered.\nFor example, say the selection is: dair, two-stage, one-stage in order of preference. If randomisation is not reveal, dair is would be the selection. If randomisation is revealed, two-stage would be as it is the most prefered surgical procedure applicable to revision.\nOriginally, \\(D\\) was said to depend on some of the selection elements. However, subsequently it was decided that \\(D\\) (long/short) should be viewed like all other randomisation processes, i.e. independent of all other nodes, but is only manifest through \\(D_A\\) for certain surgery types.\n\n\n\nAgain consider intervening on surgical procedure whereby we are interested in the effect of dair vs revision on treatment success. There are no open backdoor paths apparent and therefore no adjustment is required to identify the total effect of \\(R\\) on \\(Y\\). Similarly, neither \\(D\\) nor \\(F\\) have backdoor paths.\nPostulate the following model:\n\\[\n\\begin{aligned}\n\\mathbb{E}[Y|L; \\beta] &=  \\text{expit}( \\beta_0 + \\\\\n  &\\quad \\beta_1 \\mathbb{I}[G = 1] + \\beta_2 \\mathbb{I}[G = 2] + \\beta_3 J + \\\\\n  &\\quad \\beta_4 J \\mathbb{I}[G = 1] + \\beta_5 J \\mathbb{I}[G = 2] + \\\\\n  &\\quad \\beta_6 \\mathbb{I}(1-E_R) + ([\\beta_7 R + \\beta_8 R \\mathbb{I}(S_{R_P} = 2) ])\\mathbb{I}(E_R) + \\\\\n  &\\quad \\beta_9 \\mathbb{I}(1-E_D) + ([\\beta_{10} R_P D + \\beta_{11} R_P D \\mathbb{I}(S_{R_P} = 2)])\\mathbb{I}(E_D) + \\\\\n  &\\quad \\beta_{12} \\mathbb{I}(1-E_F) + \\beta_{13} F E_F )\n\\end{aligned}\n\\]\nwhere the \\(L\\) stands for the set of model variables and \\(\\beta\\) the vector of parameters. The following describe the reference/movements in the log-odds of treatment success:\n\n\\(\\beta_{0}\\) baseline log-odds of treatment success in the early silo / knee site\n\\(\\beta_{1}\\) shift for late-silo membership relative to early\n\\(\\beta_{2}\\) shift for chronic-silo membership relative to early\n\\(\\beta_{3}\\) shift for hip\n\\(\\beta_{4}\\) relative shift for late-silo membership with hip\n\\(\\beta_{5}\\) relative shift for chronic-silo membership with hip\n\\(\\beta_{6}\\) shift under non-reveal (surgery1)\n\\(\\beta_{7}\\) shift under revision that was performed with one-stage procedure for long duration and no-rif\n\\(\\beta_{8}\\) relative shift under revision that was performed with two-stage procedure for long duration and no-rif\n\\(\\beta_{9}\\) shift under non-reveal (duration) with no differentiation for surgical nor duration preference\n\\(\\beta_{10}\\) shift for short duration when one-stage was actually performed\n\\(\\beta_{11}\\) shift for short duration when two-stage was actually performed\n\\(\\beta_{12}\\) shift under non-reveal (choice) with no differentiation for choice preference\n\\(\\beta_{13}\\) shift for rif\n\nWith the complicating factor being that the surgical allocation may inform the type of surgery that the patient gets (but may deviate) and the randomisation that the patient is revealed to in the duration domain is determined by what surgical intervention the patient actually got.\nWe replace pre-randomised preference for surgical type with post-randomised surgical type performed and marginalise out this term.\n\n\n\n\n\n\nNote\n\n\n\n\n\nFull disclosure, I am not entirely sure as to whether the above addresses the full impacts of deviations between allocated and performed surgery or whether the DAG is sufficiently complete representation of the dependencies.\n\n\n\nAs previously, for the surgical domain, we are interested the effect of intervening on \\(R\\). For the duration domain, we are interested in the effect of intervening on \\(D|R_P\\). For the choice domain, we are interested in the effect of intervening on \\(F\\).\n\n\n\n\n\n\nNote\n\n\n\n\n\nNote that for the following specification, the design matrix can become singular (linear dependence between some of the variables) e.g. if surgical reveal is equivalent to silo membership. I am assuming some small amount of noise in reveal such that this isn’t a problem.\n\n\n\n\n\nGenerate complete data\ngenerate_data_4 &lt;- function(\n    n = 1e6,\n    g = function(p_a, l1, l2, j, er, ed, ef, r, rp, d, srp, f){ \n      -1 + -0.04 * l1 - 0.07 * l2 - 0.02 * j - 0.01 * l1 * j - 0.06 * l2 * j +\n        -0.1*(1-er) + (0.2*r + 0.4*r*(srp==2))*(er) +\n        -0.05*(1-ed) + (0.4*rp*d + 0.1*rp*d*(srp==2))*(ed) +\n        -0.25*(1-ef) + 0.15*f*(ef) \n      }\n    ) {\n  \n  p_a = array(\n    c(0.65, 0.55, 0.6, 0.75, 0.6, 0.65),\n    dim = c(3, 2), dimnames = list(c(\"early\", \"late\", \"chronic\"),c(\"knee\", \"hip\")))\n  \n  # silo (l) and joint (j)\n  l &lt;- sample(0:2, n, replace = T, prob = c(0.3, 0.5, 0.2)) \n  l1 = as.numeric(l == 1)\n  l2 = as.numeric(l == 2)\n  \n  p_j &lt;- array(c(0.4,0.7,0.5,0.6,0.3,0.5), dim = c(3, 2), \n               dimnames = list(c(\"early\", \"late\", \"chronic\"), c(\"knee\", \"hip\")))\n  j &lt;- rbinom(n, 1, p_j[l+1, 2])\n  # reveal for late only, with a small number who never get revealed even if they\n  # were in late. you can leave this out but the model spec will need to be updated\n  # because there will be linearly depenedent cols in the design matrix\n  er &lt;- as.numeric(l == 1)\n  er[l==1][as.logical(rbinom(er[l==1], 1, 0.05))] &lt;- 0\n  # randomise dair vs rev\n  r &lt;- rbinom(n, 1, 0.5)\n  # (approx) 70% chance of clinician choosing two-stage if pt is rand to revision \n  sr &lt;- numeric(n)\n  sr[r == 0] &lt;- sample(0:2, sum(r == 0), replace = T, prob = c(0.2, 0.2, 0.6))\n  sr[r == 1] &lt;- sample(1:2, sum(r == 1), replace = T, prob = c(0.3, 0.7))\n  # pref towards two-stage, assuming revision\n  sra &lt;- as.numeric(sr == 2)\n  # determine allocation of surgery type\n  ra &lt;- er * sr + (1-er) * r * (sr) \n  \n  # 10% of the allocated treatments may have switch to a different surg type\n  srp &lt;- ra\n  ic &lt;- rbinom(n, 1, 0.1)\n  srp[as.logical(ic)] &lt;- sample(0:2, sum(ic), replace = T, prob = c(0.2, 0.2, 0.6))\n  # was the procedure type dair or revision?\n  rp &lt;- as.numeric(srp %in% 1:2)\n  \n  # non-reveal of duration if rp is dair (0)\n  ed &lt;- as.numeric(rp == 1)\n  # rand to long (0), short (1) based on surgery received\n  d &lt;- as.numeric((rp &gt; 0) * rbinom(n, 1, 0.5))\n  # 60% reveal ab choice\n  ef &lt;- rbinom(n, 1, 0.6)\n  f &lt;- as.numeric((ef == 1) * rbinom(n, 1, 0.5))\n  \n  y &lt;- rbinom(n, 1, plogis(g(p_a, l1, l2, j, er, ed, ef, r, rp, d, srp, f)))\n  # table(y, useNA = \"always\")\n  \n  D &lt;- data.table(\n    l1, l2, j, \n    er, ed, ef,\n    erx = 1-er, edx = 1-ed, efx=1-ef,\n    r, sr, sra, ra, \n    ic, rp, srp, srp2 = as.numeric(srp == 2), d,\n    f, y\n  )\n}\nset.seed(102)\nD &lt;- generate_data_4()\n\n# early silo, should be non-reveal with no r options (default to 0)\n# D[, .N, keyby = .(l, j, er, r)]\n# those who received rev are revealed for d (ed = 0) and are 0:1 conditional on revision type (srp)\n# D[, .N, keyby = .(rp, ed, srp, d)]\n# those entering ab choice should come from all strata, infec site\n# D[ef == 0, .N, keyby = .(l, j, f)]\n# those that dont should also be dist across sample\n# D[ef == 1, .N, keyby = .(l, j, f)]\n\nfit2 &lt;- glm(y ~ l1 + l2 + j + l1:j + l2:j +\n              erx + er:r + er:r:srp2 +\n              edx + ed:rp:d + ed:d:rp:srp2 +\n              efx + ef:f, \n            data = D, family = binomial())\nsummary(fit2)\n\n\n\nCall:\nglm(formula = y ~ l1 + l2 + j + l1:j + l2:j + erx + er:r + er:r:srp2 + \n    edx + ed:rp:d + ed:d:rp:srp2 + efx + ef:f, family = binomial(), \n    data = D)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  -0.992730   0.017361 -57.182  &lt; 2e-16 ***\nl1           -0.036997   0.016251  -2.277  0.02281 *  \nl2           -0.081398   0.009886  -8.234  &lt; 2e-16 ***\nj            -0.028103   0.008548  -3.288  0.00101 ** \nerx          -0.101703   0.015480  -6.570 5.04e-11 ***\nedx          -0.045398   0.006282  -7.227 4.94e-13 ***\nefx          -0.251435   0.005446 -46.167  &lt; 2e-16 ***\nl1:j         -0.022724   0.010840  -2.096  0.03605 *  \nl2:j         -0.052919   0.013561  -3.902 9.53e-05 ***\ner:r          0.187560   0.009727  19.283  &lt; 2e-16 ***\nef:f          0.147332   0.005624  26.198  &lt; 2e-16 ***\ner:r:srp2     0.407762   0.010375  39.302  &lt; 2e-16 ***\ned:rp:d       0.414709   0.008222  50.439  &lt; 2e-16 ***\nsrp2:ed:rp:d  0.085740   0.008749   9.800  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1216852  on 999999  degrees of freedom\nResidual deviance: 1179406  on 999986  degrees of freedom\nAIC: 1179434\n\nNumber of Fisher Scoring iterations: 4\n\n\nGenerate complete data\n# linearly_dep_cols(fit2)\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nUsing g-computation to determine the marginal effects. lnor and lnoravg are used as the comparisons.\nThe first (lnor) approach (average log odds?)\n\npredicts the log-odds of treatment success for all units with the surgical approach set to revision.\npredicts the log-odds of treatment success for all units with the surgical approach set to dair.\ncomputes the difference between the response on the log odds scale and takes the mean\n\nAlso can be derived from a weigted combination of the parameters from the regression model. What is an accurate interpretation of this parameter? How would you explain it to a non-statistician?\nThe second (lnoravg) approach (marginal mean?)\n\npredicts the probability of treatment success for all units with the surgical approach set to revision and computes the mean\npredicts the probability of treatment success for all units with the surgical approach set to dair and computes the mean\nconverts the mean probability of treatment success to the log-odds scale and takes the difference\n\n\n\n\n\n\nCode\n# Revision vs. DAIR\ncmp &lt;- avg_comparisons(fit2, variables = \"r\", comparison = \"lnor\")\n\n# avg_comparisons(fit2, variables = \"r\", comparison = \"lnor\", by = \"er\")\n\nd_new &lt;- copy(D)\n\n# equivalent to using lnor\nd_new[, `:=`(r = 1)]\nlo1 &lt;- predict(fit2, newdata = d_new)\nd_new[, `:=`(r = 0)]\nlo0 &lt;- predict(fit2, newdata = d_new)\n\n# in this setting is equivalent to weighted combination of parameters\nb &lt;- coef(fit2)\n\nw_srp &lt;- D[er == 1, mean(srp2)]\nw_er &lt;- D[, mean(er)]\n\nrbind(\n  \"predict at r = 0/1\" = mean(lo1 - lo0),\n  \"weighting coef by er and srp (condit on reveal)\" = w_er * b[\"er:r\"] + w_er * w_srp * b[\"er:r:srp2\"] , \n  \"avg_comparisons (lnor)\" = cmp$estimate\n)\n\n\n                                                     er:r\npredict at r = 0/1                              0.2136018\nweighting coef by er and srp (condit on reveal) 0.2136018\navg_comparisons (lnor)                          0.2136018\n\n\nCode\ncmp\n\n\n\n Term              Contrast Estimate Std. Error    z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0))    0.214    0.00301 70.9   &lt;0.001 Inf 0.208   0.22\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\n\n\nCode\n# using lnoravg\navg_comparisons(fit2, variables = \"r\", comparison = \"lnoravg\")\n\n\n\n Term              Contrast Estimate Std. Error    z Pr(&gt;|z|)   S 2.5 % 97.5 %\n    r ln(odds(1) / odds(0))    0.229    0.00314 73.1   &lt;0.001 Inf 0.223  0.235\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted \nType:  response \n\n\nCode\nd_new[, r := 1]\np1 &lt;- predict(fit2, newdata = d_new, type = \"response\")\nd_new[, r := 0]\np0 &lt;- predict(fit2, newdata = d_new, type = \"response\")\nqlogis(mean(p1)) - qlogis(mean(p0))\n\n\n[1] 0.2292898\n\n\nAnd for duration and choice.\n\n\nCode\n# Short vs Long (one-stage) and short vs. long (two-stage)\navg_comparisons(fit2, variables = \"d\", by = \"srp2\", comparison = \"lnoravg\")\n\n\n\n Term              Contrast srp2 Estimate Std. Error    z Pr(&gt;|z|)   S 2.5 %\n    d ln(odds(1) / odds(0))    0    0.179    0.00361 49.8   &lt;0.001 Inf 0.172\n    d ln(odds(1) / odds(0))    1    0.486    0.00558 87.1   &lt;0.001 Inf 0.475\n 97.5 %\n  0.187\n  0.497\n\nColumns: term, contrast, srp2, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n\n\nCode\n# Rifampicin vs not\navg_comparisons(fit2, variables = \"f\", comparison = \"lnoravg\")\n\n\n\n Term              Contrast Estimate Std. Error    z Pr(&gt;|z|)     S  2.5 %\n    f ln(odds(1) / odds(0))   0.0894    0.00341 26.2   &lt;0.001 500.7 0.0827\n 97.5 %\n  0.096\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted_lo, predicted_hi, predicted \nType:  response",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/design-notes.html#footnotes",
    "href": "notebooks/design-notes.html#footnotes",
    "title": "Design Notes",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe parameter ignores potential differentiation for surgical type.↩︎",
    "crumbs": [
      "Design",
      "Design Notes"
    ]
  },
  {
    "objectID": "notebooks/example-trials.html",
    "href": "notebooks/example-trials.html",
    "title": "Example trials",
    "section": "",
    "text": "Example trials are provided to give insight into typical cell sample sizes as well as the level of uncertainty associated with the parameter estimation process. Examples are from trials at their maximum sample size with all follow up completed. Sequential variants with adaptations will be added later.",
    "crumbs": [
      "Design",
      "Example trials"
    ]
  },
  {
    "objectID": "notebooks/example-trials.html#null-scenario",
    "href": "notebooks/example-trials.html#null-scenario",
    "title": "Example trials",
    "section": "Null scenario",
    "text": "Null scenario\nTable 1 shows a summary of the treatment sucesses based on the \\(n\\) patients associated with each combination of design variables when no treatment effects (non-membership effects still retained) in the simulated data of 2500 patients. Given that this is a summary of a single data set, some variation from the underlying simulation parameters is to be expected.\n\n\nCode\nset.seed(11)\n\nsim_spec &lt;- get_sim_spec()\n\nsim_spec$b['r1'] &lt;- 0\nsim_spec$b['r2'] &lt;- 0\nsim_spec$b['r1d'] &lt;- 0\nsim_spec$b['r2d'] &lt;- 0\nsim_spec$b['f'] &lt;- 0\n\nll &lt;- get_trial_data(N = 2500, sim_spec = sim_spec)\n\ngt_tbl &lt;- tbl_ex_trial(ll$d)\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\nSurgical Da\nDuration Db\nType Dc\nResponse\n\n\nreveal\nassigned\nreceived\nreveal\nassigned\nreveal\nassigned\ny\nn\nMLE (py)\nTRUE (py)1\n\n\n\n\nearly\n\n\n\n0\n0\n0\n0\n0\n0\n0\n188\n270\n0.70\n0.68\n\n\n\n0\n0\n0\n0\n0\n1\n0\n122\n195\n0.63\n0.63\n\n\n\n0\n0\n0\n0\n0\n1\n1\n149\n228\n0.65\n0.63\n\n\n\n0\n0\n1\n1\n0\n0\n0\n9\n13\n0.69\n0.72\n\n\n\n0\n0\n1\n1\n0\n1\n0\n8\n13\n0.62\n0.67\n\n\n\n0\n0\n1\n1\n0\n1\n1\n6\n10\n0.60\n0.67\n\n\n\n0\n0\n1\n1\n1\n0\n0\n13\n18\n0.72\n0.72\n\n\n\n0\n0\n1\n1\n1\n1\n0\n5\n8\n0.62\n0.67\n\n\n\n0\n0\n1\n1\n1\n1\n1\n7\n10\n0.70\n0.67\n\n\nsubtotal\n—\n—\n—\n—\n—\n—\n—\n507\n765\n0.66\n—\n\n\nlate\n\n\n\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1.00\n0.61\n\n\n\n0\n0\n0\n0\n0\n1\n0\n2\n5\n0.40\n0.55\n\n\n\n0\n0\n0\n0\n0\n1\n1\n1\n1\n1.00\n0.55\n\n\n\n0\n0\n1\n1\n0\n1\n1\n2\n3\n0.67\n0.59\n\n\n\n0\n0\n1\n1\n1\n0\n0\n3\n4\n0.75\n0.65\n\n\n\n0\n0\n1\n1\n1\n1\n0\n0\n1\n0.00\n0.59\n\n\n\n0\n0\n1\n1\n1\n1\n1\n0\n2\n0.00\n0.59\n\n\n\n0\n0\n2\n1\n0\n0\n0\n3\n3\n1.00\n0.64\n\n\n\n0\n0\n2\n1\n0\n1\n0\n2\n2\n1.00\n0.58\n\n\n\n0\n0\n2\n1\n0\n1\n1\n0\n3\n0.00\n0.58\n\n\n\n0\n0\n2\n1\n1\n0\n0\n1\n3\n0.33\n0.64\n\n\n\n0\n0\n2\n1\n1\n1\n0\n3\n4\n0.75\n0.58\n\n\n\n0\n0\n2\n1\n1\n1\n1\n1\n2\n0.50\n0.58\n\n\n\n1\n0\n0\n0\n0\n0\n0\n146\n233\n0.63\n0.63\n\n\n\n1\n0\n0\n0\n0\n1\n0\n108\n192\n0.56\n0.57\n\n\n\n1\n0\n0\n0\n0\n1\n1\n99\n172\n0.58\n0.57\n\n\n\n1\n1\n1\n1\n0\n0\n0\n21\n41\n0.51\n0.63\n\n\n\n1\n1\n1\n1\n0\n1\n0\n15\n28\n0.54\n0.57\n\n\n\n1\n1\n1\n1\n0\n1\n1\n26\n45\n0.58\n0.57\n\n\n\n1\n1\n1\n1\n1\n0\n0\n26\n44\n0.59\n0.63\n\n\n\n1\n1\n1\n1\n1\n1\n0\n19\n30\n0.63\n0.57\n\n\n\n1\n1\n1\n1\n1\n1\n1\n15\n25\n0.60\n0.57\n\n\n\n1\n1\n2\n1\n0\n0\n0\n48\n79\n0.61\n0.63\n\n\n\n1\n1\n2\n1\n0\n1\n0\n34\n62\n0.55\n0.57\n\n\n\n1\n1\n2\n1\n0\n1\n1\n33\n56\n0.59\n0.57\n\n\n\n1\n1\n2\n1\n1\n0\n0\n54\n78\n0.69\n0.63\n\n\n\n1\n1\n2\n1\n1\n1\n0\n35\n61\n0.57\n0.57\n\n\n\n1\n1\n2\n1\n1\n1\n1\n28\n54\n0.52\n0.57\n\n\nsubtotal\n—\n—\n—\n—\n—\n—\n—\n726\n1234\n0.59\n—\n\n\nchronic\n\n\n\n0\n0\n0\n0\n0\n0\n0\n23\n38\n0.61\n0.66\n\n\n\n0\n0\n0\n0\n0\n1\n0\n23\n30\n0.77\n0.61\n\n\n\n0\n0\n0\n0\n0\n1\n1\n21\n33\n0.64\n0.61\n\n\n\n0\n0\n1\n1\n0\n0\n0\n12\n17\n0.71\n0.71\n\n\n\n0\n0\n1\n1\n0\n1\n0\n14\n19\n0.74\n0.65\n\n\n\n0\n0\n1\n1\n0\n1\n1\n13\n17\n0.76\n0.65\n\n\n\n0\n0\n1\n1\n1\n0\n0\n12\n20\n0.60\n0.71\n\n\n\n0\n0\n1\n1\n1\n1\n0\n9\n17\n0.53\n0.65\n\n\n\n0\n0\n1\n1\n1\n1\n1\n5\n12\n0.42\n0.65\n\n\n\n0\n0\n2\n1\n0\n0\n0\n48\n60\n0.80\n0.70\n\n\n\n0\n0\n2\n1\n0\n1\n0\n27\n47\n0.57\n0.64\n\n\n\n0\n0\n2\n1\n0\n1\n1\n24\n33\n0.73\n0.64\n\n\n\n0\n0\n2\n1\n1\n0\n0\n41\n56\n0.73\n0.70\n\n\n\n0\n0\n2\n1\n1\n1\n0\n31\n44\n0.70\n0.64\n\n\n\n0\n0\n2\n1\n1\n1\n1\n31\n58\n0.53\n0.64\n\n\nsubtotal\n—\n—\n—\n—\n—\n—\n—\n334\n501\n0.67\n—\n\n\ntotal\n—\n—\n—\n—\n—\n—\n—\n1567\n2500\n0.63\n—\n\n\n\n1 Transformed from the log-odds of response as used in the linear predictor to simulate data.\n\n\n\n\n\n\n\n\n\nTable 1: Summary of simulated trial data when no treatment effects present\n\n\n\n\nModel the simulated data first using standard normal priors on the domain level treatment effects, then increasing the prior standard deviation to ten in order to see if there is any movement in the posterior summary.\n\n\nCode\nlsd &lt;- get_stan_data(ll$d)\nld &lt;- lsd$ld\nd_s &lt;- copy(lsd$d_s)\n\nm2 &lt;- cmdstanr::cmdstan_model(\"stan/model-sim-04.stan\")\n\nf_null_1 &lt;- m2$sample(\n  ld, iter_warmup = 1000, iter_sampling = 10000,\n  parallel_chains = 2, chains = 2, refresh = 0, show_exceptions = F, \n  max_treedepth = 13)\n\n\nRunning MCMC with 2 parallel chains...\n\nChain 2 finished in 4.5 seconds.\nChain 1 finished in 5.0 seconds.\n\nBoth chains finished successfully.\nMean chain execution time: 4.7 seconds.\nTotal execution time: 5.0 seconds.\n\n\nCode\npost_1 &lt;- data.table(f_null_1$draws(variables = c(c(\"a0\", \"m\", \"b\")), format = \"matrix\"))\npost_1 &lt;- melt(post_1, measure.vars = names(post_1))\nd_tbl_1 &lt;- post_1[, .(\n  prior = \"normal(0, 1)\",\n  mu = mean(value),\n  q_025 = quantile(value, prob = 0.025), \n  q_975 = quantile(value, prob = 0.975)\n), keyby = variable]\nd_tbl_1[, name_tru := names(unlist(sim_spec))]\nd_tbl_1[, tru := unlist(sim_spec)]\n\n# compare when prior sd is set to 10 for trt effects\n\nld$pri_m_sd &lt;- rep(10, length(ld$pri_m_sd))\nld$pri_b_sd &lt;- rep(10, length(ld$pri_b_sd))\n\nf_null_2 &lt;- m2$sample(\n  ld, iter_warmup = 1000, iter_sampling = 10000,\n  parallel_chains = 2, chains = 2, refresh = 0, show_exceptions = F, \n  max_treedepth = 13)\n\n\nRunning MCMC with 2 parallel chains...\n\nChain 2 finished in 5.7 seconds.\nChain 1 finished in 6.1 seconds.\n\nBoth chains finished successfully.\nMean chain execution time: 5.9 seconds.\nTotal execution time: 6.1 seconds.\n\n\nCode\npost_2 &lt;- data.table(f_null_2$draws(variables = c(c(\"a0\", \"m\", \"b\")), format = \"matrix\"))\npost_2 &lt;- melt(post_2, measure.vars = names(post_2))\nd_tbl_2 &lt;- post_2[, .(\n  prior = \"normal(0, 10)\",\n  mu = mean(value), \n  q_025 = quantile(value, prob = 0.025), \n  q_975 = quantile(value, prob = 0.975)\n), keyby = variable]\nd_tbl_2[, name_tru := names(unlist(sim_spec))]\nd_tbl_2[, tru := unlist(sim_spec)]\n\n\n\n\nCode\nd_fig &lt;- rbind(\n  d_tbl_1, d_tbl_2\n)\nd_fig$name_tru &lt;- factor(d_fig$name_tru, levels = unique(d_fig$name_tru))\n\n# https://www.andrewheiss.com/blog/2022/12/08/log10-natural-log-scales-ggplot/\n\nggplot(d_fig, aes(x = name_tru, y = mu, col = prior)) +\n  scale_x_discrete(\"\") +\n  scale_y_continuous(\"log-OR\") + \n  scale_color_discrete(\"Prior sd on log-OR\") +\n  geom_point(data = d_fig, aes(x = name_tru, y = mu), position = position_dodge(width = 0.4)) +\n  geom_linerange(aes(ymin = q_025, ymax = q_975), position = position_dodge2(width = 0.4)) +\n  geom_point(data = d_fig, aes(x = name_tru, y = tru), col = 1, pch = 2) \n\n\n\n\n\n\n\n\nFigure 1: Posterior median and 95% CI for baseline log-odds of treatment success domain A (independent estimates for late and chronic silo).",
    "crumbs": [
      "Design",
      "Example trials"
    ]
  },
  {
    "objectID": "notebooks/example-trials.html#all-domains-effective-scenario",
    "href": "notebooks/example-trials.html#all-domains-effective-scenario",
    "title": "Example trials",
    "section": "All domains effective scenario",
    "text": "All domains effective scenario\nshows a summary of the treatment sucesses based on the \\(n\\) patients associated with each combination of design variables when all treatment effects set to log(2) (with non-membership effects retained as before) in the simulated data of 2500 patients.\n\n\nCode\nset.seed(2)\nsim_spec$b['r1'] &lt;- log(2)\nsim_spec$b['r2'] &lt;- log(2)\nsim_spec$b['r1d'] &lt;- log(2)\nsim_spec$b['r2d'] &lt;- log(2)\nsim_spec$b['f'] &lt;- log(2)\n\nll &lt;- get_trial_data(N = 2500, sim_spec = sim_spec)\n\ngt_tbl &lt;- tbl_ex_trial(ll$d)\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\nSurgical Da\nDuration Db\nType Dc\nResponse\n\n\nreveal\nassigned\nreceived\nreveal\nassigned\nreveal\nassigned\ny\nn\nMLE (py)\nTRUE (py)1\n\n\n\n\nearly\n\n\n\n0\n0\n0\n0\n0\n0\n0\n166\n245\n0.68\n0.68\n\n\n\n0\n0\n0\n0\n0\n1\n0\n112\n172\n0.65\n0.63\n\n\n\n0\n0\n0\n0\n0\n1\n1\n156\n207\n0.75\n0.77\n\n\n\n0\n0\n1\n1\n0\n0\n0\n17\n23\n0.74\n0.72\n\n\n\n0\n0\n1\n1\n0\n1\n0\n6\n7\n0.86\n0.67\n\n\n\n0\n0\n1\n1\n0\n1\n1\n10\n12\n0.83\n0.80\n\n\n\n0\n0\n1\n1\n1\n0\n0\n10\n13\n0.77\n0.84\n\n\n\n0\n0\n1\n1\n1\n1\n0\n6\n6\n1.00\n0.80\n\n\n\n0\n0\n1\n1\n1\n1\n1\n13\n14\n0.93\n0.89\n\n\nsubtotal\n—\n—\n—\n—\n—\n—\n—\n496\n699\n0.71\n—\n\n\nlate\n\n\n\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1.00\n0.61\n\n\n\n0\n0\n0\n0\n0\n1\n0\n0\n1\n0.00\n0.55\n\n\n\n0\n0\n0\n0\n0\n1\n1\n3\n4\n0.75\n0.71\n\n\n\n0\n0\n1\n1\n0\n1\n1\n1\n2\n0.50\n0.75\n\n\n\n0\n0\n1\n1\n1\n0\n0\n2\n2\n1.00\n0.79\n\n\n\n0\n0\n1\n1\n1\n1\n0\n1\n1\n1.00\n0.75\n\n\n\n0\n0\n1\n1\n1\n1\n1\n3\n3\n1.00\n0.85\n\n\n\n0\n0\n2\n1\n0\n0\n0\n5\n7\n0.71\n0.64\n\n\n\n0\n0\n2\n1\n0\n1\n0\n0\n2\n0.00\n0.58\n\n\n\n0\n0\n2\n1\n0\n1\n1\n3\n3\n1.00\n0.74\n\n\n\n0\n0\n2\n1\n1\n0\n0\n2\n2\n1.00\n0.78\n\n\n\n0\n0\n2\n1\n1\n1\n0\n4\n5\n0.80\n0.74\n\n\n\n0\n0\n2\n1\n1\n1\n1\n1\n1\n1.00\n0.85\n\n\n\n1\n0\n0\n0\n0\n0\n0\n156\n245\n0.64\n0.63\n\n\n\n1\n0\n0\n0\n0\n1\n0\n111\n192\n0.58\n0.57\n\n\n\n1\n0\n0\n0\n0\n1\n1\n133\n181\n0.73\n0.73\n\n\n\n1\n1\n1\n1\n0\n0\n0\n25\n30\n0.83\n0.77\n\n\n\n1\n1\n1\n1\n0\n1\n0\n18\n31\n0.58\n0.73\n\n\n\n1\n1\n1\n1\n0\n1\n1\n30\n35\n0.86\n0.84\n\n\n\n1\n1\n1\n1\n1\n0\n0\n26\n30\n0.87\n0.87\n\n\n\n1\n1\n1\n1\n1\n1\n0\n28\n32\n0.88\n0.84\n\n\n\n1\n1\n1\n1\n1\n1\n1\n23\n30\n0.77\n0.91\n\n\n\n1\n1\n2\n1\n0\n0\n0\n53\n68\n0.78\n0.77\n\n\n\n1\n1\n2\n1\n0\n1\n0\n43\n61\n0.70\n0.73\n\n\n\n1\n1\n2\n1\n0\n1\n1\n50\n58\n0.86\n0.84\n\n\n\n1\n1\n2\n1\n1\n0\n0\n81\n92\n0.88\n0.87\n\n\n\n1\n1\n2\n1\n1\n1\n0\n58\n67\n0.87\n0.84\n\n\n\n1\n1\n2\n1\n1\n1\n1\n60\n67\n0.90\n0.91\n\n\nsubtotal\n—\n—\n—\n—\n—\n—\n—\n921\n1253\n0.74\n—\n\n\nchronic\n\n\n\n0\n0\n0\n0\n0\n0\n0\n25\n37\n0.68\n0.66\n\n\n\n0\n0\n0\n0\n0\n1\n0\n20\n34\n0.59\n0.61\n\n\n\n0\n0\n0\n0\n0\n1\n1\n29\n43\n0.67\n0.75\n\n\n\n0\n0\n1\n1\n0\n0\n0\n11\n22\n0.50\n0.71\n\n\n\n0\n0\n1\n1\n0\n1\n0\n9\n12\n0.75\n0.65\n\n\n\n0\n0\n1\n1\n0\n1\n1\n14\n18\n0.78\n0.79\n\n\n\n0\n0\n1\n1\n1\n0\n0\n20\n21\n0.95\n0.83\n\n\n\n0\n0\n1\n1\n1\n1\n0\n24\n29\n0.83\n0.79\n\n\n\n0\n0\n1\n1\n1\n1\n1\n18\n20\n0.90\n0.88\n\n\n\n0\n0\n2\n1\n0\n0\n0\n52\n69\n0.75\n0.70\n\n\n\n0\n0\n2\n1\n0\n1\n0\n30\n45\n0.67\n0.64\n\n\n\n0\n0\n2\n1\n0\n1\n1\n35\n55\n0.64\n0.78\n\n\n\n0\n0\n2\n1\n1\n0\n0\n43\n57\n0.75\n0.82\n\n\n\n0\n0\n2\n1\n1\n1\n0\n26\n36\n0.72\n0.78\n\n\n\n0\n0\n2\n1\n1\n1\n1\n43\n50\n0.86\n0.88\n\n\nsubtotal\n—\n—\n—\n—\n—\n—\n—\n399\n548\n0.73\n—\n\n\ntotal\n—\n—\n—\n—\n—\n—\n—\n1816\n2500\n0.73\n—\n\n\n\n1 Transformed from the log-odds of response as used in the linear predictor to simulate data.\n\n\n\n\n\n\n\n\n\nTable 2: Summary of simulated trial data when all domains associated with positive effects\n\n\n\n\n\n\nCode\nlsd &lt;- get_stan_data(ll$d)\nld &lt;- lsd$ld\nd_s &lt;- copy(lsd$d_s)\n\nm2 &lt;- cmdstanr::cmdstan_model(\"stan/model-sim-04.stan\")\n\nf_alleff_1 &lt;- m2$sample(\n  ld, iter_warmup = 1000, iter_sampling = 10000,\n  parallel_chains = 2, chains = 2, refresh = 0, show_exceptions = F, \n  max_treedepth = 13)\n\n\nRunning MCMC with 2 parallel chains...\n\nChain 2 finished in 4.9 seconds.\nChain 1 finished in 5.2 seconds.\n\nBoth chains finished successfully.\nMean chain execution time: 5.1 seconds.\nTotal execution time: 5.3 seconds.\n\n\nCode\npost_1 &lt;- data.table(f_alleff_1$draws(variables = c(c(\"a0\", \"m\", \"b\")), format = \"matrix\"))\npost_1 &lt;- melt(post_1, measure.vars = names(post_1))\nd_tbl_1 &lt;- post_1[, .(\n  prior = \"normal(0, 1)\",\n  mu = mean(value),\n  q_025 = quantile(value, prob = 0.025), \n  q_975 = quantile(value, prob = 0.975)\n), keyby = variable]\nd_tbl_1[, name_tru := names(unlist(sim_spec))]\nd_tbl_1[, tru := unlist(sim_spec)]\n\n# compare when prior sd is set to 10 for trt effects\n\nld$pri_m_sd &lt;- rep(10, length(ld$pri_m_sd))\nld$pri_b_sd &lt;- rep(10, length(ld$pri_b_sd))\n\nf_alleff_2 &lt;- m2$sample(\n  ld, iter_warmup = 1000, iter_sampling = 10000,\n  parallel_chains = 2, chains = 2, refresh = 0, show_exceptions = F, \n  max_treedepth = 13)\n\n\nRunning MCMC with 2 parallel chains...\n\nChain 1 finished in 6.0 seconds.\nChain 2 finished in 6.4 seconds.\n\nBoth chains finished successfully.\nMean chain execution time: 6.2 seconds.\nTotal execution time: 6.6 seconds.\n\n\nCode\npost_2 &lt;- data.table(f_alleff_2$draws(variables = c(c(\"a0\", \"m\", \"b\")), format = \"matrix\"))\npost_2 &lt;- melt(post_2, measure.vars = names(post_2))\nd_tbl_2 &lt;- post_2[, .(\n  prior = \"normal(0, 10)\",\n  mu = mean(value), \n  q_025 = quantile(value, prob = 0.025), \n  q_975 = quantile(value, prob = 0.975)\n), keyby = variable]\nd_tbl_2[, name_tru := names(unlist(sim_spec))]\nd_tbl_2[, tru := unlist(sim_spec)]\n\n\n\n\nCode\nd_fig &lt;- rbind(\n  d_tbl_1, d_tbl_2\n)\nd_fig$name_tru &lt;- factor(d_fig$name_tru, levels = unique(d_fig$name_tru))\n\n# https://www.andrewheiss.com/blog/2022/12/08/log10-natural-log-scales-ggplot/\n\nggplot(d_fig, aes(x = name_tru, y = mu, col = prior)) +\n  scale_x_discrete(\"\") +\n  scale_y_continuous(\"log-OR\") + \n  scale_color_discrete(\"Prior sd on log-OR\") +\n  geom_point(data = d_fig, aes(x = name_tru, y = mu), position = position_dodge(width = 0.4)) +\n  geom_linerange(aes(ymin = q_025, ymax = q_975), position = position_dodge2(width = 0.4)) +\n  geom_point(data = d_fig, aes(x = name_tru, y = tru), col = 1, pch = 2) \n\n\n\n\n\n\n\n\nFigure 2: Posterior median and 95% CI for baseline log-odds of treatment success (triangles show true values).",
    "crumbs": [
      "Design",
      "Example trials"
    ]
  },
  {
    "objectID": "notebooks/sim-design3-results.html",
    "href": "notebooks/sim-design3-results.html",
    "title": "Simulation results 3",
    "section": "",
    "text": "Simulation 3 is a sequential trial with decision criteria for superiority, and non-inferiority and also for futility with respect to both superiority and non-inferiority.\n\nFor the surgical domain we evaluate whether revision is superior to dair and futility for superiority.\nFor the duration domain (one-stage) we evaluate whether short duration is non-inferior to long duration antibiotic treatment. We also evaluate whether the non-inferiority decision is futile.\nFor the duration domain (two-stage) we evaluate whether long duration is superior to short duration antibiotic treatment (equivalently whether short duration is inferior to long). We also evaluate whether the superiority decision is futile.\nFor the choice domain we evaluate whether rif is superior to no-rif. We also evaluate whether the superiority decision is futile.\n\nEnrolment stops for the respective domain/cells when any of the above are triggered based the decision rules described earlier.\nWe provide summaries of each simulation scenario and the results that were obtained.\n\n\nLoad simulation results\n# files of interest\nflist &lt;- list.files(\"data\", pattern = \"sim03-sc01\")\ntoks &lt;- list()\nl &lt;- list()\nfor(i in 1:length(flist)){\n  l[[i]] &lt;- qs::qread(file.path(\"data\", flist[i]))\n  toks[[i]] &lt;-  unlist(tstrsplit(flist[i], \"[-.]\"))\n}\n\n\n\n\nConfiguration used for each simulated scenario\n# cfg used in each scenario\nd_cfg &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  m &lt;- data.table(do.call(cbind, l[[i]]$cfg))\n  data.table(cbind(sc = tok[2], v = tok[3], analys = 1:nrow(m), m))\n}))\n\n# conversion to numeric\nd_cfg[, `:=`(\n  nsim = as.numeric(nsim),\n  N_pt = as.numeric(N_pt),\n  b_r1 = as.numeric(b_r1),\n  b_r2 = as.numeric(b_r2),\n  w_srp2 = as.numeric(w_srp2),\n  b_r1d = as.numeric(b_r1d),\n  b_r2d = as.numeric(b_r2d),\n  b_f = as.numeric(b_f),\n  d_sup = as.numeric(thresh_sup),\n  d_ni = as.numeric(thresh_non_inf),\n  d_fut_sup = as.numeric(thresh_fut_sup),\n  d_fut_ni = as.numeric(thresh_fut_ni)\n  )]\n\n# derive the 'true' effect for surgery based on weight combination\n# d_cfg[, b_r := b_r1 + w_srp2 * b_r2]\n# d_cfg[, `:=`(b_r1 = NULL, b_r2 = NULL, w_srp2 = NULL)]\n\nd_cfg[, `:=`(w_srp2 = NULL)]\n\n# d_tru &lt;- melt(d_cfg[\n#   , .SD, .SDcols = c(\"sc\", \"v\", \"analys\", \n#                      \"b_r\", \"b_r1d\", \"b_r2d\", \"b_f\")], \n#   id.vars = c(\"sc\", \"v\", \"analys\"), value.name = \"lor_tru\")\n\n\n\n\nProcess simulation results for variables of interest\n# Decisions\ni &lt;- 1\nd_dec &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  # l[[i]]$d_decision\n\n  d_decision &lt;- copy(l[[i]]$d_decision)\n  m &lt;- melt(d_decision, id.vars = c(\"sim\", \"analys\", \"quant\"), variable.name = \"parname\")\n  \n  # Should be right, but just in case...\n  if(any(is.na(m$value))){\n    message(\"Some of the decision values are NA in index \", i, \" file \", flist[i])\n    m[is.na(value), value := FALSE]\n  }\n  \n  # compute the cumulative instances of a decision being made by sim, each \n  # decision type and by parameter\n  m[, value := as.logical(cumsum(value)&gt;0), keyby = .(sim, quant, parname)]\n  # summarise by analysis, decision type and parameter\n  m &lt;- m[, .(pr_val = mean(value)), keyby = .(analys, quant, parname)]\n  # put into wide format\n  m &lt;- dcast(m, parname + analys ~ quant, value.var = \"pr_val\")\n\n  cbind(sc = tok[2], v = tok[3], m)\n}))\n\n# Posterior summaries on effects of interest\nd_post_smry_2 &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  m &lt;- l[[i]]$d_post_smry_2\n  cbind(sc = tok[2], v = tok[3], m)\n}))\n\n# Participant data from trial (grouped)\nd_all &lt;- rbindlist(lapply(seq_along(l), function(i){\n  tok &lt;- toks[[i]]\n  m &lt;- l[[i]]$d_grp\n  cbind(sc = tok[2], v = tok[3], m)\n}))\n\n\nTable 1 summarises the configurations used in each simulated scenario. Each treatment effect parameter is set to have the same magnitude of effect. The effects range from \\(\\log(1/2)\\) in scenario 1 to \\(\\log(2)\\) in scenario 7. Decision rules and thresholds remain constant over the entire enrolment period. The decision processes are documented in the Decision rules page.\nRevision effects are computed as a weighted combination of the log-odds ratios for the one-stage and two-stage revision effects. The weights are the sample proportion receiving one-stage and two-stage surgery in those patients receiving randomised surgical treatment and randomised to revision.\n\n\nCode\nd_tbl &lt;- d_cfg[, .(v, N_pt, b_r1, b_r2, b_r1d, b_r2d, b_f, \n                   delta_sup = delta_sup,\n                   delta_sup_fut = delta_sup_fut,\n                   delta_ni = 1/delta_ni,\n                   thresh_sup, thresh_non_inf, thresh_fut_sup, thresh_fut_ni)]\n\ng_tbl &lt;- d_tbl |&gt; gt() |&gt; \n  cols_align(\n    columns = everything(),\n    align = \"center\"\n  )  |&gt; \n  fmt_number(\n    columns = c(b_r1, b_r2, b_r1d, b_r2d, b_f,\n                delta_ni\n                ),\n    decimals = 3\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Surgical (D&lt;sub&gt;a&lt;/sub&gt;)\"),\n    columns = c(b_r1, b_r2)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Duration (D&lt;sub&gt;b&lt;/sub&gt;)\"),\n    columns = c(b_r1d, b_r2d)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Type (D&lt;sub&gt;c&lt;/sub&gt;)\"),\n    columns = c(b_f)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Decision setup\"),\n    columns = c(delta_sup, thresh_sup, \n                delta_sup_fut, thresh_fut_sup, \n                delta_ni, thresh_non_inf, thresh_fut_ni)\n  ) |&gt;\n  cols_label(\n    v = html(\"Configuration\"),\n    b_r1 = html(\"rev&lt;br&gt;(one-stage)\"),\n    b_r2 = html(\"rev&lt;br&gt;(two-stage)\"),\n    b_r1d = html(\"short&lt;br&gt;(one-stage)\"),\n    b_r2d = html(\"short&lt;br&gt;(two-stage)\"),\n    b_f = html(\"rif\"),\n    delta_sup = html(\"delta&lt;sub&gt;sup&lt;/sub&gt;\"),\n    thresh_sup = html(\"p&lt;sub&gt;sup&lt;/sub&gt;\"),\n    delta_sup_fut = html(\"delta&lt;sub&gt;fut-sup&lt;/sub&gt;\"),\n    thresh_fut_sup = html(\"p&lt;sub&gt;fut-sup&lt;/sub&gt;\"),\n    delta_ni = html(\"delta&lt;sub&gt;ni&lt;/sub&gt;\"),\n    thresh_non_inf = html(\"p&lt;sub&gt;ni&lt;/sub&gt;\"),\n    thresh_fut_ni = html(\"p&lt;sub&gt;fut-ni&lt;/sub&gt;\")\n  ) |&gt;\n  tab_style(\n    style = list(\n      cell_borders(\n        sides = c(\"bottom\"), color = \"black\", weight = px(1), style = \"solid\"\n      )),\n    locations = list(\n      cells_body(\n        columns = everything(),\n        rows = N_pt == 2500\n      )\n    )\n  ) |&gt;\n  tab_options(\n    table.font.size = \"70%\"\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Surgical effects only applies to late silo, effect is relative to response under DAIR.\",\n    locations = cells_column_labels(columns = c(b_r1, b_r2))\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Applies to all silos, effect is relative to response under long duration.\",\n    locations = cells_column_labels(columns = b_r1d)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Applies to all silos, effect is relative to response under short duration.\",\n    locations = cells_column_labels(columns = b_r2d)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Applies to all silos, effect is relative to response under no-rifampicin\",\n    locations = cells_column_labels(columns = b_f)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Reference OR for evaluating superiority\",\n    locations = cells_column_labels(columns = delta_sup)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Probability threshold above which superiority is concluded\",\n    locations = cells_column_labels(columns = thresh_sup)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Reference OR for evaluating futility wrt the superiority decision\",\n    locations = cells_column_labels(columns = delta_sup_fut)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Probability threshold below which futility is concluded\",\n    locations = cells_column_labels(columns = thresh_fut_sup)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Reference OR for evaluating non-inferiority\",\n    locations = cells_column_labels(columns = delta_ni)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Probability threshold above which non-inferiority is concluded\",\n    locations = cells_column_labels(columns = thresh_non_inf)\n  ) |&gt; \n  tab_footnote(\n    footnote = \"Probability threshold below which non-inferiority decision is deemed futile\",\n    locations = cells_column_labels(columns = thresh_fut_ni)\n  )   \n\ng_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguration\nN_pt\nSurgical (Da)\nDuration (Db)\nType (Dc)\nDecision setup\n\n\nrev\n(one-stage)1\nrev\n(two-stage)1\nshort\n(one-stage)2\nshort\n(two-stage)3\nrif4\ndeltasup5\npsup6\ndeltafut-sup7\npfut-sup8\ndeltani9\npni10\npfut-ni11\n\n\n\n\nv01\n500\n−0.693\n−0.693\n−0.693\n−0.693\n−0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv01\n1000\n−0.693\n−0.693\n−0.693\n−0.693\n−0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv01\n1500\n−0.693\n−0.693\n−0.693\n−0.693\n−0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv01\n2000\n−0.693\n−0.693\n−0.693\n−0.693\n−0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv01\n2500\n−0.693\n−0.693\n−0.693\n−0.693\n−0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv02\n500\n−0.405\n−0.405\n−0.405\n−0.405\n−0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv02\n1000\n−0.405\n−0.405\n−0.405\n−0.405\n−0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv02\n1500\n−0.405\n−0.405\n−0.405\n−0.405\n−0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv02\n2000\n−0.405\n−0.405\n−0.405\n−0.405\n−0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv02\n2500\n−0.405\n−0.405\n−0.405\n−0.405\n−0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv03\n500\n−0.182\n−0.182\n−0.182\n−0.182\n−0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv03\n1000\n−0.182\n−0.182\n−0.182\n−0.182\n−0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv03\n1500\n−0.182\n−0.182\n−0.182\n−0.182\n−0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv03\n2000\n−0.182\n−0.182\n−0.182\n−0.182\n−0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv03\n2500\n−0.182\n−0.182\n−0.182\n−0.182\n−0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv04\n500\n0.000\n0.000\n0.000\n0.000\n0.000\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv04\n1000\n0.000\n0.000\n0.000\n0.000\n0.000\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv04\n1500\n0.000\n0.000\n0.000\n0.000\n0.000\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv04\n2000\n0.000\n0.000\n0.000\n0.000\n0.000\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv04\n2500\n0.000\n0.000\n0.000\n0.000\n0.000\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv05\n500\n0.182\n0.182\n0.182\n0.182\n0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv05\n1000\n0.182\n0.182\n0.182\n0.182\n0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv05\n1500\n0.182\n0.182\n0.182\n0.182\n0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv05\n2000\n0.182\n0.182\n0.182\n0.182\n0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv05\n2500\n0.182\n0.182\n0.182\n0.182\n0.182\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv06\n500\n0.405\n0.405\n0.405\n0.405\n0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv06\n1000\n0.405\n0.405\n0.405\n0.405\n0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv06\n1500\n0.405\n0.405\n0.405\n0.405\n0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv06\n2000\n0.405\n0.405\n0.405\n0.405\n0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv06\n2500\n0.405\n0.405\n0.405\n0.405\n0.405\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv07\n500\n0.693\n0.693\n0.693\n0.693\n0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv07\n1000\n0.693\n0.693\n0.693\n0.693\n0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv07\n1500\n0.693\n0.693\n0.693\n0.693\n0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv07\n2000\n0.693\n0.693\n0.693\n0.693\n0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\nv07\n2500\n0.693\n0.693\n0.693\n0.693\n0.693\n1\n0.99\n1.2\n0.05\n0.833\n0.99\n0.2\n\n\n\n1 Surgical effects only applies to late silo, effect is relative to response under DAIR.\n\n\n2 Applies to all silos, effect is relative to response under long duration.\n\n\n3 Applies to all silos, effect is relative to response under short duration.\n\n\n4 Applies to all silos, effect is relative to response under no-rifampicin\n\n\n5 Reference OR for evaluating superiority\n\n\n6 Probability threshold above which superiority is concluded\n\n\n7 Reference OR for evaluating futility wrt the superiority decision\n\n\n8 Probability threshold below which futility is concluded\n\n\n9 Reference OR for evaluating non-inferiority\n\n\n10 Probability threshold above which non-inferiority is concluded\n\n\n11 Probability threshold below which non-inferiority decision is deemed futile\n\n\n\n\n\n\n\n\n\nTable 1: Parameters used to simulate treatment effects and decision thresholds\n\n\n\n\nFigure 1 shows the cumulative probability of each decision quantity. Once answered, the questions are no longer evaluated.\n\nThe first row details the cumulative probability of decisions within the surgical domain, which currently applies only to the late silo. Superiority (sup in legend) and futility (fut_sup) are the relevant quantities of interest.\nThe second row details the cumulative probability of decisions within the duration domain under one-stage revision. Non-inferiority (ni) and inferiority (fut_ni) are the relevant quantities of interest.\nThe third row details the cumulative probability of decisions within the duration domain under two-stage revision. Superiority (sup) and futility (fut_sup) are the relevant quantities of interest.\nThe fourth row details the cumulative probability of decisions within the choice domain. Superiority (sup) and futility (fut_sup) are the relevant quantities of interest.\n\n\n\nCode\n# put power by scenario, variant and analysis in long format\nd_fig_0_01 &lt;- melt(d_dec, id.vars = c(\"sc\", \"v\", \"analys\", \"parname\"), variable.name = \"quant\")\nd_fig_0_01[, quant := factor(quant, \n                        levels = c(\"sup\", \"fut_sup\", \"trt_ni_ref\", \"fut_trt_ni_ref\"))]\n# add in the number of pts having reached 12 months post rand by analysis num\nd_fig_0_01 &lt;- merge(d_fig_0_01, unique(d_cfg[, .(analys, N_pt)]), by = \"analys\")\n\nd_fig_0_01 &lt;- rbind(\n  d_fig_0_01[parname == \"b_r\" & quant %in% c(\"sup\", \"fut_sup\"), ],\n  d_fig_0_01[parname == \"b_r1d\" & quant %in% c(\"trt_ni_ref\", \"fut_trt_ni_ref\"), ],\n  d_fig_0_01[parname == \"b_r2d\" & quant %in% c(\"sup\", \"fut_sup\"), ],\n  d_fig_0_01[parname == \"b_f\" & quant %in% c(\"sup\", \"fut_sup\"), ]\n)\n\nd_fig_0_01[, or_tru := g_or_lab[v]]\nd_fig_0_01[, or_tru := factor(\n  or_tru, labels = g_or_lab, levels = g_or_lab)]\n\nfx &lt;- g_fx\nnames(fx) &lt;- c(\"rev vs dair\", \"6-wk vs 12-wk (one)\", \"12-wk vs 7-day (two)\", \"rif vs no-rif\")\nd_fig_0_01[, parname_lab := factor(\n  names(fx[parname]), levels = c(\"rev vs dair\", \"6-wk vs 12-wk (one)\", \"12-wk vs 7-day (two)\", \"rif vs no-rif\")\n  ) ]\n\nd_text &lt;- unique(d_fig_0_01[, .(parname_lab, or_tru, quant)])\nd_text[parname_lab == \"rev vs dair\" & or_tru %in% c(\"OR 1/2\"),\n       `:=`(label = c(\"rev fut (sup)\"), x = 500, y = 0.2)]\nd_text[parname_lab == \"rev vs dair\" & or_tru %in% c(\"OR 2\"),\n       `:=`(label = c(\"rev sup \\nto dair\"), x = 500, y = 0.2)]\nd_text[parname_lab == \"6-wk vs 12-wk (one)\" & or_tru %in% c(\"OR 1/2\"),\n       `:=`(label = c(\"short fut (ni)\"), x = 500, y = 0.2)]\nd_text[parname_lab == \"6-wk vs 12-wk (one)\" & or_tru %in% c(\"OR 2\"),\n       `:=`(label = c(\"short ni \\nto long\"), x = 500, y = 0.2)]\n\n\nd_text[parname_lab == \"12-wk vs 7-day (two)\" & or_tru %in% c(\"OR 1/2\"),\n       `:=`(label = c(\"long fut (sup)\"), x = 500, y = 0.2)]\nd_text[parname_lab == \"12-wk vs 7-day (two)\" & or_tru %in% c(\"OR 2\"),\n       `:=`(label = c(\"long sup \\nto short\"), x = 500, y = 0.2)]\n\nd_text[parname_lab == \"rif vs no-rif\" & or_tru %in% c(\"OR 1/2\"),\n       `:=`(label = c(\"rif fut (sup)\"), x = 500, y = 0.2)]\nd_text[parname_lab == \"rif vs no-rif\" & or_tru %in% c(\"OR 2\"),\n       `:=`(label = c(\"rif sup \\nto no-rif\"), x = 500, y = 0.2)]\n\n\nnames(d_tbl) &lt;- gsub(\"superiority\", \"sup\", names(d_tbl))\nnames(d_tbl) &lt;- gsub(\"futility (sup)\", \"fut_sup\", names(d_tbl))\nnames(d_tbl) &lt;- gsub(\"NI (trt ni ref)\", \"trt_ni_inf\", names(d_tbl))\nnames(d_tbl) &lt;- gsub(\"futility (NI)\", \"fut_trt_ni_ref\", names(d_tbl))\n\nd_fig_0_01$quant &lt;- factor(\n  d_fig_0_01$quant, \n  levels = c(\"sup\", \"fut_sup\", \"trt_ni_ref\", \"fut_trt_ni_ref\"),\n  labels = c(\"sup\", \"fut_sup\", \"ni\", \"fut_ni\"))\n\np &lt;- ggplot(d_fig_0_01, aes(x = N_pt, y = value, group = quant, col = quant)) +\n  geom_point(size = 0.5) +\n  geom_line(lwd = 0.4) +\n  geom_hline(yintercept = 0.05, lwd = 0.2) +\n  ggthemes::scale_colour_tableau(\n    \"\", palette = \"Tableau 10\",\n  type = \"regular\",\n  direction = 1) +\n  geom_text(\n    data = d_text,\n    aes(x = x, y = y, label = label),\n    hjust   = 0,\n    vjust   = 0, col = 1, size = 3) +\n  scale_linetype_discrete(\"\") +\n  scale_x_continuous(\"N (12-months post rand)\", guide = guide_axis(angle = 45)) +\n  scale_y_continuous(\"Cumulative probability\", breaks = seq(0, 1, by = 0.1)) +\n  facet_grid(parname_lab ~ or_tru)\n\nsuppressWarnings(print(p))\n\n\n\n\n\n\n\n\nFigure 1: Probability of declaring decision by parameter by effect size (all pars set with same OR).\n\n\n\n\n\nTable 2 provides the same detail as the above figure, but makes it easier to see what the magnitudes of the cumulate probabilities are.\n\n\nCode\n# Widen data so that power is shown by col with each col corresponding to an\n# analysis\nd_tbl &lt;- d_fig_0_01[quant %in% c(\"sup\", \"fut_sup\", \"ni\", \"fut_ni\")]\nd_tbl &lt;- dcast(d_tbl, parname + or_tru ~ quant + analys, value.var = \"value\")\nd_tbl &lt;- d_tbl[order(or_tru, parname)]\n\ng_tbl &lt;- d_tbl |&gt; gt(groupname_col = \"parname\") |&gt;\n  fmt_number(\n    columns = everything(),\n    decimals = 2,\n    use_seps = FALSE\n  ) |&gt; \n  tab_spanner(\n    label = html(\"Superiority\"),\n    columns = paste0(\"sup_\", 1:5)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Futility (sup)\"),\n    columns = c(paste0(\"fut_sup_\", 1:5))\n  ) |&gt;\n  tab_spanner(\n    label = html(\"NI (trt ni ref)\"),\n    columns = paste0(\"ni_\", 1:5)\n  ) |&gt;\n  tab_spanner(\n    label = html(\"Futility (ni)\"),\n    columns = c(paste0(\"fut_ni_\", 1:5))\n  ) |&gt;\n  cols_label(\n    or_tru = html(\"OR (true)\"),\n    sup_1 = html(\"500\"),\n    sup_2 = html(\"1000\"),\n    sup_3 = html(\"1500\"),\n    sup_4 = html(\"2000\"),\n    sup_5 = html(\"2500\"),\n    fut_sup_1 = html(\"500\"),\n    fut_sup_2 = html(\"1000\"),\n    fut_sup_3 = html(\"1500\"),\n    fut_sup_4 = html(\"2000\"),\n    fut_sup_5 = html(\"2500\"),\n    ni_1 = html(\"500\"),\n    ni_2 = html(\"1000\"),\n    ni_3 = html(\"1500\"),\n    ni_4 = html(\"2000\"),\n    ni_5 = html(\"2500\"),\n    fut_ni_1 = html(\"500\"),\n    fut_ni_2 = html(\"1000\"),\n    fut_ni_3 = html(\"1500\"),\n    fut_ni_4 = html(\"2000\"),\n    fut_ni_5 = html(\"2500\")\n  ) |&gt;\n  tab_style(\n    style = cell_borders(\n      sides = c(\"left\"),\n      weight = px(1)),\n    locations = cells_body(\n      # columns = c(sup_1, fut_sup_1, inf_1, fut_inf_1, ni_1, fut_ni_1)\n      columns = c(sup_1, fut_sup_1, ni_1, fut_ni_1)\n      )\n    ) |&gt;\n  tab_style(\n    style = list(\n      cell_borders(\n        sides = c(\"top\", \"bottom\"), color = \"red\", weight = px(1), style = \"solid\"\n      )),\n    locations = list(\n      cells_body(\n        columns = everything(),\n        rows = or_tru == \"OR 1\"\n      )\n    )\n  ) |&gt;\n  tab_options(\n    table.font.size = \"80%\"\n  ) |&gt;\n  sub_missing(columns = everything(), missing_text = \"\") \n\ng_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR (true)\nSuperiority\nFutility (sup)\nNI (trt ni ref)\nFutility (ni)\n\n\n500\n1000\n1500\n2000\n2500\n500\n1000\n1500\n2000\n2500\n500\n1000\n1500\n2000\n2500\n500\n1000\n1500\n2000\n2500\n\n\n\n\nb_r\n\n\nOR 1/2\n0.00\n0.00\n0.00\n0.00\n0.00\n0.94\n1.00\n1.00\n1.00\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1/1.5\n0.00\n0.00\n0.00\n0.00\n0.00\n0.70\n0.94\n0.99\n1.00\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1/1.2\n0.00\n0.00\n0.00\n0.00\n0.00\n0.37\n0.66\n0.82\n0.91\n0.95\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1\n0.01\n0.01\n0.02\n0.02\n0.02\n0.16\n0.29\n0.40\n0.49\n0.56\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1.2\n0.03\n0.08\n0.13\n0.18\n0.24\n0.04\n0.07\n0.09\n0.11\n0.12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1.5\n0.14\n0.38\n0.59\n0.75\n0.85\n0.01\n0.01\n0.01\n0.01\n0.01\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 2\n0.45\n0.85\n0.97\n1.00\n1.00\n0.00\n0.00\n0.00\n0.00\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb_r1d\n\n\nOR 1/2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.00\n0.00\n0.00\n0.00\n0.00\n0.56\n0.83\n0.92\n0.97\n0.98\n\n\nOR 1/1.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.00\n0.00\n0.00\n0.00\n0.00\n0.33\n0.51\n0.64\n0.72\n0.78\n\n\nOR 1/1.2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.01\n0.01\n0.02\n0.02\n0.03\n0.16\n0.24\n0.30\n0.34\n0.37\n\n\nOR 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.02\n0.05\n0.07\n0.10\n0.12\n0.07\n0.11\n0.13\n0.14\n0.15\n\n\nOR 1.2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.05\n0.12\n0.21\n0.29\n0.35\n0.02\n0.03\n0.03\n0.04\n0.04\n\n\nOR 1.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.11\n0.29\n0.47\n0.63\n0.76\n0.01\n0.01\n0.01\n0.01\n0.01\n\n\nOR 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.22\n0.59\n0.84\n0.94\n0.98\n0.00\n0.00\n0.00\n0.00\n0.00\n\n\nb_r2d\n\n\nOR 1/2\n0.00\n0.00\n0.00\n0.00\n0.00\n0.82\n0.99\n1.00\n1.00\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1/1.5\n0.00\n0.00\n0.00\n0.00\n0.00\n0.55\n0.88\n0.97\n0.99\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1/1.2\n0.00\n0.00\n0.00\n0.00\n0.00\n0.30\n0.56\n0.74\n0.85\n0.91\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1\n0.01\n0.01\n0.02\n0.02\n0.02\n0.13\n0.25\n0.34\n0.42\n0.48\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1.2\n0.03\n0.07\n0.12\n0.16\n0.21\n0.04\n0.07\n0.09\n0.11\n0.12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1.5\n0.11\n0.27\n0.45\n0.61\n0.74\n0.01\n0.01\n0.01\n0.01\n0.01\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 2\n0.29\n0.69\n0.91\n0.98\n1.00\n0.00\n0.00\n0.00\n0.00\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb_f\n\n\nOR 1/2\n0.00\n0.00\n0.00\n0.00\n0.00\n0.98\n1.00\n1.00\n1.00\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1/1.5\n0.00\n0.00\n0.00\n0.00\n0.00\n0.80\n0.97\n1.00\n1.00\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1/1.2\n0.00\n0.00\n0.00\n0.00\n0.00\n0.45\n0.74\n0.88\n0.95\n0.97\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1\n0.01\n0.02\n0.02\n0.03\n0.03\n0.17\n0.32\n0.44\n0.54\n0.62\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1.2\n0.06\n0.13\n0.21\n0.28\n0.36\n0.04\n0.07\n0.09\n0.11\n0.12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 1.5\n0.25\n0.53\n0.73\n0.86\n0.93\n0.00\n0.01\n0.01\n0.01\n0.01\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOR 2\n0.61\n0.93\n0.99\n1.00\n1.00\n0.00\n0.00\n0.00\n0.00\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Cumulative probability of decision\n\n\n\n\nFigure 2 shows the distribution of estimated posterior means by simulated effect size, parameter and sample size.\n\n\n\n\n\n\n\n\nFigure 2: Distribution of posterior means (true log OR shown in red).",
    "crumbs": [
      "Design",
      "Simulation results 3"
    ]
  },
  {
    "objectID": "notebooks/trial-data.html",
    "href": "notebooks/trial-data.html",
    "title": "Simulated trial data",
    "section": "",
    "text": "The following give a sense of the number of participants contributing to each treatment arm and cell. The data are simulated under the model specification with a total sample size of 2500.\nCode\nset.seed(1)\nll &lt;- get_trial_data(N = 2500)\n\nd &lt;- copy(ll$d)",
    "crumbs": [
      "Design",
      "Simulated trial data"
    ]
  },
  {
    "objectID": "notebooks/trial-data.html#surgical-domain",
    "href": "notebooks/trial-data.html#surgical-domain",
    "title": "Simulated trial data",
    "section": "Surgical domain",
    "text": "Surgical domain\nOnly patients in the late silo receive randomised surgical treatment (dair vs revision) with the type of revision selected by the clinician. Table 1 shows the allocation to dair vs rev for this cohort and the balance across the remaining group levels in the data.\n\n\nCode\n# domain B\nd_tmp1 &lt;- d[l1 == 1 & er == 1, .(er, r, ed, srp, d)]\nd_tmp2 &lt;- d_tmp1[, .N, keyby = .(r, ed, srp, d)]\nd_B &lt;- dcast(d_tmp2, ed + d + srp ~ r, value.var = \"N\")\nd_B[, domain := \"Duration\"]\ncolnames(d_B) &lt;- c(\"rand\", \"group\", \"surgery\", \"dair\", \"rev\", \"domain\")\nsetcolorder(d_B, \"domain\")\n# domain C\nd_tmp1 &lt;- d[l1 == 1 & er == 1, .(er, r, ef, srp, f)]\nd_tmp2 &lt;- d_tmp1[, .N, keyby = .(r, ef, srp, f)]\nd_C &lt;- dcast(d_tmp2, ef + f + srp ~ r, value.var = \"N\")\nd_C[, domain := \"Choice\"]\ncolnames(d_C) &lt;- c(\"rand\", \"group\", \"surgery\", \"dair\", \"rev\", \"domain\")\nsetcolorder(d_C, \"domain\")\n\nd_tbl &lt;- rbind(d_B, d_C, fill = TRUE)\n# d_tbl[, group := factor(group, levels = c(\"w12\",\"w12p1\", \"w06p1\", \"w12p2\", \"d07p2\", \"other\", \"norif\", \"rif\"))]\nd_tbl &lt;- d_tbl[order(domain, rand, surgery, group)]\n\nd_tbl[, total := rowSums(d_tbl[, .(dair, rev)], na.rm = T)]\nd_tbl[domain == \"Choice\" & rand == 0, group := NA]\nd_tbl[domain == \"Duration\" & rand == 0, group := NA]\n\ncols &lt;- c(\"Domain\", \"Revealed\", \"Treatment\", \"Surgery recvd\", \"DAIR\", \"Revision\", \"Total\")\nnames(cols) &lt;- names(d_tbl)\n\ngt_tbl &lt;- d_tbl |&gt; \n  gt(groupname_col = \"domain\"\n  )  |&gt;\n  tab_spanner(\n    label = html(\"Domain A (late silo)\"),\n    columns = c(dair, rev),\n    id = \"da\"\n  ) |&gt;\n  sub_missing(\n    columns = everything(),\n    missing_text = \"-\"\n  ) |&gt;\n  cols_label(.list = cols) |&gt; \n  summary_rows(\n    columns = c(\"dair\", \"rev\", \"total\"),\n    fns = list(\n      subtotal = ~ sum(., na.rm = TRUE)\n    )\n  )  |&gt;\n  tab_footnote(\n    footnote = \"Revealed indicates whether units were randomised into choice/duration domain (0: No, 1: Yes)\",\n    locations = cells_column_labels(columns = rand)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Surgery recvd indicates surgery type actually perfromed (0: dair, 1: one-stage, 2: two-stage). Surgery recvd may deviate from original randomisation/plan.\",\n    locations = cells_column_labels(columns = surgery)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Treatment indicates which treatment assigned within domain. For choice (0: no-rif, 1: rif). For duration is specific to surgery type received (0: long, 1: short). Units that were not randomised within the choice/duration domain have undefined randomised treatment status.\",\n    locations = cells_column_labels(columns = group)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Only units randomised to surgery domain reported.\",\n    locations = cells_column_spanners(spanners = \"da\")\n  )\n\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\nRevealed2\nTreatment3\nSurgery recvd4\nDomain A (late silo)1\nTotal\n\n\nDAIR\nRevision\n\n\n\n\nChoice\n\n\n\n0\n-\n0\n253\n-\n253\n\n\n\n0\n-\n1\n-\n77\n77\n\n\n\n0\n-\n2\n-\n178\n178\n\n\n\n1\n0\n0\n198\n-\n198\n\n\n\n1\n1\n0\n182\n-\n182\n\n\n\n1\n0\n1\n-\n68\n68\n\n\n\n1\n1\n1\n-\n56\n56\n\n\n\n1\n0\n2\n-\n121\n121\n\n\n\n1\n1\n2\n-\n142\n142\n\n\nsubtotal\n—\n—\n—\n633\n642\n1275\n\n\nDuration\n\n\n\n0\n-\n0\n633\n-\n633\n\n\n\n1\n0\n1\n-\n91\n91\n\n\n\n1\n1\n1\n-\n110\n110\n\n\n\n1\n0\n2\n-\n224\n224\n\n\n\n1\n1\n2\n-\n217\n217\n\n\nsubtotal\n—\n—\n—\n633\n642\n1275\n\n\n\n1 Only units randomised to surgery domain reported.\n\n\n2 Revealed indicates whether units were randomised into choice/duration domain (0: No, 1: Yes)\n\n\n3 Treatment indicates which treatment assigned within domain. For choice (0: no-rif, 1: rif). For duration is specific to surgery type received (0: long, 1: short). Units that were not randomised within the choice/duration domain have undefined randomised treatment status.\n\n\n4 Surgery recvd indicates surgery type actually perfromed (0: dair, 1: one-stage, 2: two-stage). Surgery recvd may deviate from original randomisation/plan.\n\n\n\n\n\n\n\n\n\nTable 1: Simulated trial data for (late silo) surgical domain - covariate balance across other groups",
    "crumbs": [
      "Design",
      "Simulated trial data"
    ]
  },
  {
    "objectID": "notebooks/trial-data.html#duration-domain",
    "href": "notebooks/trial-data.html#duration-domain",
    "title": "Simulated trial data",
    "section": "Duration domain",
    "text": "Duration domain\nTable 2 shows the allocation to the duration domain conditional on surgery type actually received and the balance across the remaining group levels in the data. Only units randomised within the duration domain are reported.\n\n\nCode\n# domain B\nd_tmp1 &lt;- d[ed == 1, .(ed, d, er, r, srp)]\nd_tmp2 &lt;- d_tmp1[, .N, keyby = .(d, er, r,srp)]\n# d_tmp2[, b := factor(b, levels = c(\"w12\", \"w06p1\", \"w12p1\", \"d07p2\", \"w12p2\"))]\nd_B &lt;- dcast(d_tmp2, er + r ~ srp + d, value.var = \"N\")\nd_B[, domain := \"Surgery\"]\ncolnames(d_B) &lt;- c(\"rand\", \"group\", c(\"long_1\", \"short_1\", \"long_2\", \"short_2\"), \"domain\")\nsetcolorder(d_B, \"domain\")\n# domain C\nd_tmp1 &lt;- d[ed == 1, .(ed, d, ef, f, srp)]\nd_tmp2 &lt;- d_tmp1[, .N, keyby = .(d, ef, f, srp)]\n# d_tmp2[, b := factor(b, levels = c(\"w12\", \"w06p1\", \"w12p1\", \"d07p2\", \"w12p2\"))]\nd_C &lt;- dcast(d_tmp2, ef + f ~ srp + d, value.var = \"N\")\nd_C[, domain := \"Choice\"]\ncolnames(d_C) &lt;- c(\"rand\", \"group\", c(\"long_1\", \"short_1\", \"long_2\", \"short_2\"), \"domain\")\nsetcolorder(d_C, \"domain\")\n\nd_tbl &lt;- rbind(d_B, d_C, fill = T)\n\nd_tbl[, total := rowSums(d_tbl[, .(long_1, short_1, long_2, short_2)], na.rm = T)]\nd_tbl[domain == \"Surgery\" & rand == 0, group := NA]\nd_tbl[domain == \"Choice\" & rand == 0, group := NA]\n\ncols &lt;- c(\"Domain\", \"Revealed\", \"Treatment\", c(\"long\", \"short\", \"long\", \"short\"), \"Total\")\nnames(cols) &lt;- names(d_tbl)\n\ngt_tbl &lt;- d_tbl |&gt; \n  gt(groupname_col = \"domain\"\n  ) |&gt; \n  summary_rows(\n    columns = c(\"long_1\", \"short_1\", \"long_2\", \"short_2\", \"total\"),\n    fns = list(\n      subtotal = ~ sum(., na.rm = TRUE)\n    )\n  )   |&gt;\n  tab_spanner(\n    label = html(\"AB Duration &lt;br&gt;(one-stage)\"),\n    columns = c(\"long_1\", \"short_1\"),\n    id = \"d1\"\n  ) |&gt;\n  tab_spanner(\n    label = html(\"AB Duration &lt;br&gt;(two-stage)\"),\n    columns = c(\"long_2\", \"short_2\"),\n    id = \"d2\"\n  ) |&gt;\n  sub_missing(\n    columns = everything(),\n    missing_text = \"-\"\n  ) |&gt;\n  cols_label(.list = cols)  |&gt;\n  tab_footnote(\n    footnote = \"Revealed indicates whether units were randomised into surgery/duration domain (0: No, 1: Yes)\",\n    locations = cells_column_labels(columns = rand)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Treatment indicates which treatment assigned within domain. For choice (0: no-rif, 1: rif). For duration is specific to surgery type received (0: long, 1: short). Units that were not randomised within the surgery/choice domain have undefined randomised treatment status.\",\n    locations = cells_column_labels(columns = group)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Only units randomised to interventions in the surgery domain reported. One-stage/two-stage is by clinician selection\",\n    locations = cells_column_spanners(spanners = c(\"d1\", \"d2\"))\n  )\n\n\n\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRevealed2\nTreatment3\nAB Duration\n(one-stage)1\nAB Duration\n(two-stage)1\nTotal\n\n\nlong\nshort\nlong\nshort\n\n\n\n\nSurgery\n\n\n\n0\n-\n88\n88\n159\n147\n482\n\n\n\n1\n1\n91\n110\n224\n217\n642\n\n\nsubtotal\n—\n—\n179\n198\n383\n364\n1124\n\n\nChoice\n\n\n\n0\n-\n71\n83\n151\n151\n456\n\n\n\n1\n0\n56\n60\n100\n105\n321\n\n\n\n1\n1\n52\n55\n132\n108\n347\n\n\nsubtotal\n—\n—\n179\n198\n383\n364\n1124\n\n\n\n1 Only units randomised to interventions in the surgery domain reported. One-stage/two-stage is by clinician selection\n\n\n2 Revealed indicates whether units were randomised into surgery/duration domain (0: No, 1: Yes)\n\n\n3 Treatment indicates which treatment assigned within domain. For choice (0: no-rif, 1: rif). For duration is specific to surgery type received (0: long, 1: short). Units that were not randomised within the surgery/choice domain have undefined randomised treatment status.\n\n\n\n\n\n\n\n\n\nTable 2: Simulated trial data for AB duration domain - covariate balance across other groups",
    "crumbs": [
      "Design",
      "Simulated trial data"
    ]
  },
  {
    "objectID": "notebooks/trial-data.html#choice-domain",
    "href": "notebooks/trial-data.html#choice-domain",
    "title": "Simulated trial data",
    "section": "Choice domain",
    "text": "Choice domain\nTable 3 shows the allocation to the choice domain and the balance across the remaining group levels in the data. Only units randomised within the antibiotic choice domain are reported.\n\n\nCode\n# domain \nd_tmp1 &lt;- d[ef == 1, .(f, er, r, srp)]\nd_tmp2 &lt;- d_tmp1[, .N, keyby = .(f, er, r, srp)]\n# d_tmp2[, a := factor(a, levels = c(\"dair\", \"rev\", \"one\", \"two\"))]\n# d_tmp2[, qa := factor(qa, levels = c(\"dair\", \"one\", \"two\"))]\n# d_tmp2[, c := factor(c, levels = c(\"other\", \"norif\", \"rif\"))]\nd_A &lt;- dcast(d_tmp2, er + srp + r ~ f, value.var = \"N\")\nd_A[, domain := \"Surgery\"]\ncolnames(d_A) &lt;- c(\"rand\", \"surgery\",\"group\",  c(\"norif\", \"rif\"), \"domain\")\nsetcolorder(d_A, \"domain\")\n# domain\nd_tmp1 &lt;- d[ef == 1, .(f, ed, d, srp)]\nd_tmp2 &lt;- d_tmp1[, .N, keyby = .(f, ed, d, srp)]\n# d_tmp2[, b := factor(b, levels = c(\"w12\", \"w06p1\", \"w12p1\", \"d07p2\", \"w12p2\"))]\n# d_tmp2[, c := factor(c, levels = c(\"other\", \"norif\", \"rif\"))]\nd_B &lt;- dcast(d_tmp2, ed + srp + d ~ f, value.var = \"N\")\nd_B[, domain := \"Duration\"]\ncolnames(d_B) &lt;- c(\"rand\", \"surgery\", \"group\", c(\"norif\", \"rif\"), \"domain\")\nsetcolorder(d_B, \"domain\")\n\nd_tbl &lt;- rbind(d_A, d_B, fill = T)\n\nd_tbl[, total := rowSums(d_tbl[, .(norif, rif)], na.rm = T)]\n\nd_tbl[domain == \"Surgery\" & rand == 0, group := NA]\nd_tbl[domain == \"Duration\" & rand == 0, group := NA]\n\n\n\ncols &lt;- c(\"Domain\", \"Revealed\", \"Surgery recvd\", \"Treatment\", c(\"norif\", \"rif\"), \"Total\")\nnames(cols) &lt;- names(d_tbl)\n\ngt_tbl &lt;- d_tbl |&gt; \n  gt(groupname_col = \"domain\"\n  ) |&gt; \n  summary_rows(\n    columns = c(\"norif\", \"rif\", \"total\"),\n    fns = list(\n      subtotal = ~ sum(., na.rm = TRUE)\n    )\n  ) |&gt;\n  tab_spanner(\n    label = html(\"AB Choice\"),\n    columns = c(\"norif\", \"rif\"),\n    id = \"c1\"\n  ) |&gt;\n  sub_missing(\n    columns = everything(),\n    missing_text = \"-\"\n  ) |&gt;\n  cols_label(.list = cols)|&gt;\n  tab_footnote(\n    footnote = \"Revealed indicates whether units were randomised into surgery/choice domain (0: No, 1: Yes)\",\n    locations = cells_column_labels(columns = rand)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Treatment indicates which treatment assigned within domain. For surgery (0: dair, 1: rev). For duration is specific to surgery type received (0: long, 1: short). Units that were not randomised within the surgery/duration domain have undefined randomised treatment status.\",\n    locations = cells_column_labels(columns = group)\n  ) |&gt;\n  tab_footnote(\n    footnote = \"Only units randomised to interventions in the antibiotic choice domain reported.\",\n    locations = cells_column_spanners(spanners = c(\"c1\"))\n  )\n\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\nRevealed2\nSurgery recvd\nTreatment3\nAB Choice1\nTotal\n\n\nnorif\nrif\n\n\n\n\nSurgery\n\n\n\n0\n0\n-\n229\n232\n461\n\n\n\n0\n1\n-\n48\n51\n99\n\n\n\n0\n2\n-\n84\n98\n182\n\n\n\n1\n0\n0\n198\n182\n380\n\n\n\n1\n1\n1\n68\n56\n124\n\n\n\n1\n2\n1\n121\n142\n263\n\n\nsubtotal\n—\n—\n—\n748\n761\n1509\n\n\nDuration\n\n\n\n0\n0\n-\n427\n414\n841\n\n\n\n1\n1\n0\n56\n52\n108\n\n\n\n1\n1\n1\n60\n55\n115\n\n\n\n1\n2\n0\n100\n132\n232\n\n\n\n1\n2\n1\n105\n108\n213\n\n\nsubtotal\n—\n—\n—\n748\n761\n1509\n\n\n\n1 Only units randomised to interventions in the antibiotic choice domain reported.\n\n\n2 Revealed indicates whether units were randomised into surgery/choice domain (0: No, 1: Yes)\n\n\n3 Treatment indicates which treatment assigned within domain. For surgery (0: dair, 1: rev). For duration is specific to surgery type received (0: long, 1: short). Units that were not randomised within the surgery/duration domain have undefined randomised treatment status.\n\n\n\n\n\n\n\n\n\nTable 3: Simulated trial data for AB choice domain - covariate balance across other groups",
    "crumbs": [
      "Design",
      "Simulated trial data"
    ]
  }
]